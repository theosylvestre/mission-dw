define(["@grafana/data","lodash","@grafana/runtime","react","@grafana/ui"],((e,t,n,a,r)=>(()=>{var i={14:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var a=n(942),r=n.n(a),i=n(278),s=n.n(i)()(r());s.push([e.id,".adhoc-filters-tags {\n  margin: 5px 0;\n}\n\n.adhoc-filters-tags > div {\n  display: none;\n}\n","",{version:3,sources:["webpack://./views/QueryEditor/QueryEditor.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf",sourcesContent:[".adhoc-filters-tags {\n  margin: 5px 0;\n}\n\n.adhoc-filters-tags > div {\n  display: none;\n}\n"],sourceRoot:""}]);const o=s},278:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(a)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(s[l]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);a&&s[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},942:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},285:function(e){e.exports=function(){"use strict";var e=6e4,t=36e5,n="millisecond",a="second",r="minute",i="hour",s="day",o="week",l="month",u="quarter",c="year",d="date",m="Invalid Date",h=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,f=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,g={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(e){var t=["th","st","nd","rd"],n=e%100;return"["+e+(t[(n-20)%10]||t[n]||t[0])+"]"}},p=function(e,t,n){var a=String(e);return!a||a.length>=t?e:""+Array(t+1-a.length).join(n)+e},y={s:p,z:function(e){var t=-e.utcOffset(),n=Math.abs(t),a=Math.floor(n/60),r=n%60;return(t<=0?"+":"-")+p(a,2,"0")+":"+p(r,2,"0")},m:function e(t,n){if(t.date()<n.date())return-e(n,t);var a=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(a,l),i=n-r<0,s=t.clone().add(a+(i?-1:1),l);return+(-(a+(n-r)/(i?r-s:s-r))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(e){return{M:l,y:c,w:o,d:s,D:d,h:i,m:r,s:a,ms:n,Q:u}[e]||String(e||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},T="en",v={};v[T]=g;var b="$isDayjsObject",S=function(e){return e instanceof D||!(!e||!e[b])},x=function e(t,n,a){var r;if(!t)return T;if("string"==typeof t){var i=t.toLowerCase();v[i]&&(r=i),n&&(v[i]=n,r=i);var s=t.split("-");if(!r&&s.length>1)return e(s[0])}else{var o=t.name;v[o]=t,r=o}return!a&&r&&(T=r),r||!a&&T},w=function(e,t){if(S(e))return e.clone();var n="object"==typeof t?t:{};return n.date=e,n.args=arguments,new D(n)},I=y;I.l=x,I.i=S,I.w=function(e,t){return w(e,{locale:t.$L,utc:t.$u,x:t.$x,$offset:t.$offset})};var D=function(){function g(e){this.$L=x(e.locale,null,!0),this.parse(e),this.$x=this.$x||e.x||{},this[b]=!0}var p=g.prototype;return p.parse=function(e){this.$d=function(e){var t=e.date,n=e.utc;if(null===t)return new Date(NaN);if(I.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var a=t.match(h);if(a){var r=a[2]-1||0,i=(a[7]||"0").substring(0,3);return n?new Date(Date.UTC(a[1],r,a[3]||1,a[4]||0,a[5]||0,a[6]||0,i)):new Date(a[1],r,a[3]||1,a[4]||0,a[5]||0,a[6]||0,i)}}return new Date(t)}(e),this.init()},p.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},p.$utils=function(){return I},p.isValid=function(){return!(this.$d.toString()===m)},p.isSame=function(e,t){var n=w(e);return this.startOf(t)<=n&&n<=this.endOf(t)},p.isAfter=function(e,t){return w(e)<this.startOf(t)},p.isBefore=function(e,t){return this.endOf(t)<w(e)},p.$g=function(e,t,n){return I.u(e)?this[t]:this.set(n,e)},p.unix=function(){return Math.floor(this.valueOf()/1e3)},p.valueOf=function(){return this.$d.getTime()},p.startOf=function(e,t){var n=this,u=!!I.u(t)||t,m=I.p(e),h=function(e,t){var a=I.w(n.$u?Date.UTC(n.$y,t,e):new Date(n.$y,t,e),n);return u?a:a.endOf(s)},f=function(e,t){return I.w(n.toDate()[e].apply(n.toDate("s"),(u?[0,0,0,0]:[23,59,59,999]).slice(t)),n)},g=this.$W,p=this.$M,y=this.$D,T="set"+(this.$u?"UTC":"");switch(m){case c:return u?h(1,0):h(31,11);case l:return u?h(1,p):h(0,p+1);case o:var v=this.$locale().weekStart||0,b=(g<v?g+7:g)-v;return h(u?y-b:y+(6-b),p);case s:case d:return f(T+"Hours",0);case i:return f(T+"Minutes",1);case r:return f(T+"Seconds",2);case a:return f(T+"Milliseconds",3);default:return this.clone()}},p.endOf=function(e){return this.startOf(e,!1)},p.$set=function(e,t){var o,u=I.p(e),m="set"+(this.$u?"UTC":""),h=(o={},o[s]=m+"Date",o[d]=m+"Date",o[l]=m+"Month",o[c]=m+"FullYear",o[i]=m+"Hours",o[r]=m+"Minutes",o[a]=m+"Seconds",o[n]=m+"Milliseconds",o)[u],f=u===s?this.$D+(t-this.$W):t;if(u===l||u===c){var g=this.clone().set(d,1);g.$d[h](f),g.init(),this.$d=g.set(d,Math.min(this.$D,g.daysInMonth())).$d}else h&&this.$d[h](f);return this.init(),this},p.set=function(e,t){return this.clone().$set(e,t)},p.get=function(e){return this[I.p(e)]()},p.add=function(n,u){var d,m=this;n=Number(n);var h=I.p(u),f=function(e){var t=w(m);return I.w(t.date(t.date()+Math.round(e*n)),m)};if(h===l)return this.set(l,this.$M+n);if(h===c)return this.set(c,this.$y+n);if(h===s)return f(1);if(h===o)return f(7);var g=(d={},d[r]=e,d[i]=t,d[a]=1e3,d)[h]||1,p=this.$d.getTime()+n*g;return I.w(p,this)},p.subtract=function(e,t){return this.add(-1*e,t)},p.format=function(e){var t=this,n=this.$locale();if(!this.isValid())return n.invalidDate||m;var a=e||"YYYY-MM-DDTHH:mm:ssZ",r=I.z(this),i=this.$H,s=this.$m,o=this.$M,l=n.weekdays,u=n.months,c=n.meridiem,d=function(e,n,r,i){return e&&(e[n]||e(t,a))||r[n].slice(0,i)},h=function(e){return I.s(i%12||12,e,"0")},g=c||function(e,t,n){var a=e<12?"AM":"PM";return n?a.toLowerCase():a};return a.replace(f,(function(e,a){return a||function(e){switch(e){case"YY":return String(t.$y).slice(-2);case"YYYY":return I.s(t.$y,4,"0");case"M":return o+1;case"MM":return I.s(o+1,2,"0");case"MMM":return d(n.monthsShort,o,u,3);case"MMMM":return d(u,o);case"D":return t.$D;case"DD":return I.s(t.$D,2,"0");case"d":return String(t.$W);case"dd":return d(n.weekdaysMin,t.$W,l,2);case"ddd":return d(n.weekdaysShort,t.$W,l,3);case"dddd":return l[t.$W];case"H":return String(i);case"HH":return I.s(i,2,"0");case"h":return h(1);case"hh":return h(2);case"a":return g(i,s,!0);case"A":return g(i,s,!1);case"m":return String(s);case"mm":return I.s(s,2,"0");case"s":return String(t.$s);case"ss":return I.s(t.$s,2,"0");case"SSS":return I.s(t.$ms,3,"0");case"Z":return r}return null}(e)||r.replace(":","")}))},p.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},p.diff=function(n,d,m){var h,f=this,g=I.p(d),p=w(n),y=(p.utcOffset()-this.utcOffset())*e,T=this-p,v=function(){return I.m(f,p)};switch(g){case c:h=v()/12;break;case l:h=v();break;case u:h=v()/3;break;case o:h=(T-y)/6048e5;break;case s:h=(T-y)/864e5;break;case i:h=T/t;break;case r:h=T/e;break;case a:h=T/1e3;break;default:h=T}return m?h:I.a(h)},p.daysInMonth=function(){return this.endOf(l).$D},p.$locale=function(){return v[this.$L]},p.locale=function(e,t){if(!e)return this.$L;var n=this.clone(),a=x(e,t,!0);return a&&(n.$L=a),n},p.clone=function(){return I.w(this.$d,this)},p.toDate=function(){return new Date(this.valueOf())},p.toJSON=function(){return this.isValid()?this.toISOString():null},p.toISOString=function(){return this.$d.toISOString()},p.toString=function(){return this.$d.toUTCString()},g}(),E=D.prototype;return w.prototype=E,[["$ms",n],["$s",a],["$m",r],["$H",i],["$W",s],["$M",l],["$y",c],["$D",d]].forEach((function(e){E[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),w.extend=function(e,t){return e.$i||(e(t,D,w),e.$i=!0),w},w.locale=x,w.isDayjs=S,w.unix=function(e){return w(1e3*e)},w.en=v[T],w.Ls=v,w.p={},w}()},292:e=>{"use strict";var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var i={},s=[],o=0;o<e.length;o++){var l=e[o],u=a.base?l[0]+a.base:l[0],c=i[u]||0,d="".concat(u," ").concat(c);i[u]=c+1;var m=n(d),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==m)t[m].references++,t[m].updater(h);else{var f=r(h,a);a.byIndex=o,t.splice(o,0,{identifier:d,updater:f,references:1})}s.push(d)}return s}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=a(e=e||[],r=r||{});return function(e){e=e||[];for(var s=0;s<i.length;s++){var o=n(i[s]);t[o].references--}for(var l=a(e,r),u=0;u<i.length;u++){var c=n(i[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}i=l}}},383:e=>{"use strict";var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},88:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},884:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},893:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,r&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},997:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},781:t=>{"use strict";t.exports=e},531:e=>{"use strict";e.exports=n},7:e=>{"use strict";e.exports=r},241:e=>{"use strict";e.exports=t},959:e=>{"use strict";e.exports=a}},s={};function o(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={id:e,exports:{}};return i[e].call(n.exports,n,n.exports,o),n.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.nc=void 0;var l={};return(()=>{"use strict";o.r(l),o.d(l,{plugin:()=>js});var e=o(781),t=o(241),n=o.n(t);Math.pow(10,8);const a=36e5,r=Symbol.for("constructDateFrom");function i(e,t){return"function"==typeof e?e(t):e&&"object"==typeof e&&r in e?e[r](t):e instanceof Date?new e.constructor(t):new Date(t)}function s(e,t){return i(t||e,e)}function u(e,t){const n=()=>i(t?.in,NaN),r=t?.additionalDigits??2,o=function(e){const t={},n=e.split(c.dateTimeDelimiter);let a;if(n.length>2)return t;if(/:/.test(n[0])?a=n[0]:(t.date=n[0],a=n[1],c.timeZoneDelimiter.test(t.date)&&(t.date=e.split(c.timeZoneDelimiter)[0],a=e.substr(t.date.length,e.length))),a){const e=c.timezone.exec(a);e?(t.time=a.replace(e[1],""),t.timezone=e[1]):t.time=a}return t}(e);let l;if(o.date){const e=function(e,t){const n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),a=e.match(n);if(!a)return{year:NaN,restDateString:""};const r=a[1]?parseInt(a[1]):null,i=a[2]?parseInt(a[2]):null;return{year:null===i?r:100*i,restDateString:e.slice((a[1]||a[2]).length)}}(o.date,r);l=function(e,t){if(null===t)return new Date(NaN);const n=e.match(d);if(!n)return new Date(NaN);const a=!!n[4],r=f(n[1]),i=f(n[2])-1,s=f(n[3]),o=f(n[4]),l=f(n[5])-1;if(a)return function(e,t,n){return t>=1&&t<=53&&n>=0&&n<=6}(0,o,l)?function(e,t,n){const a=new Date(0);a.setUTCFullYear(e,0,4);const r=7*(t-1)+n+1-(a.getUTCDay()||7);return a.setUTCDate(a.getUTCDate()+r),a}(t,o,l):new Date(NaN);{const e=new Date(0);return function(e,t,n){return t>=0&&t<=11&&n>=1&&n<=(p[t]||(y(e)?29:28))}(t,i,s)&&function(e,t){return t>=1&&t<=(y(e)?366:365)}(t,r)?(e.setUTCFullYear(t,i,Math.max(r,s)),e):new Date(NaN)}}(e.restDateString,e.year)}if(!l||isNaN(+l))return n();const u=+l;let T,v=0;if(o.time&&(v=function(e){const t=e.match(m);if(!t)return NaN;const n=g(t[1]),r=g(t[2]),i=g(t[3]);return function(e,t,n){return 24===e?0===t&&0===n:n>=0&&n<60&&t>=0&&t<60&&e>=0&&e<25}(n,r,i)?n*a+6e4*r+1e3*i:NaN}(o.time),isNaN(v)))return n();if(!o.timezone){const e=new Date(u+v),n=s(0,t?.in);return n.setFullYear(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate()),n.setHours(e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds(),e.getUTCMilliseconds()),n}return T=function(e){if("Z"===e)return 0;const t=e.match(h);if(!t)return 0;const n="+"===t[1]?-1:1,r=parseInt(t[2]),i=t[3]&&parseInt(t[3])||0;return function(e,t){return t>=0&&t<=59}(0,i)?n*(r*a+6e4*i):NaN}(o.timezone),isNaN(T)?n():s(u+v+T,t?.in)}const c={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},d=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,m=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,h=/^([+-])(\d{2})(?::?(\d{2}))?$/;function f(e){return e?parseInt(e):1}function g(e){return e&&parseFloat(e.replace(",","."))||0}const p=[31,null,31,30,31,30,31,31,30,31,30,31];function y(e){return e%400==0||e%4==0&&e%100!=0}const T={year:0,month:1,day:2,hour:3,minute:4,second:5},v={},b=new Intl.DateTimeFormat("en-US",{hourCycle:"h23",timeZone:"America/New_York",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}).format(new Date("2014-06-25T04:00:00.123Z")),S="06/25/2014, 00:00:00"===b||"‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00"===b;function x(e,t,n,a,r,i,s){const o=new Date(0);return o.setUTCFullYear(e,t,n),o.setUTCHours(a,r,i,s),o}const w=36e5,I=6e4,D={timezone:/([Z+-].*)$/,timezoneZ:/^(Z)$/,timezoneHH:/^([+-]\d{2})$/,timezoneHHMM:/^([+-])(\d{2}):?(\d{2})$/};function E(e,t,n){if(!e)return 0;let a,r,i=D.timezoneZ.exec(e);if(i)return 0;if(i=D.timezoneHH.exec(e),i)return a=parseInt(i[1],10),C(a)?-a*w:NaN;if(i=D.timezoneHHMM.exec(e),i){a=parseInt(i[2],10);const e=parseInt(i[3],10);return C(a,e)?(r=Math.abs(a)*w+e*I,"+"===i[1]?-r:r):NaN}if(function(e){if(A[e])return!0;try{return new Intl.DateTimeFormat(void 0,{timeZone:e}),A[e]=!0,!0}catch(e){return!1}}(e)){t=new Date(t||Date.now());const a=n?t:function(e){return x(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds())}(t),r=O(a,e),i=n?r:function(e,t,n){let a=e.getTime()-t;const r=O(new Date(a),n);if(t===r)return t;a-=r-t;const i=O(new Date(a),n);return r===i?r:Math.max(r,i)}(t,r,e);return-i}return NaN}function O(e,t){const n=function(e,t){const n=function(e){return v[e]||(v[e]=S?new Intl.DateTimeFormat("en-US",{hourCycle:"h23",timeZone:e,year:"numeric",month:"numeric",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}):new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:e,year:"numeric",month:"numeric",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})),v[e]}(t);return"formatToParts"in n?function(e,t){try{const n=e.formatToParts(t),a=[];for(let e=0;e<n.length;e++){const t=T[n[e].type];void 0!==t&&(a[t]=parseInt(n[e].value,10))}return a}catch(e){if(e instanceof RangeError)return[NaN];throw e}}(n,e):function(e,t){const n=e.format(t),a=/(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(n);return[parseInt(a[3],10),parseInt(a[1],10),parseInt(a[2],10),parseInt(a[4],10),parseInt(a[5],10),parseInt(a[6],10)]}(n,e)}(e,t),a=x(n[0],n[1]-1,n[2],n[3]%24,n[4],n[5],0).getTime();let r=e.getTime();const i=r%1e3;return r-=i>=0?i:1e3+i,a-r}function C(e,t){return-23<=e&&e<=23&&(null==t||0<=t&&t<=59)}const A={};function N(e){const t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),+e-+t}const k=36e5,F={dateTimePattern:/^([0-9W+-]+)(T| )(.*)/,datePattern:/^([0-9W+-]+)(.*)/,plainTime:/:/,YY:/^(\d{2})$/,YYY:[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],YYYY:/^(\d{4})/,YYYYY:[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],MM:/^-(\d{2})$/,DDD:/^-?(\d{3})$/,MMDD:/^-?(\d{2})-?(\d{2})$/,Www:/^-?W(\d{2})$/,WwwD:/^-?W(\d{2})-?(\d{1})$/,HH:/^(\d{2}([.,]\d*)?)$/,HHMM:/^(\d{2}):?(\d{2}([.,]\d*)?)$/,HHMMSS:/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,timeZone:/(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/};function R(e,t,n){t=t||0,n=n||0;const a=new Date(0);a.setUTCFullYear(e,0,4);const r=7*t+n+1-(a.getUTCDay()||7);return a.setUTCDate(a.getUTCDate()+r),a}const $=[31,28,31,30,31,30,31,31,30,31,30,31],M=[31,29,31,30,31,30,31,31,30,31,30,31];function _(e){return e%400==0||e%4==0&&e%100!=0}function U(e,t,n){if(t<0||t>11)return!1;if(null!=n){if(n<1)return!1;const a=_(e);if(a&&n>M[t])return!1;if(!a&&n>$[t])return!1}return!0}function L(e,t){return!(e<0||e>52||null!=t&&(t<0||t>6))}function H(e,t,n){return!(e<0||e>=25||null!=t&&(t<0||t>=60)||null!=n&&(n<0||n>=60))}const P=(e,t)=>{function n(e,t){if(t.startsWith("DateTime64")){const n=t.match(/DateTime64\(\d+,\s*'([^']+)'\)/);if(n){const t=n[1];return function(e,t,n){const a=E(t,e=function(e,t={}){if(arguments.length<1)throw new TypeError("1 argument required, but only "+arguments.length+" present");if(null===e)return new Date(NaN);const n=null==t.additionalDigits?2:Number(t.additionalDigits);if(2!==n&&1!==n&&0!==n)throw new RangeError("additionalDigits must be 0, 1 or 2");if(e instanceof Date||"object"==typeof e&&"[object Date]"===Object.prototype.toString.call(e))return new Date(e.getTime());if("number"==typeof e||"[object Number]"===Object.prototype.toString.call(e))return new Date(e);if("[object String]"!==Object.prototype.toString.call(e))return new Date(NaN);const a=function(e){const t={};let n,a=F.dateTimePattern.exec(e);if(a?(t.date=a[1],n=a[3]):(a=F.datePattern.exec(e),a?(t.date=a[1],n=a[2]):(t.date=null,n=e)),n){const e=F.timeZone.exec(n);e?(t.time=n.replace(e[1],""),t.timeZone=e[1].trim()):t.time=n}return t}(e),{year:r,restDateString:i}=function(e,t){if(e){const n=F.YYY[t],a=F.YYYYY[t];let r=F.YYYY.exec(e)||a.exec(e);if(r){const t=r[1];return{year:parseInt(t,10),restDateString:e.slice(t.length)}}if(r=F.YY.exec(e)||n.exec(e),r){const t=r[1];return{year:100*parseInt(t,10),restDateString:e.slice(t.length)}}}return{year:null}}(a.date,n),s=function(e,t){if(null===t)return null;let n,a,r;if(!e||!e.length)return n=new Date(0),n.setUTCFullYear(t),n;let i=F.MM.exec(e);if(i)return n=new Date(0),a=parseInt(i[1],10)-1,U(t,a)?(n.setUTCFullYear(t,a),n):new Date(NaN);if(i=F.DDD.exec(e),i){n=new Date(0);const e=parseInt(i[1],10);return function(e,t){if(t<1)return!1;const n=_(e);return!(n&&t>366||!n&&t>365)}(t,e)?(n.setUTCFullYear(t,0,e),n):new Date(NaN)}if(i=F.MMDD.exec(e),i){n=new Date(0),a=parseInt(i[1],10)-1;const e=parseInt(i[2],10);return U(t,a,e)?(n.setUTCFullYear(t,a,e),n):new Date(NaN)}if(i=F.Www.exec(e),i)return r=parseInt(i[1],10)-1,L(r)?R(t,r):new Date(NaN);if(i=F.WwwD.exec(e),i){r=parseInt(i[1],10)-1;const e=parseInt(i[2],10)-1;return L(r,e)?R(t,r,e):new Date(NaN)}return null}(i,r);if(null===s||isNaN(s.getTime()))return new Date(NaN);if(s){const e=s.getTime();let n,r=0;if(a.time&&(r=function(e){let t,n,a=F.HH.exec(e);if(a)return t=parseFloat(a[1].replace(",",".")),H(t)?t%24*k:NaN;if(a=F.HHMM.exec(e),a)return t=parseInt(a[1],10),n=parseFloat(a[2].replace(",",".")),H(t,n)?t%24*k+6e4*n:NaN;if(a=F.HHMMSS.exec(e),a){t=parseInt(a[1],10),n=parseInt(a[2],10);const e=parseFloat(a[3].replace(",","."));return H(t,n,e)?t%24*k+6e4*n+1e3*e:NaN}return null}(a.time),null===r||isNaN(r)))return new Date(NaN);if(a.timeZone||t.timeZone){if(n=E(a.timeZone||t.timeZone,new Date(e+r)),isNaN(n))return new Date(NaN)}else n=N(new Date(e+r)),n=N(new Date(e+r+n));return new Date(e+r+n)}return new Date(NaN)}(e,void 0),!0),r=new Date(e.getTime()-a),i=new Date(0);return i.setFullYear(r.getUTCFullYear(),r.getUTCMonth(),r.getUTCDate()),i.setHours(r.getUTCHours(),r.getUTCMinutes(),r.getUTCSeconds(),r.getUTCMilliseconds()),i}(u(e),t).getTime()}return u(e).getTime()}return"DateTime"===t||"DateTime64"===t?u(e).getTime():parseInt(e,10)}return function(e){const a={time:{name:"time",type:"number",values:[],config:{}},timeEnd:{name:"timeEnd",type:"number",values:[],config:{}},title:{name:"title",type:"string",values:[],config:{}},text:{name:"text",type:"string",values:[],config:{}},tags:{name:"tags",type:"array",values:[],config:{}}};return e.forEach((e=>{var r,i;const s=(null===(r=t.find((e=>"time"===e.name)))||void 0===r?void 0:r.type)||"number",o=(null===(i=t.find((e=>"time_end"===e.name)))||void 0===i?void 0:i.type)||"number";a.time.values.push(n(e.time,s)),a.timeEnd.values.push(n(e.time_end,o)),a.title.values.push(e.title),a.text.values.push(e.text),a.tags.values.push(e.tags?e.tags.split(","):[])})),[{fields:Object.values(a),length:e.length}]}(e)},q=(t,n)=>{t.startsWith("Nullable(")&&(t=(t=t.slice(9)).slice(0,-1));const a=t.match(/^\s*DateTime(?:64)?\s*\(\s*(?:\d+\s*,\s*)?['"]([^'"]+)['"]\s*\)\s*$/i);let r;return a?(r=a[1],{fieldType:e.FieldType.time,timezone:r}):t.startsWith("Date")||0===n&&t.startsWith("UInt")?e.FieldType.time:t.startsWith("UInt")||t.startsWith("Int")||t.startsWith("Float")||t.startsWith("Decimal")?e.FieldType.number:t.startsWith("IPv")?e.FieldType.other:e.FieldType.string},j=e=>{switch(e){case"UInt8":case"UInt16":case"UInt32":case"UInt64":case"Int8":case"Int16":case"Int32":case"Int64":case"Float32":case"Float64":case"Decimal":case"Decimal32":case"Decimal64":case"Decimal128":case"Nullable(UInt8)":case"Nullable(UInt16)":case"Nullable(UInt32)":case"Nullable(UInt64)":case"Nullable(Int8)":case"Nullable(Int16)":case"Nullable(Int32)":case"Nullable(Int64)":case"Nullable(Float32)":case"Nullable(Float64)":case"Nullable(Decimal)":case"Nullable(Decimal32)":case"Nullable(Decimal64)":case"Nullable(Decimal128)":return"number";default:return"string"}},W=e=>{if(null===e)return e;if("object"==typeof e)return JSON.stringify(e);let t=Number(e);return isNaN(t)?e:t},V=(e,t)=>{if(e.length<10||!t.tillNow&&0!==e[0][0])return e;const n=e[0][1]/1e3-t.from,a=t.to-e[e.length-1][1]/1e3,r=(e[e.length-1][1]-e[0][1])/1e3/(e.length-1);let i;if(n<r&&0===e[0][0]){i=(e[1][0]-e[2][0])/e[1][0]*.1,i%=1,isNaN(i)&&(i=0);const t=e[1][0]*(1+i);isNaN(t)||(e[0][0]=t)}if(a<r){let t=e.length;i=(e[t-2][0]-e[t-3][0])/e[t-2][0]*.1,i%=1,isNaN(i)&&(i=0);const n=e[t-2][0]*(1+i);isNaN(n)||(e[t-1][0]=n)}return e},z=(e,t,n,a)=>{if(!e[n]){e[n]=[];for(let a in e){e[a].forEach((a=>{a[1]<t&&e[n].push([null,a[1]])}));break}}e[n].push([W(a),t])};class Y extends Error{}class B extends Y{constructor(e){super(`Invalid DateTime: ${e.toMessage()}`)}}class G extends Y{constructor(e){super(`Invalid Interval: ${e.toMessage()}`)}}class Z extends Y{constructor(e){super(`Invalid Duration: ${e.toMessage()}`)}}class Q extends Y{}class J extends Y{constructor(e){super(`Invalid unit ${e}`)}}class K extends Y{}class X extends Y{constructor(){super("Zone is an abstract class")}}const ee="numeric",te="short",ne="long",ae={year:ee,month:ee,day:ee},re={year:ee,month:te,day:ee},ie={year:ee,month:te,day:ee,weekday:te},se={year:ee,month:ne,day:ee},oe={year:ee,month:ne,day:ee,weekday:ne},le={hour:ee,minute:ee},ue={hour:ee,minute:ee,second:ee},ce={hour:ee,minute:ee,second:ee,timeZoneName:te},de={hour:ee,minute:ee,second:ee,timeZoneName:ne},me={hour:ee,minute:ee,hourCycle:"h23"},he={hour:ee,minute:ee,second:ee,hourCycle:"h23"},fe={hour:ee,minute:ee,second:ee,hourCycle:"h23",timeZoneName:te},ge={hour:ee,minute:ee,second:ee,hourCycle:"h23",timeZoneName:ne},pe={year:ee,month:ee,day:ee,hour:ee,minute:ee},ye={year:ee,month:ee,day:ee,hour:ee,minute:ee,second:ee},Te={year:ee,month:te,day:ee,hour:ee,minute:ee},ve={year:ee,month:te,day:ee,hour:ee,minute:ee,second:ee},be={year:ee,month:te,day:ee,weekday:te,hour:ee,minute:ee},Se={year:ee,month:ne,day:ee,hour:ee,minute:ee,timeZoneName:te},xe={year:ee,month:ne,day:ee,hour:ee,minute:ee,second:ee,timeZoneName:te},we={year:ee,month:ne,day:ee,weekday:ne,hour:ee,minute:ee,timeZoneName:ne},Ie={year:ee,month:ne,day:ee,weekday:ne,hour:ee,minute:ee,second:ee,timeZoneName:ne};class De{get type(){throw new X}get name(){throw new X}get ianaName(){return this.name}get isUniversal(){throw new X}offsetName(e,t){throw new X}formatOffset(e,t){throw new X}offset(e){throw new X}equals(e){throw new X}get isValid(){throw new X}}let Ee=null;class Oe extends De{static get instance(){return null===Ee&&(Ee=new Oe),Ee}get type(){return"system"}get name(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}get isUniversal(){return!1}offsetName(e,{format:t,locale:n}){return zt(e,t,n)}formatOffset(e,t){return Zt(this.offset(e),t)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return"system"===e.type}get isValid(){return!0}}let Ce={};const Ae={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};let Ne={};class ke extends De{static create(e){return Ne[e]||(Ne[e]=new ke(e)),Ne[e]}static resetCache(){Ne={},Ce={}}static isValidSpecifier(e){return this.isValidZone(e)}static isValidZone(e){if(!e)return!1;try{return new Intl.DateTimeFormat("en-US",{timeZone:e}).format(),!0}catch(e){return!1}}constructor(e){super(),this.zoneName=e,this.valid=ke.isValidZone(e)}get type(){return"iana"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(e,{format:t,locale:n}){return zt(e,t,n,this.name)}formatOffset(e,t){return Zt(this.offset(e),t)}offset(e){const t=new Date(e);if(isNaN(t))return NaN;const n=(a=this.name,Ce[a]||(Ce[a]=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:a,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"})),Ce[a]);var a;let[r,i,s,o,l,u,c]=n.formatToParts?function(e,t){const n=e.formatToParts(t),a=[];for(let e=0;e<n.length;e++){const{type:t,value:r}=n[e],i=Ae[t];"era"===t?a[i]=r:It(i)||(a[i]=parseInt(r,10))}return a}(n,t):function(e,t){const n=e.format(t).replace(/\u200E/g,""),a=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(n),[,r,i,s,o,l,u,c]=a;return[s,r,i,o,l,u,c]}(n,t);"BC"===o&&(r=1-Math.abs(r));let d=+t;const m=d%1e3;return d-=m>=0?m:1e3+m,(qt({year:r,month:i,day:s,hour:24===l?0:l,minute:u,second:c,millisecond:0})-d)/6e4}equals(e){return"iana"===e.type&&e.name===this.name}get isValid(){return this.valid}}let Fe={},Re={};function $e(e,t={}){const n=JSON.stringify([e,t]);let a=Re[n];return a||(a=new Intl.DateTimeFormat(e,t),Re[n]=a),a}let Me={},_e={},Ue=null,Le={};function He(e,t,n,a){const r=e.listingMode();return"error"===r?null:"en"===r?n(t):a(t)}class Pe{constructor(e,t,n){this.padTo=n.padTo||0,this.floor=n.floor||!1;const{padTo:a,floor:r,...i}=n;if(!t||Object.keys(i).length>0){const t={useGrouping:!1,...n};n.padTo>0&&(t.minimumIntegerDigits=n.padTo),this.inf=function(e,t={}){const n=JSON.stringify([e,t]);let a=Me[n];return a||(a=new Intl.NumberFormat(e,t),Me[n]=a),a}(e,t)}}format(e){if(this.inf){const t=this.floor?Math.floor(e):e;return this.inf.format(t)}return Rt(this.floor?Math.floor(e):Ut(e,3),this.padTo)}}class qe{constructor(e,t,n){let a;if(this.opts=n,this.originalZone=void 0,this.opts.timeZone)this.dt=e;else if("fixed"===e.zone.type){const t=e.offset/60*-1,n=t>=0?`Etc/GMT+${t}`:`Etc/GMT${t}`;0!==e.offset&&ke.create(n).valid?(a=n,this.dt=e):(a="UTC",this.dt=0===e.offset?e:e.setZone("UTC").plus({minutes:e.offset}),this.originalZone=e.zone)}else"system"===e.zone.type?this.dt=e:"iana"===e.zone.type?(this.dt=e,a=e.zone.name):(a="UTC",this.dt=e.setZone("UTC").plus({minutes:e.offset}),this.originalZone=e.zone);const r={...this.opts};r.timeZone=r.timeZone||a,this.dtf=$e(t,r)}format(){return this.originalZone?this.formatToParts().map((({value:e})=>e)).join(""):this.dtf.format(this.dt.toJSDate())}formatToParts(){const e=this.dtf.formatToParts(this.dt.toJSDate());return this.originalZone?e.map((e=>{if("timeZoneName"===e.type){const t=this.originalZone.offsetName(this.dt.ts,{locale:this.dt.locale,format:this.opts.timeZoneName});return{...e,value:t}}return e})):e}resolvedOptions(){return this.dtf.resolvedOptions()}}class je{constructor(e,t,n){this.opts={style:"long",...n},!t&&Ot()&&(this.rtf=function(e,t={}){const{base:n,...a}=t,r=JSON.stringify([e,a]);let i=_e[r];return i||(i=new Intl.RelativeTimeFormat(e,t),_e[r]=i),i}(e,n))}format(e,t){return this.rtf?this.rtf.format(e,t):function(e,t,n="always",a=!1){const r={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]},i=-1===["hours","minutes","seconds"].indexOf(e);if("auto"===n&&i){const n="days"===e;switch(t){case 1:return n?"tomorrow":`next ${r[e][0]}`;case-1:return n?"yesterday":`last ${r[e][0]}`;case 0:return n?"today":`this ${r[e][0]}`}}const s=Object.is(t,-0)||t<0,o=Math.abs(t),l=1===o,u=r[e],c=a?l?u[1]:u[2]||u[1]:l?r[e][0]:e;return s?`${o} ${c} ago`:`in ${o} ${c}`}(t,e,this.opts.numeric,"long"!==this.opts.style)}formatToParts(e,t){return this.rtf?this.rtf.formatToParts(e,t):[]}}const We={firstDay:1,minimalDays:4,weekend:[6,7]};class Ve{static fromOpts(e){return Ve.create(e.locale,e.numberingSystem,e.outputCalendar,e.weekSettings,e.defaultToEN)}static create(e,t,n,a,r=!1){const i=e||lt.defaultLocale,s=i||(r?"en-US":Ue||(Ue=(new Intl.DateTimeFormat).resolvedOptions().locale,Ue)),o=t||lt.defaultNumberingSystem,l=n||lt.defaultOutputCalendar,u=kt(a)||lt.defaultWeekSettings;return new Ve(s,o,l,u,i)}static resetCache(){Ue=null,Re={},Me={},_e={}}static fromObject({locale:e,numberingSystem:t,outputCalendar:n,weekSettings:a}={}){return Ve.create(e,t,n,a)}constructor(e,t,n,a,r){const[i,s,o]=function(e){const t=e.indexOf("-x-");-1!==t&&(e=e.substring(0,t));const n=e.indexOf("-u-");if(-1===n)return[e];{let t,a;try{t=$e(e).resolvedOptions(),a=e}catch(r){const i=e.substring(0,n);t=$e(i).resolvedOptions(),a=i}const{numberingSystem:r,calendar:i}=t;return[a,r,i]}}(e);this.locale=i,this.numberingSystem=t||s||null,this.outputCalendar=n||o||null,this.weekSettings=a,this.intl=function(e,t,n){return n||t?(e.includes("-u-")||(e+="-u"),n&&(e+=`-ca-${n}`),t&&(e+=`-nu-${t}`),e):e}(this.locale,this.numberingSystem,this.outputCalendar),this.weekdaysCache={format:{},standalone:{}},this.monthsCache={format:{},standalone:{}},this.meridiemCache=null,this.eraCache={},this.specifiedLocale=r,this.fastNumbersCached=null}get fastNumbers(){var e;return null==this.fastNumbersCached&&(this.fastNumbersCached=(!(e=this).numberingSystem||"latn"===e.numberingSystem)&&("latn"===e.numberingSystem||!e.locale||e.locale.startsWith("en")||"latn"===new Intl.DateTimeFormat(e.intl).resolvedOptions().numberingSystem)),this.fastNumbersCached}listingMode(){const e=this.isEnglish(),t=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar);return e&&t?"en":"intl"}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?Ve.create(e.locale||this.specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,kt(e.weekSettings)||this.weekSettings,e.defaultToEN||!1):this}redefaultToEN(e={}){return this.clone({...e,defaultToEN:!0})}redefaultToSystem(e={}){return this.clone({...e,defaultToEN:!1})}months(e,t=!1){return He(this,e,en,(()=>{const n=t?{month:e,day:"numeric"}:{month:e},a=t?"format":"standalone";return this.monthsCache[a][e]||(this.monthsCache[a][e]=function(e){const t=[];for(let n=1;n<=12;n++){const a=tr.utc(2009,n,1);t.push(e(a))}return t}((e=>this.extract(e,n,"month")))),this.monthsCache[a][e]}))}weekdays(e,t=!1){return He(this,e,rn,(()=>{const n=t?{weekday:e,year:"numeric",month:"long",day:"numeric"}:{weekday:e},a=t?"format":"standalone";return this.weekdaysCache[a][e]||(this.weekdaysCache[a][e]=function(e){const t=[];for(let n=1;n<=7;n++){const a=tr.utc(2016,11,13+n);t.push(e(a))}return t}((e=>this.extract(e,n,"weekday")))),this.weekdaysCache[a][e]}))}meridiems(){return He(this,void 0,(()=>sn),(()=>{if(!this.meridiemCache){const e={hour:"numeric",hourCycle:"h12"};this.meridiemCache=[tr.utc(2016,11,13,9),tr.utc(2016,11,13,19)].map((t=>this.extract(t,e,"dayperiod")))}return this.meridiemCache}))}eras(e){return He(this,e,cn,(()=>{const t={era:e};return this.eraCache[e]||(this.eraCache[e]=[tr.utc(-40,1,1),tr.utc(2017,1,1)].map((e=>this.extract(e,t,"era")))),this.eraCache[e]}))}extract(e,t,n){const a=this.dtFormatter(e,t).formatToParts().find((e=>e.type.toLowerCase()===n));return a?a.value:null}numberFormatter(e={}){return new Pe(this.intl,e.forceSimple||this.fastNumbers,e)}dtFormatter(e,t={}){return new qe(e,this.intl,t)}relFormatter(e={}){return new je(this.intl,this.isEnglish(),e)}listFormatter(e={}){return function(e,t={}){const n=JSON.stringify([e,t]);let a=Fe[n];return a||(a=new Intl.ListFormat(e,t),Fe[n]=a),a}(this.intl,e)}isEnglish(){return"en"===this.locale||"en-us"===this.locale.toLowerCase()||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us")}getWeekSettings(){return this.weekSettings?this.weekSettings:Ct()?function(e){let t=Le[e];if(!t){const n=new Intl.Locale(e);t="getWeekInfo"in n?n.getWeekInfo():n.weekInfo,Le[e]=t}return t}(this.locale):We}getStartOfWeek(){return this.getWeekSettings().firstDay}getMinDaysInFirstWeek(){return this.getWeekSettings().minimalDays}getWeekendDays(){return this.getWeekSettings().weekend}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}toString(){return`Locale(${this.locale}, ${this.numberingSystem}, ${this.outputCalendar})`}}let ze=null;class Ye extends De{static get utcInstance(){return null===ze&&(ze=new Ye(0)),ze}static instance(e){return 0===e?Ye.utcInstance:new Ye(e)}static parseSpecifier(e){if(e){const t=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(t)return new Ye(Yt(t[1],t[2]))}return null}constructor(e){super(),this.fixed=e}get type(){return"fixed"}get name(){return 0===this.fixed?"UTC":`UTC${Zt(this.fixed,"narrow")}`}get ianaName(){return 0===this.fixed?"Etc/UTC":`Etc/GMT${Zt(-this.fixed,"narrow")}`}offsetName(){return this.name}formatOffset(e,t){return Zt(this.fixed,t)}get isUniversal(){return!0}offset(){return this.fixed}equals(e){return"fixed"===e.type&&e.fixed===this.fixed}get isValid(){return!0}}class Be extends De{constructor(e){super(),this.zoneName=e}get type(){return"invalid"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(){return null}formatOffset(){return""}offset(){return NaN}equals(){return!1}get isValid(){return!1}}function Ge(e,t){if(It(e)||null===e)return t;if(e instanceof De)return e;if("string"==typeof e){const n=e.toLowerCase();return"default"===n?t:"local"===n||"system"===n?Oe.instance:"utc"===n||"gmt"===n?Ye.utcInstance:Ye.parseSpecifier(n)||ke.create(e)}return Dt(e)?Ye.instance(e):"object"==typeof e&&"offset"in e&&"function"==typeof e.offset?e:new Be(e)}const Ze={arab:"[٠-٩]",arabext:"[۰-۹]",bali:"[᭐-᭙]",beng:"[০-৯]",deva:"[०-९]",fullwide:"[０-９]",gujr:"[૦-૯]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[០-៩]",knda:"[೦-೯]",laoo:"[໐-໙]",limb:"[᥆-᥏]",mlym:"[൦-൯]",mong:"[᠐-᠙]",mymr:"[၀-၉]",orya:"[୦-୯]",tamldec:"[௦-௯]",telu:"[౦-౯]",thai:"[๐-๙]",tibt:"[༠-༩]",latn:"\\d"},Qe={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},Je=Ze.hanidec.replace(/[\[|\]]/g,"").split("");let Ke={};function Xe({numberingSystem:e},t=""){const n=e||"latn";return Ke[n]||(Ke[n]={}),Ke[n][t]||(Ke[n][t]=new RegExp(`${Ze[n]}${t}`)),Ke[n][t]}let et,tt=()=>Date.now(),nt="system",at=null,rt=null,it=null,st=60,ot=null;class lt{static get now(){return tt}static set now(e){tt=e}static set defaultZone(e){nt=e}static get defaultZone(){return Ge(nt,Oe.instance)}static get defaultLocale(){return at}static set defaultLocale(e){at=e}static get defaultNumberingSystem(){return rt}static set defaultNumberingSystem(e){rt=e}static get defaultOutputCalendar(){return it}static set defaultOutputCalendar(e){it=e}static get defaultWeekSettings(){return ot}static set defaultWeekSettings(e){ot=kt(e)}static get twoDigitCutoffYear(){return st}static set twoDigitCutoffYear(e){st=e%100}static get throwOnInvalid(){return et}static set throwOnInvalid(e){et=e}static resetCaches(){Ve.resetCache(),ke.resetCache(),tr.resetCache(),Ke={}}}class ut{constructor(e,t){this.reason=e,this.explanation=t}toMessage(){return this.explanation?`${this.reason}: ${this.explanation}`:this.reason}}const ct=[0,31,59,90,120,151,181,212,243,273,304,334],dt=[0,31,60,91,121,152,182,213,244,274,305,335];function mt(e,t){return new ut("unit out of range",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)}function ht(e,t,n){const a=new Date(Date.UTC(e,t-1,n));e<100&&e>=0&&a.setUTCFullYear(a.getUTCFullYear()-1900);const r=a.getUTCDay();return 0===r?7:r}function ft(e,t,n){return n+(Lt(e)?dt:ct)[t-1]}function gt(e,t){const n=Lt(e)?dt:ct,a=n.findIndex((e=>e<t));return{month:a+1,day:t-n[a]}}function pt(e,t){return(e-t+7)%7+1}function yt(e,t=4,n=1){const{year:a,month:r,day:i}=e,s=ft(a,r,i),o=pt(ht(a,r,i),n);let l,u=Math.floor((s-o+14-t)/7);return u<1?(l=a-1,u=Wt(l,t,n)):u>Wt(a,t,n)?(l=a+1,u=1):l=a,{weekYear:l,weekNumber:u,weekday:o,...Qt(e)}}function Tt(e,t=4,n=1){const{weekYear:a,weekNumber:r,weekday:i}=e,s=pt(ht(a,1,t),n),o=Ht(a);let l,u=7*r+i-s-7+t;u<1?(l=a-1,u+=Ht(l)):u>o?(l=a+1,u-=Ht(a)):l=a;const{month:c,day:d}=gt(l,u);return{year:l,month:c,day:d,...Qt(e)}}function vt(e){const{year:t,month:n,day:a}=e;return{year:t,ordinal:ft(t,n,a),...Qt(e)}}function bt(e){const{year:t,ordinal:n}=e,{month:a,day:r}=gt(t,n);return{year:t,month:a,day:r,...Qt(e)}}function St(e,t){if(!It(e.localWeekday)||!It(e.localWeekNumber)||!It(e.localWeekYear)){if(!It(e.weekday)||!It(e.weekNumber)||!It(e.weekYear))throw new Q("Cannot mix locale-based week fields with ISO-based week fields");return It(e.localWeekday)||(e.weekday=e.localWeekday),It(e.localWeekNumber)||(e.weekNumber=e.localWeekNumber),It(e.localWeekYear)||(e.weekYear=e.localWeekYear),delete e.localWeekday,delete e.localWeekNumber,delete e.localWeekYear,{minDaysInFirstWeek:t.getMinDaysInFirstWeek(),startOfWeek:t.getStartOfWeek()}}return{minDaysInFirstWeek:4,startOfWeek:1}}function xt(e){const t=Et(e.year),n=Ft(e.month,1,12),a=Ft(e.day,1,Pt(e.year,e.month));return t?n?!a&&mt("day",e.day):mt("month",e.month):mt("year",e.year)}function wt(e){const{hour:t,minute:n,second:a,millisecond:r}=e,i=Ft(t,0,23)||24===t&&0===n&&0===a&&0===r,s=Ft(n,0,59),o=Ft(a,0,59),l=Ft(r,0,999);return i?s?o?!l&&mt("millisecond",r):mt("second",a):mt("minute",n):mt("hour",t)}function It(e){return void 0===e}function Dt(e){return"number"==typeof e}function Et(e){return"number"==typeof e&&e%1==0}function Ot(){try{return"undefined"!=typeof Intl&&!!Intl.RelativeTimeFormat}catch(e){return!1}}function Ct(){try{return"undefined"!=typeof Intl&&!!Intl.Locale&&("weekInfo"in Intl.Locale.prototype||"getWeekInfo"in Intl.Locale.prototype)}catch(e){return!1}}function At(e,t,n){if(0!==e.length)return e.reduce(((e,a)=>{const r=[t(a),a];return e&&n(e[0],r[0])===e[0]?e:r}),null)[1]}function Nt(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function kt(e){if(null==e)return null;if("object"!=typeof e)throw new K("Week settings must be an object");if(!Ft(e.firstDay,1,7)||!Ft(e.minimalDays,1,7)||!Array.isArray(e.weekend)||e.weekend.some((e=>!Ft(e,1,7))))throw new K("Invalid week settings");return{firstDay:e.firstDay,minimalDays:e.minimalDays,weekend:Array.from(e.weekend)}}function Ft(e,t,n){return Et(e)&&e>=t&&e<=n}function Rt(e,t=2){let n;return n=e<0?"-"+(""+-e).padStart(t,"0"):(""+e).padStart(t,"0"),n}function $t(e){return It(e)||null===e||""===e?void 0:parseInt(e,10)}function Mt(e){return It(e)||null===e||""===e?void 0:parseFloat(e)}function _t(e){if(!It(e)&&null!==e&&""!==e){const t=1e3*parseFloat("0."+e);return Math.floor(t)}}function Ut(e,t,n=!1){const a=10**t;return(n?Math.trunc:Math.round)(e*a)/a}function Lt(e){return e%4==0&&(e%100!=0||e%400==0)}function Ht(e){return Lt(e)?366:365}function Pt(e,t){const n=(a=t-1)-12*Math.floor(a/12)+1;var a;return 2===n?Lt(e+(t-n)/12)?29:28:[31,null,31,30,31,30,31,31,30,31,30,31][n-1]}function qt(e){let t=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return e.year<100&&e.year>=0&&(t=new Date(t),t.setUTCFullYear(e.year,e.month-1,e.day)),+t}function jt(e,t,n){return-pt(ht(e,1,t),n)+t-1}function Wt(e,t=4,n=1){const a=jt(e,t,n),r=jt(e+1,t,n);return(Ht(e)-a+r)/7}function Vt(e){return e>99?e:e>lt.twoDigitCutoffYear?1900+e:2e3+e}function zt(e,t,n,a=null){const r=new Date(e),i={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"};a&&(i.timeZone=a);const s={timeZoneName:t,...i},o=new Intl.DateTimeFormat(n,s).formatToParts(r).find((e=>"timezonename"===e.type.toLowerCase()));return o?o.value:null}function Yt(e,t){let n=parseInt(e,10);Number.isNaN(n)&&(n=0);const a=parseInt(t,10)||0;return 60*n+(n<0||Object.is(n,-0)?-a:a)}function Bt(e){const t=Number(e);if("boolean"==typeof e||""===e||Number.isNaN(t))throw new K(`Invalid unit value ${e}`);return t}function Gt(e,t){const n={};for(const a in e)if(Nt(e,a)){const r=e[a];if(null==r)continue;n[t(a)]=Bt(r)}return n}function Zt(e,t){const n=Math.trunc(Math.abs(e/60)),a=Math.trunc(Math.abs(e%60)),r=e>=0?"+":"-";switch(t){case"short":return`${r}${Rt(n,2)}:${Rt(a,2)}`;case"narrow":return`${r}${n}${a>0?`:${a}`:""}`;case"techie":return`${r}${Rt(n,2)}${Rt(a,2)}`;default:throw new RangeError(`Value format ${t} is out of range for property format`)}}function Qt(e){return function(e,t){return["hour","minute","second","millisecond"].reduce(((t,n)=>(t[n]=e[n],t)),{})}(e)}const Jt=["January","February","March","April","May","June","July","August","September","October","November","December"],Kt=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],Xt=["J","F","M","A","M","J","J","A","S","O","N","D"];function en(e){switch(e){case"narrow":return[...Xt];case"short":return[...Kt];case"long":return[...Jt];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null}}const tn=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],nn=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],an=["M","T","W","T","F","S","S"];function rn(e){switch(e){case"narrow":return[...an];case"short":return[...nn];case"long":return[...tn];case"numeric":return["1","2","3","4","5","6","7"];default:return null}}const sn=["AM","PM"],on=["Before Christ","Anno Domini"],ln=["BC","AD"],un=["B","A"];function cn(e){switch(e){case"narrow":return[...un];case"short":return[...ln];case"long":return[...on];default:return null}}function dn(e,t){let n="";for(const a of e)a.literal?n+=a.val:n+=t(a.val);return n}const mn={D:ae,DD:re,DDD:se,DDDD:oe,t:le,tt:ue,ttt:ce,tttt:de,T:me,TT:he,TTT:fe,TTTT:ge,f:pe,ff:Te,fff:Se,ffff:we,F:ye,FF:ve,FFF:xe,FFFF:Ie};class hn{static create(e,t={}){return new hn(e,t)}static parseFormat(e){let t=null,n="",a=!1;const r=[];for(let i=0;i<e.length;i++){const s=e.charAt(i);"'"===s?(n.length>0&&r.push({literal:a||/^\s+$/.test(n),val:n}),t=null,n="",a=!a):a||s===t?n+=s:(n.length>0&&r.push({literal:/^\s+$/.test(n),val:n}),n=s,t=s)}return n.length>0&&r.push({literal:a||/^\s+$/.test(n),val:n}),r}static macroTokenToFormatOpts(e){return mn[e]}constructor(e,t){this.opts=t,this.loc=e,this.systemLoc=null}formatWithSystemDefault(e,t){return null===this.systemLoc&&(this.systemLoc=this.loc.redefaultToSystem()),this.systemLoc.dtFormatter(e,{...this.opts,...t}).format()}dtFormatter(e,t={}){return this.loc.dtFormatter(e,{...this.opts,...t})}formatDateTime(e,t){return this.dtFormatter(e,t).format()}formatDateTimeParts(e,t){return this.dtFormatter(e,t).formatToParts()}formatInterval(e,t){return this.dtFormatter(e.start,t).dtf.formatRange(e.start.toJSDate(),e.end.toJSDate())}resolvedOptions(e,t){return this.dtFormatter(e,t).resolvedOptions()}num(e,t=0){if(this.opts.forceSimple)return Rt(e,t);const n={...this.opts};return t>0&&(n.padTo=t),this.loc.numberFormatter(n).format(e)}formatDateTimeFromString(e,t){const n="en"===this.loc.listingMode(),a=this.loc.outputCalendar&&"gregory"!==this.loc.outputCalendar,r=(t,n)=>this.loc.extract(e,t,n),i=t=>e.isOffsetFixed&&0===e.offset&&t.allowZ?"Z":e.isValid?e.zone.formatOffset(e.ts,t.format):"",s=(t,a)=>n?function(e,t){return en(t)[e.month-1]}(e,t):r(a?{month:t}:{month:t,day:"numeric"},"month"),o=(t,a)=>n?function(e,t){return rn(t)[e.weekday-1]}(e,t):r(a?{weekday:t}:{weekday:t,month:"long",day:"numeric"},"weekday"),l=t=>{const n=hn.macroTokenToFormatOpts(t);return n?this.formatWithSystemDefault(e,n):t},u=t=>n?function(e,t){return cn(t)[e.year<0?0:1]}(e,t):r({era:t},"era");return dn(hn.parseFormat(t),(t=>{switch(t){case"S":return this.num(e.millisecond);case"u":case"SSS":return this.num(e.millisecond,3);case"s":return this.num(e.second);case"ss":return this.num(e.second,2);case"uu":return this.num(Math.floor(e.millisecond/10),2);case"uuu":return this.num(Math.floor(e.millisecond/100));case"m":return this.num(e.minute);case"mm":return this.num(e.minute,2);case"h":return this.num(e.hour%12==0?12:e.hour%12);case"hh":return this.num(e.hour%12==0?12:e.hour%12,2);case"H":return this.num(e.hour);case"HH":return this.num(e.hour,2);case"Z":return i({format:"narrow",allowZ:this.opts.allowZ});case"ZZ":return i({format:"short",allowZ:this.opts.allowZ});case"ZZZ":return i({format:"techie",allowZ:this.opts.allowZ});case"ZZZZ":return e.zone.offsetName(e.ts,{format:"short",locale:this.loc.locale});case"ZZZZZ":return e.zone.offsetName(e.ts,{format:"long",locale:this.loc.locale});case"z":return e.zoneName;case"a":return n?function(e){return sn[e.hour<12?0:1]}(e):r({hour:"numeric",hourCycle:"h12"},"dayperiod");case"d":return a?r({day:"numeric"},"day"):this.num(e.day);case"dd":return a?r({day:"2-digit"},"day"):this.num(e.day,2);case"c":case"E":return this.num(e.weekday);case"ccc":return o("short",!0);case"cccc":return o("long",!0);case"ccccc":return o("narrow",!0);case"EEE":return o("short",!1);case"EEEE":return o("long",!1);case"EEEEE":return o("narrow",!1);case"L":return a?r({month:"numeric",day:"numeric"},"month"):this.num(e.month);case"LL":return a?r({month:"2-digit",day:"numeric"},"month"):this.num(e.month,2);case"LLL":return s("short",!0);case"LLLL":return s("long",!0);case"LLLLL":return s("narrow",!0);case"M":return a?r({month:"numeric"},"month"):this.num(e.month);case"MM":return a?r({month:"2-digit"},"month"):this.num(e.month,2);case"MMM":return s("short",!1);case"MMMM":return s("long",!1);case"MMMMM":return s("narrow",!1);case"y":return a?r({year:"numeric"},"year"):this.num(e.year);case"yy":return a?r({year:"2-digit"},"year"):this.num(e.year.toString().slice(-2),2);case"yyyy":return a?r({year:"numeric"},"year"):this.num(e.year,4);case"yyyyyy":return a?r({year:"numeric"},"year"):this.num(e.year,6);case"G":return u("short");case"GG":return u("long");case"GGGGG":return u("narrow");case"kk":return this.num(e.weekYear.toString().slice(-2),2);case"kkkk":return this.num(e.weekYear,4);case"W":return this.num(e.weekNumber);case"WW":return this.num(e.weekNumber,2);case"n":return this.num(e.localWeekNumber);case"nn":return this.num(e.localWeekNumber,2);case"ii":return this.num(e.localWeekYear.toString().slice(-2),2);case"iiii":return this.num(e.localWeekYear,4);case"o":return this.num(e.ordinal);case"ooo":return this.num(e.ordinal,3);case"q":return this.num(e.quarter);case"qq":return this.num(e.quarter,2);case"X":return this.num(Math.floor(e.ts/1e3));case"x":return this.num(e.ts);default:return l(t)}}))}formatDurationFromString(e,t){const n=e=>{switch(e[0]){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"w":return"week";case"M":return"month";case"y":return"year";default:return null}},a=hn.parseFormat(t),r=a.reduce(((e,{literal:t,val:n})=>t?e:e.concat(n)),[]);return dn(a,(e=>t=>{const a=n(t);return a?this.num(e.get(a),t.length):t})(e.shiftTo(...r.map(n).filter((e=>e)))))}}const fn=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;function gn(...e){const t=e.reduce(((e,t)=>e+t.source),"");return RegExp(`^${t}$`)}function pn(...e){return t=>e.reduce((([e,n,a],r)=>{const[i,s,o]=r(t,a);return[{...e,...i},s||n,o]}),[{},null,1]).slice(0,2)}function yn(e,...t){if(null==e)return[null,null];for(const[n,a]of t){const t=n.exec(e);if(t)return a(t)}return[null,null]}function Tn(...e){return(t,n)=>{const a={};let r;for(r=0;r<e.length;r++)a[e[r]]=$t(t[n+r]);return[a,null,n+r]}}const vn=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,bn=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,Sn=RegExp(`${bn.source}(?:${vn.source}?(?:\\[(${fn.source})\\])?)?`),xn=RegExp(`(?:T${Sn.source})?`),wn=Tn("weekYear","weekNumber","weekDay"),In=Tn("year","ordinal"),Dn=RegExp(`${bn.source} ?(?:${vn.source}|(${fn.source}))?`),En=RegExp(`(?: ${Dn.source})?`);function On(e,t,n){const a=e[t];return It(a)?n:$t(a)}function Cn(e,t){return[{hours:On(e,t,0),minutes:On(e,t+1,0),seconds:On(e,t+2,0),milliseconds:_t(e[t+3])},null,t+4]}function An(e,t){const n=!e[t]&&!e[t+1],a=Yt(e[t+1],e[t+2]);return[{},n?null:Ye.instance(a),t+3]}function Nn(e,t){return[{},e[t]?ke.create(e[t]):null,t+1]}const kn=RegExp(`^T?${bn.source}$`),Fn=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function Rn(e){const[t,n,a,r,i,s,o,l,u]=e,c="-"===t[0],d=l&&"-"===l[0],m=(e,t=!1)=>void 0!==e&&(t||e&&c)?-e:e;return[{years:m(Mt(n)),months:m(Mt(a)),weeks:m(Mt(r)),days:m(Mt(i)),hours:m(Mt(s)),minutes:m(Mt(o)),seconds:m(Mt(l),"-0"===l),milliseconds:m(_t(u),d)}]}const $n={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Mn(e,t,n,a,r,i,s){const o={year:2===t.length?Vt($t(t)):$t(t),month:Kt.indexOf(n)+1,day:$t(a),hour:$t(r),minute:$t(i)};return s&&(o.second=$t(s)),e&&(o.weekday=e.length>3?tn.indexOf(e)+1:nn.indexOf(e)+1),o}const _n=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function Un(e){const[,t,n,a,r,i,s,o,l,u,c,d]=e,m=Mn(t,r,a,n,i,s,o);let h;return h=l?$n[l]:u?0:Yt(c,d),[m,new Ye(h)]}const Ln=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,Hn=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,Pn=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function qn(e){const[,t,n,a,r,i,s,o]=e;return[Mn(t,r,a,n,i,s,o),Ye.utcInstance]}function jn(e){const[,t,n,a,r,i,s,o]=e;return[Mn(t,o,n,a,r,i,s),Ye.utcInstance]}const Wn=gn(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,xn),Vn=gn(/(\d{4})-?W(\d\d)(?:-?(\d))?/,xn),zn=gn(/(\d{4})-?(\d{3})/,xn),Yn=gn(Sn),Bn=pn((function(e,t){return[{year:On(e,t),month:On(e,t+1,1),day:On(e,t+2,1)},null,t+3]}),Cn,An,Nn),Gn=pn(wn,Cn,An,Nn),Zn=pn(In,Cn,An,Nn),Qn=pn(Cn,An,Nn),Jn=pn(Cn),Kn=gn(/(\d{4})-(\d\d)-(\d\d)/,En),Xn=gn(Dn),ea=pn(Cn,An,Nn),ta="Invalid Duration",na={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}},aa={years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6},...na},ra={years:{quarters:4,months:12,weeks:52.1775,days:365.2425,hours:8765.82,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:13.044375,days:91.310625,hours:2191.455,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:4.3481250000000005,days:30.436875,hours:730.485,minutes:43829.1,seconds:2629746,milliseconds:2629746e3},...na},ia=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],sa=ia.slice(0).reverse();function oa(e,t,n=!1){const a={values:n?t.values:{...e.values,...t.values||{}},loc:e.loc.clone(t.loc),conversionAccuracy:t.conversionAccuracy||e.conversionAccuracy,matrix:t.matrix||e.matrix};return new ca(a)}function la(e,t){let n=t.milliseconds??0;for(const a of sa.slice(1))t[a]&&(n+=t[a]*e[a].milliseconds);return n}function ua(e,t){const n=la(e,t)<0?-1:1;ia.reduceRight(((a,r)=>{if(It(t[r]))return a;if(a){const i=t[a]*n,s=e[r][a],o=Math.floor(i/s);t[r]+=o*n,t[a]-=o*s*n}return r}),null),ia.reduce(((n,a)=>{if(It(t[a]))return n;if(n){const r=t[n]%1;t[n]-=r,t[a]+=r*e[n][a]}return a}),null)}class ca{constructor(e){const t="longterm"===e.conversionAccuracy||!1;let n=t?ra:aa;e.matrix&&(n=e.matrix),this.values=e.values,this.loc=e.loc||Ve.create(),this.conversionAccuracy=t?"longterm":"casual",this.invalid=e.invalid||null,this.matrix=n,this.isLuxonDuration=!0}static fromMillis(e,t){return ca.fromObject({milliseconds:e},t)}static fromObject(e,t={}){if(null==e||"object"!=typeof e)throw new K("Duration.fromObject: argument expected to be an object, got "+(null===e?"null":typeof e));return new ca({values:Gt(e,ca.normalizeUnit),loc:Ve.fromObject(t),conversionAccuracy:t.conversionAccuracy,matrix:t.matrix})}static fromDurationLike(e){if(Dt(e))return ca.fromMillis(e);if(ca.isDuration(e))return e;if("object"==typeof e)return ca.fromObject(e);throw new K(`Unknown duration argument ${e} of type ${typeof e}`)}static fromISO(e,t){const[n]=function(e){return yn(e,[Fn,Rn])}(e);return n?ca.fromObject(n,t):ca.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromISOTime(e,t){const[n]=function(e){return yn(e,[kn,Jn])}(e);return n?ca.fromObject(n,t):ca.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static invalid(e,t=null){if(!e)throw new K("need to specify a reason the Duration is invalid");const n=e instanceof ut?e:new ut(e,t);if(lt.throwOnInvalid)throw new Z(n);return new ca({invalid:n})}static normalizeUnit(e){const t={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[e?e.toLowerCase():e];if(!t)throw new J(e);return t}static isDuration(e){return e&&e.isLuxonDuration||!1}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}toFormat(e,t={}){const n={...t,floor:!1!==t.round&&!1!==t.floor};return this.isValid?hn.create(this.loc,n).formatDurationFromString(this,e):ta}toHuman(e={}){if(!this.isValid)return ta;const t=ia.map((t=>{const n=this.values[t];return It(n)?null:this.loc.numberFormatter({style:"unit",unitDisplay:"long",...e,unit:t.slice(0,-1)}).format(n)})).filter((e=>e));return this.loc.listFormatter({type:"conjunction",style:e.listStyle||"narrow",...e}).format(t)}toObject(){return this.isValid?{...this.values}:{}}toISO(){if(!this.isValid)return null;let e="P";return 0!==this.years&&(e+=this.years+"Y"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+"M"),0!==this.weeks&&(e+=this.weeks+"W"),0!==this.days&&(e+=this.days+"D"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+="T"),0!==this.hours&&(e+=this.hours+"H"),0!==this.minutes&&(e+=this.minutes+"M"),0===this.seconds&&0===this.milliseconds||(e+=Ut(this.seconds+this.milliseconds/1e3,3)+"S"),"P"===e&&(e+="T0S"),e}toISOTime(e={}){if(!this.isValid)return null;const t=this.toMillis();return t<0||t>=864e5?null:(e={suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended",...e,includeOffset:!1},tr.fromMillis(t,{zone:"UTC"}).toISOTime(e))}toJSON(){return this.toISO()}toString(){return this.toISO()}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Duration { values: ${JSON.stringify(this.values)} }`:`Duration { Invalid, reason: ${this.invalidReason} }`}toMillis(){return this.isValid?la(this.matrix,this.values):NaN}valueOf(){return this.toMillis()}plus(e){if(!this.isValid)return this;const t=ca.fromDurationLike(e),n={};for(const e of ia)(Nt(t.values,e)||Nt(this.values,e))&&(n[e]=t.get(e)+this.get(e));return oa(this,{values:n},!0)}minus(e){if(!this.isValid)return this;const t=ca.fromDurationLike(e);return this.plus(t.negate())}mapUnits(e){if(!this.isValid)return this;const t={};for(const n of Object.keys(this.values))t[n]=Bt(e(this.values[n],n));return oa(this,{values:t},!0)}get(e){return this[ca.normalizeUnit(e)]}set(e){return this.isValid?oa(this,{values:{...this.values,...Gt(e,ca.normalizeUnit)}}):this}reconfigure({locale:e,numberingSystem:t,conversionAccuracy:n,matrix:a}={}){return oa(this,{loc:this.loc.clone({locale:e,numberingSystem:t}),matrix:a,conversionAccuracy:n})}as(e){return this.isValid?this.shiftTo(e).get(e):NaN}normalize(){if(!this.isValid)return this;const e=this.toObject();return ua(this.matrix,e),oa(this,{values:e},!0)}rescale(){return this.isValid?oa(this,{values:function(e){const t={};for(const[n,a]of Object.entries(e))0!==a&&(t[n]=a);return t}(this.normalize().shiftToAll().toObject())},!0):this}shiftTo(...e){if(!this.isValid)return this;if(0===e.length)return this;e=e.map((e=>ca.normalizeUnit(e)));const t={},n={},a=this.toObject();let r;for(const i of ia)if(e.indexOf(i)>=0){r=i;let e=0;for(const t in n)e+=this.matrix[t][i]*n[t],n[t]=0;Dt(a[i])&&(e+=a[i]);const s=Math.trunc(e);t[i]=s,n[i]=(1e3*e-1e3*s)/1e3}else Dt(a[i])&&(n[i]=a[i]);for(const e in n)0!==n[e]&&(t[r]+=e===r?n[e]:n[e]/this.matrix[r][e]);return ua(this.matrix,t),oa(this,{values:t},!0)}shiftToAll(){return this.isValid?this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds"):this}negate(){if(!this.isValid)return this;const e={};for(const t of Object.keys(this.values))e[t]=0===this.values[t]?0:-this.values[t];return oa(this,{values:e},!0)}get years(){return this.isValid?this.values.years||0:NaN}get quarters(){return this.isValid?this.values.quarters||0:NaN}get months(){return this.isValid?this.values.months||0:NaN}get weeks(){return this.isValid?this.values.weeks||0:NaN}get days(){return this.isValid?this.values.days||0:NaN}get hours(){return this.isValid?this.values.hours||0:NaN}get minutes(){return this.isValid?this.values.minutes||0:NaN}get seconds(){return this.isValid?this.values.seconds||0:NaN}get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this.loc.equals(e.loc))return!1;for(const a of ia)if(t=this.values[a],n=e.values[a],!(void 0===t||0===t?void 0===n||0===n:t===n))return!1;var t,n;return!0}}const da="Invalid Interval";class ma{constructor(e){this.s=e.start,this.e=e.end,this.invalid=e.invalid||null,this.isLuxonInterval=!0}static invalid(e,t=null){if(!e)throw new K("need to specify a reason the Interval is invalid");const n=e instanceof ut?e:new ut(e,t);if(lt.throwOnInvalid)throw new G(n);return new ma({invalid:n})}static fromDateTimes(e,t){const n=nr(e),a=nr(t),r=function(e,t){return e&&e.isValid?t&&t.isValid?t<e?ma.invalid("end before start",`The end of an interval must be after its start, but you had start=${e.toISO()} and end=${t.toISO()}`):null:ma.invalid("missing or invalid end"):ma.invalid("missing or invalid start")}(n,a);return null==r?new ma({start:n,end:a}):r}static after(e,t){const n=ca.fromDurationLike(t),a=nr(e);return ma.fromDateTimes(a,a.plus(n))}static before(e,t){const n=ca.fromDurationLike(t),a=nr(e);return ma.fromDateTimes(a.minus(n),a)}static fromISO(e,t){const[n,a]=(e||"").split("/",2);if(n&&a){let e,r,i,s;try{e=tr.fromISO(n,t),r=e.isValid}catch(a){r=!1}try{i=tr.fromISO(a,t),s=i.isValid}catch(a){s=!1}if(r&&s)return ma.fromDateTimes(e,i);if(r){const n=ca.fromISO(a,t);if(n.isValid)return ma.after(e,n)}else if(s){const e=ca.fromISO(n,t);if(e.isValid)return ma.before(i,e)}}return ma.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static isInterval(e){return e&&e.isLuxonInterval||!1}get start(){return this.isValid?this.s:null}get end(){return this.isValid?this.e:null}get isValid(){return null===this.invalidReason}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}length(e="milliseconds"){return this.isValid?this.toDuration(e).get(e):NaN}count(e="milliseconds",t){if(!this.isValid)return NaN;const n=this.start.startOf(e,t);let a;return a=t?.useLocaleWeeks?this.end.reconfigure({locale:n.locale}):this.end,a=a.startOf(e,t),Math.floor(a.diff(n,e).get(e))+(a.valueOf()!==this.end.valueOf())}hasSame(e){return!!this.isValid&&(this.isEmpty()||this.e.minus(1).hasSame(this.s,e))}isEmpty(){return this.s.valueOf()===this.e.valueOf()}isAfter(e){return!!this.isValid&&this.s>e}isBefore(e){return!!this.isValid&&this.e<=e}contains(e){return!!this.isValid&&this.s<=e&&this.e>e}set({start:e,end:t}={}){return this.isValid?ma.fromDateTimes(e||this.s,t||this.e):this}splitAt(...e){if(!this.isValid)return[];const t=e.map(nr).filter((e=>this.contains(e))).sort(((e,t)=>e.toMillis()-t.toMillis())),n=[];let{s:a}=this,r=0;for(;a<this.e;){const e=t[r]||this.e,i=+e>+this.e?this.e:e;n.push(ma.fromDateTimes(a,i)),a=i,r+=1}return n}splitBy(e){const t=ca.fromDurationLike(e);if(!this.isValid||!t.isValid||0===t.as("milliseconds"))return[];let n,{s:a}=this,r=1;const i=[];for(;a<this.e;){const e=this.start.plus(t.mapUnits((e=>e*r)));n=+e>+this.e?this.e:e,i.push(ma.fromDateTimes(a,n)),a=n,r+=1}return i}divideEqually(e){return this.isValid?this.splitBy(this.length()/e).slice(0,e):[]}overlaps(e){return this.e>e.s&&this.s<e.e}abutsStart(e){return!!this.isValid&&+this.e==+e.s}abutsEnd(e){return!!this.isValid&&+e.e==+this.s}engulfs(e){return!!this.isValid&&this.s<=e.s&&this.e>=e.e}equals(e){return!(!this.isValid||!e.isValid)&&this.s.equals(e.s)&&this.e.equals(e.e)}intersection(e){if(!this.isValid)return this;const t=this.s>e.s?this.s:e.s,n=this.e<e.e?this.e:e.e;return t>=n?null:ma.fromDateTimes(t,n)}union(e){if(!this.isValid)return this;const t=this.s<e.s?this.s:e.s,n=this.e>e.e?this.e:e.e;return ma.fromDateTimes(t,n)}static merge(e){const[t,n]=e.sort(((e,t)=>e.s-t.s)).reduce((([e,t],n)=>t?t.overlaps(n)||t.abutsStart(n)?[e,t.union(n)]:[e.concat([t]),n]:[e,n]),[[],null]);return n&&t.push(n),t}static xor(e){let t=null,n=0;const a=[],r=e.map((e=>[{time:e.s,type:"s"},{time:e.e,type:"e"}])),i=Array.prototype.concat(...r).sort(((e,t)=>e.time-t.time));for(const e of i)n+="s"===e.type?1:-1,1===n?t=e.time:(t&&+t!=+e.time&&a.push(ma.fromDateTimes(t,e.time)),t=null);return ma.merge(a)}difference(...e){return ma.xor([this].concat(e)).map((e=>this.intersection(e))).filter((e=>e&&!e.isEmpty()))}toString(){return this.isValid?`[${this.s.toISO()} – ${this.e.toISO()})`:da}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }`:`Interval { Invalid, reason: ${this.invalidReason} }`}toLocaleString(e=ae,t={}){return this.isValid?hn.create(this.s.loc.clone(t),e).formatInterval(this):da}toISO(e){return this.isValid?`${this.s.toISO(e)}/${this.e.toISO(e)}`:da}toISODate(){return this.isValid?`${this.s.toISODate()}/${this.e.toISODate()}`:da}toISOTime(e){return this.isValid?`${this.s.toISOTime(e)}/${this.e.toISOTime(e)}`:da}toFormat(e,{separator:t=" – "}={}){return this.isValid?`${this.s.toFormat(e)}${t}${this.e.toFormat(e)}`:da}toDuration(e,t){return this.isValid?this.e.diff(this.s,e,t):ca.invalid(this.invalidReason)}mapEndpoints(e){return ma.fromDateTimes(e(this.s),e(this.e))}}class ha{static hasDST(e=lt.defaultZone){const t=tr.now().setZone(e).set({month:12});return!e.isUniversal&&t.offset!==t.set({month:6}).offset}static isValidIANAZone(e){return ke.isValidZone(e)}static normalizeZone(e){return Ge(e,lt.defaultZone)}static getStartOfWeek({locale:e=null,locObj:t=null}={}){return(t||Ve.create(e)).getStartOfWeek()}static getMinimumDaysInFirstWeek({locale:e=null,locObj:t=null}={}){return(t||Ve.create(e)).getMinDaysInFirstWeek()}static getWeekendWeekdays({locale:e=null,locObj:t=null}={}){return(t||Ve.create(e)).getWeekendDays().slice()}static months(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null,outputCalendar:r="gregory"}={}){return(a||Ve.create(t,n,r)).months(e)}static monthsFormat(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null,outputCalendar:r="gregory"}={}){return(a||Ve.create(t,n,r)).months(e,!0)}static weekdays(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null}={}){return(a||Ve.create(t,n,null)).weekdays(e)}static weekdaysFormat(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null}={}){return(a||Ve.create(t,n,null)).weekdays(e,!0)}static meridiems({locale:e=null}={}){return Ve.create(e).meridiems()}static eras(e="short",{locale:t=null}={}){return Ve.create(t,null,"gregory").eras(e)}static features(){return{relative:Ot(),localeWeek:Ct()}}}function fa(e,t){const n=e=>e.toUTC(0,{keepLocalTime:!0}).startOf("day").valueOf(),a=n(t)-n(e);return Math.floor(ca.fromMillis(a).as("days"))}function ga(e,t=(e=>e)){return{regex:e,deser:([e])=>t(function(e){let t=parseInt(e,10);if(isNaN(t)){t="";for(let n=0;n<e.length;n++){const a=e.charCodeAt(n);if(-1!==e[n].search(Ze.hanidec))t+=Je.indexOf(e[n]);else for(const e in Qe){const[n,r]=Qe[e];a>=n&&a<=r&&(t+=a-n)}}return parseInt(t,10)}return t}(e))}}const pa=`[ ${String.fromCharCode(160)}]`,ya=new RegExp(pa,"g");function Ta(e){return e.replace(/\./g,"\\.?").replace(ya,pa)}function va(e){return e.replace(/\./g,"").replace(ya," ").toLowerCase()}function ba(e,t){return null===e?null:{regex:RegExp(e.map(Ta).join("|")),deser:([n])=>e.findIndex((e=>va(n)===va(e)))+t}}function Sa(e,t){return{regex:e,deser:([,e,t])=>Yt(e,t),groups:t}}function xa(e){return{regex:e,deser:([e])=>e}}const wa={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};let Ia=null;function Da(e,t){return Array.prototype.concat(...e.map((e=>function(e,t){if(e.literal)return e;const n=Ca(hn.macroTokenToFormatOpts(e.val),t);return null==n||n.includes(void 0)?e:n}(e,t))))}class Ea{constructor(e,t){if(this.locale=e,this.format=t,this.tokens=Da(hn.parseFormat(t),e),this.units=this.tokens.map((t=>function(e,t){const n=Xe(t),a=Xe(t,"{2}"),r=Xe(t,"{3}"),i=Xe(t,"{4}"),s=Xe(t,"{6}"),o=Xe(t,"{1,2}"),l=Xe(t,"{1,3}"),u=Xe(t,"{1,6}"),c=Xe(t,"{1,9}"),d=Xe(t,"{2,4}"),m=Xe(t,"{4,6}"),h=e=>{return{regex:RegExp((t=e.val,t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"))),deser:([e])=>e,literal:!0};var t},f=(f=>{if(e.literal)return h(f);switch(f.val){case"G":return ba(t.eras("short"),0);case"GG":return ba(t.eras("long"),0);case"y":return ga(u);case"yy":case"kk":return ga(d,Vt);case"yyyy":case"kkkk":return ga(i);case"yyyyy":return ga(m);case"yyyyyy":return ga(s);case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return ga(o);case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return ga(a);case"MMM":return ba(t.months("short",!0),1);case"MMMM":return ba(t.months("long",!0),1);case"LLL":return ba(t.months("short",!1),1);case"LLLL":return ba(t.months("long",!1),1);case"o":case"S":return ga(l);case"ooo":case"SSS":return ga(r);case"u":return xa(c);case"uu":return xa(o);case"uuu":case"E":case"c":return ga(n);case"a":return ba(t.meridiems(),0);case"EEE":return ba(t.weekdays("short",!1),1);case"EEEE":return ba(t.weekdays("long",!1),1);case"ccc":return ba(t.weekdays("short",!0),1);case"cccc":return ba(t.weekdays("long",!0),1);case"Z":case"ZZ":return Sa(new RegExp(`([+-]${o.source})(?::(${a.source}))?`),2);case"ZZZ":return Sa(new RegExp(`([+-]${o.source})(${a.source})?`),2);case"z":return xa(/[a-z_+-/]{1,256}?/i);case" ":return xa(/[^\S\n\r]/);default:return h(f)}})(e)||{invalidReason:"missing Intl.DateTimeFormat.formatToParts support"};return f.token=e,f}(t,e))),this.disqualifyingUnit=this.units.find((e=>e.invalidReason)),!this.disqualifyingUnit){const[e,t]=[`^${(n=this.units).map((e=>e.regex)).reduce(((e,t)=>`${e}(${t.source})`),"")}$`,n];this.regex=RegExp(e,"i"),this.handlers=t}var n}explainFromTokens(e){if(this.isValid){const[t,n]=function(e,t,n){const a=e.match(t);if(a){const e={};let t=1;for(const r in n)if(Nt(n,r)){const i=n[r],s=i.groups?i.groups+1:1;!i.literal&&i.token&&(e[i.token.val[0]]=i.deser(a.slice(t,t+s))),t+=s}return[a,e]}return[a,{}]}(e,this.regex,this.handlers),[a,r,i]=n?function(e){let t,n=null;return It(e.z)||(n=ke.create(e.z)),It(e.Z)||(n||(n=new Ye(e.Z)),t=e.Z),It(e.q)||(e.M=3*(e.q-1)+1),It(e.h)||(e.h<12&&1===e.a?e.h+=12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),It(e.u)||(e.S=_t(e.u)),[Object.keys(e).reduce(((t,n)=>{const a=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(n);return a&&(t[a]=e[n]),t}),{}),n,t]}(n):[null,null,void 0];if(Nt(n,"a")&&Nt(n,"H"))throw new Q("Can't include meridiem when specifying 24-hour format");return{input:e,tokens:this.tokens,regex:this.regex,rawMatches:t,matches:n,result:a,zone:r,specificOffset:i}}return{input:e,tokens:this.tokens,invalidReason:this.invalidReason}}get isValid(){return!this.disqualifyingUnit}get invalidReason(){return this.disqualifyingUnit?this.disqualifyingUnit.invalidReason:null}}function Oa(e,t,n){return new Ea(e,n).explainFromTokens(t)}function Ca(e,t){if(!e)return null;const n=hn.create(t,e).dtFormatter((Ia||(Ia=tr.fromMillis(1555555555555)),Ia)),a=n.formatToParts(),r=n.resolvedOptions();return a.map((t=>function(e,t,n){const{type:a,value:r}=e;if("literal"===a){const e=/^\s+$/.test(r);return{literal:!e,val:e?" ":r}}const i=t[a];let s=a;"hour"===a&&(s=null!=t.hour12?t.hour12?"hour12":"hour24":null!=t.hourCycle?"h11"===t.hourCycle||"h12"===t.hourCycle?"hour12":"hour24":n.hour12?"hour12":"hour24");let o=wa[s];if("object"==typeof o&&(o=o[i]),o)return{literal:!1,val:o}}(t,e,r)))}const Aa="Invalid DateTime",Na=864e13;function ka(e){return new ut("unsupported zone",`the zone "${e.name}" is not supported`)}function Fa(e){return null===e.weekData&&(e.weekData=yt(e.c)),e.weekData}function Ra(e){return null===e.localWeekData&&(e.localWeekData=yt(e.c,e.loc.getMinDaysInFirstWeek(),e.loc.getStartOfWeek())),e.localWeekData}function $a(e,t){const n={ts:e.ts,zone:e.zone,c:e.c,o:e.o,loc:e.loc,invalid:e.invalid};return new tr({...n,...t,old:n})}function Ma(e,t,n){let a=e-60*t*1e3;const r=n.offset(a);if(t===r)return[a,t];a-=60*(r-t)*1e3;const i=n.offset(a);return r===i?[a,r]:[e-60*Math.min(r,i)*1e3,Math.max(r,i)]}function _a(e,t){const n=new Date(e+=60*t*1e3);return{year:n.getUTCFullYear(),month:n.getUTCMonth()+1,day:n.getUTCDate(),hour:n.getUTCHours(),minute:n.getUTCMinutes(),second:n.getUTCSeconds(),millisecond:n.getUTCMilliseconds()}}function Ua(e,t,n){return Ma(qt(e),t,n)}function La(e,t){const n=e.o,a=e.c.year+Math.trunc(t.years),r=e.c.month+Math.trunc(t.months)+3*Math.trunc(t.quarters),i={...e.c,year:a,month:r,day:Math.min(e.c.day,Pt(a,r))+Math.trunc(t.days)+7*Math.trunc(t.weeks)},s=ca.fromObject({years:t.years-Math.trunc(t.years),quarters:t.quarters-Math.trunc(t.quarters),months:t.months-Math.trunc(t.months),weeks:t.weeks-Math.trunc(t.weeks),days:t.days-Math.trunc(t.days),hours:t.hours,minutes:t.minutes,seconds:t.seconds,milliseconds:t.milliseconds}).as("milliseconds"),o=qt(i);let[l,u]=Ma(o,n,e.zone);return 0!==s&&(l+=s,u=e.zone.offset(l)),{ts:l,o:u}}function Ha(e,t,n,a,r,i){const{setZone:s,zone:o}=n;if(e&&0!==Object.keys(e).length||t){const a=t||o,r=tr.fromObject(e,{...n,zone:a,specificOffset:i});return s?r:r.setZone(o)}return tr.invalid(new ut("unparsable",`the input "${r}" can't be parsed as ${a}`))}function Pa(e,t,n=!0){return e.isValid?hn.create(Ve.create("en-US"),{allowZ:n,forceSimple:!0}).formatDateTimeFromString(e,t):null}function qa(e,t){const n=e.c.year>9999||e.c.year<0;let a="";return n&&e.c.year>=0&&(a+="+"),a+=Rt(e.c.year,n?6:4),t?(a+="-",a+=Rt(e.c.month),a+="-",a+=Rt(e.c.day)):(a+=Rt(e.c.month),a+=Rt(e.c.day)),a}function ja(e,t,n,a,r,i){let s=Rt(e.c.hour);return t?(s+=":",s+=Rt(e.c.minute),0===e.c.millisecond&&0===e.c.second&&n||(s+=":")):s+=Rt(e.c.minute),0===e.c.millisecond&&0===e.c.second&&n||(s+=Rt(e.c.second),0===e.c.millisecond&&a||(s+=".",s+=Rt(e.c.millisecond,3))),r&&(e.isOffsetFixed&&0===e.offset&&!i?s+="Z":e.o<0?(s+="-",s+=Rt(Math.trunc(-e.o/60)),s+=":",s+=Rt(Math.trunc(-e.o%60))):(s+="+",s+=Rt(Math.trunc(e.o/60)),s+=":",s+=Rt(Math.trunc(e.o%60)))),i&&(s+="["+e.zone.ianaName+"]"),s}const Wa={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},Va={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},za={ordinal:1,hour:0,minute:0,second:0,millisecond:0},Ya=["year","month","day","hour","minute","second","millisecond"],Ba=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],Ga=["year","ordinal","hour","minute","second","millisecond"];function Za(e){switch(e.toLowerCase()){case"localweekday":case"localweekdays":return"localWeekday";case"localweeknumber":case"localweeknumbers":return"localWeekNumber";case"localweekyear":case"localweekyears":return"localWeekYear";default:return function(e){const t={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[e.toLowerCase()];if(!t)throw new J(e);return t}(e)}}function Qa(e,t){const n=Ge(t.zone,lt.defaultZone);if(!n.isValid)return tr.invalid(ka(n));const a=Ve.fromObject(t);let r,i;if(It(e.year))r=lt.now();else{for(const t of Ya)It(e[t])&&(e[t]=Wa[t]);const t=xt(e)||wt(e);if(t)return tr.invalid(t);const a=function(e){return er[e]||(void 0===Xa&&(Xa=lt.now()),er[e]=e.offset(Xa)),er[e]}(n);[r,i]=Ua(e,a,n)}return new tr({ts:r,zone:n,loc:a,o:i})}function Ja(e,t,n){const a=!!It(n.round)||n.round,r=(e,r)=>(e=Ut(e,a||n.calendary?0:2,!0),t.loc.clone(n).relFormatter(n).format(e,r)),i=a=>n.calendary?t.hasSame(e,a)?0:t.startOf(a).diff(e.startOf(a),a).get(a):t.diff(e,a).get(a);if(n.unit)return r(i(n.unit),n.unit);for(const e of n.units){const t=i(e);if(Math.abs(t)>=1)return r(t,e)}return r(e>t?-0:0,n.units[n.units.length-1])}function Ka(e){let t,n={};return e.length>0&&"object"==typeof e[e.length-1]?(n=e[e.length-1],t=Array.from(e).slice(0,e.length-1)):t=Array.from(e),[n,t]}let Xa,er={};class tr{constructor(e){const t=e.zone||lt.defaultZone;let n=e.invalid||(Number.isNaN(e.ts)?new ut("invalid input"):null)||(t.isValid?null:ka(t));this.ts=It(e.ts)?lt.now():e.ts;let a=null,r=null;if(!n)if(e.old&&e.old.ts===this.ts&&e.old.zone.equals(t))[a,r]=[e.old.c,e.old.o];else{const i=Dt(e.o)&&!e.old?e.o:t.offset(this.ts);a=_a(this.ts,i),n=Number.isNaN(a.year)?new ut("invalid input"):null,a=n?null:a,r=n?null:i}this._zone=t,this.loc=e.loc||Ve.create(),this.invalid=n,this.weekData=null,this.localWeekData=null,this.c=a,this.o=r,this.isLuxonDateTime=!0}static now(){return new tr({})}static local(){const[e,t]=Ka(arguments),[n,a,r,i,s,o,l]=t;return Qa({year:n,month:a,day:r,hour:i,minute:s,second:o,millisecond:l},e)}static utc(){const[e,t]=Ka(arguments),[n,a,r,i,s,o,l]=t;return e.zone=Ye.utcInstance,Qa({year:n,month:a,day:r,hour:i,minute:s,second:o,millisecond:l},e)}static fromJSDate(e,t={}){const n=(a=e,"[object Date]"===Object.prototype.toString.call(a)?e.valueOf():NaN);var a;if(Number.isNaN(n))return tr.invalid("invalid input");const r=Ge(t.zone,lt.defaultZone);return r.isValid?new tr({ts:n,zone:r,loc:Ve.fromObject(t)}):tr.invalid(ka(r))}static fromMillis(e,t={}){if(Dt(e))return e<-Na||e>Na?tr.invalid("Timestamp out of range"):new tr({ts:e,zone:Ge(t.zone,lt.defaultZone),loc:Ve.fromObject(t)});throw new K(`fromMillis requires a numerical input, but received a ${typeof e} with value ${e}`)}static fromSeconds(e,t={}){if(Dt(e))return new tr({ts:1e3*e,zone:Ge(t.zone,lt.defaultZone),loc:Ve.fromObject(t)});throw new K("fromSeconds requires a numerical input")}static fromObject(e,t={}){e=e||{};const n=Ge(t.zone,lt.defaultZone);if(!n.isValid)return tr.invalid(ka(n));const a=Ve.fromObject(t),r=Gt(e,Za),{minDaysInFirstWeek:i,startOfWeek:s}=St(r,a),o=lt.now(),l=It(t.specificOffset)?n.offset(o):t.specificOffset,u=!It(r.ordinal),c=!It(r.year),d=!It(r.month)||!It(r.day),m=c||d,h=r.weekYear||r.weekNumber;if((m||u)&&h)throw new Q("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(d&&u)throw new Q("Can't mix ordinal dates with month/day");const f=h||r.weekday&&!m;let g,p,y=_a(o,l);f?(g=Ba,p=Va,y=yt(y,i,s)):u?(g=Ga,p=za,y=vt(y)):(g=Ya,p=Wa);let T=!1;for(const e of g)It(r[e])?r[e]=T?p[e]:y[e]:T=!0;const v=f?function(e,t=4,n=1){const a=Et(e.weekYear),r=Ft(e.weekNumber,1,Wt(e.weekYear,t,n)),i=Ft(e.weekday,1,7);return a?r?!i&&mt("weekday",e.weekday):mt("week",e.weekNumber):mt("weekYear",e.weekYear)}(r,i,s):u?function(e){const t=Et(e.year),n=Ft(e.ordinal,1,Ht(e.year));return t?!n&&mt("ordinal",e.ordinal):mt("year",e.year)}(r):xt(r),b=v||wt(r);if(b)return tr.invalid(b);const S=f?Tt(r,i,s):u?bt(r):r,[x,w]=Ua(S,l,n),I=new tr({ts:x,zone:n,o:w,loc:a});return r.weekday&&m&&e.weekday!==I.weekday?tr.invalid("mismatched weekday",`you can't specify both a weekday of ${r.weekday} and a date of ${I.toISO()}`):I.isValid?I:tr.invalid(I.invalid)}static fromISO(e,t={}){const[n,a]=function(e){return yn(e,[Wn,Bn],[Vn,Gn],[zn,Zn],[Yn,Qn])}(e);return Ha(n,a,t,"ISO 8601",e)}static fromRFC2822(e,t={}){const[n,a]=function(e){return yn(function(e){return e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim()}(e),[_n,Un])}(e);return Ha(n,a,t,"RFC 2822",e)}static fromHTTP(e,t={}){const[n,a]=function(e){return yn(e,[Ln,qn],[Hn,qn],[Pn,jn])}(e);return Ha(n,a,t,"HTTP",t)}static fromFormat(e,t,n={}){if(It(e)||It(t))throw new K("fromFormat requires an input string and a format");const{locale:a=null,numberingSystem:r=null}=n,i=Ve.fromOpts({locale:a,numberingSystem:r,defaultToEN:!0}),[s,o,l,u]=function(e,t,n){const{result:a,zone:r,specificOffset:i,invalidReason:s}=Oa(e,t,n);return[a,r,i,s]}(i,e,t);return u?tr.invalid(u):Ha(s,o,n,`format ${t}`,e,l)}static fromString(e,t,n={}){return tr.fromFormat(e,t,n)}static fromSQL(e,t={}){const[n,a]=function(e){return yn(e,[Kn,Bn],[Xn,ea])}(e);return Ha(n,a,t,"SQL",e)}static invalid(e,t=null){if(!e)throw new K("need to specify a reason the DateTime is invalid");const n=e instanceof ut?e:new ut(e,t);if(lt.throwOnInvalid)throw new B(n);return new tr({invalid:n})}static isDateTime(e){return e&&e.isLuxonDateTime||!1}static parseFormatForOpts(e,t={}){const n=Ca(e,Ve.fromObject(t));return n?n.map((e=>e?e.val:null)).join(""):null}static expandFormat(e,t={}){return Da(hn.parseFormat(e),Ve.fromObject(t)).map((e=>e.val)).join("")}static resetCache(){Xa=void 0,er={}}get(e){return this[e]}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}get outputCalendar(){return this.isValid?this.loc.outputCalendar:null}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}get year(){return this.isValid?this.c.year:NaN}get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN}get month(){return this.isValid?this.c.month:NaN}get day(){return this.isValid?this.c.day:NaN}get hour(){return this.isValid?this.c.hour:NaN}get minute(){return this.isValid?this.c.minute:NaN}get second(){return this.isValid?this.c.second:NaN}get millisecond(){return this.isValid?this.c.millisecond:NaN}get weekYear(){return this.isValid?Fa(this).weekYear:NaN}get weekNumber(){return this.isValid?Fa(this).weekNumber:NaN}get weekday(){return this.isValid?Fa(this).weekday:NaN}get isWeekend(){return this.isValid&&this.loc.getWeekendDays().includes(this.weekday)}get localWeekday(){return this.isValid?Ra(this).weekday:NaN}get localWeekNumber(){return this.isValid?Ra(this).weekNumber:NaN}get localWeekYear(){return this.isValid?Ra(this).weekYear:NaN}get ordinal(){return this.isValid?vt(this.c).ordinal:NaN}get monthShort(){return this.isValid?ha.months("short",{locObj:this.loc})[this.month-1]:null}get monthLong(){return this.isValid?ha.months("long",{locObj:this.loc})[this.month-1]:null}get weekdayShort(){return this.isValid?ha.weekdays("short",{locObj:this.loc})[this.weekday-1]:null}get weekdayLong(){return this.isValid?ha.weekdays("long",{locObj:this.loc})[this.weekday-1]:null}get offset(){return this.isValid?+this.o:NaN}get offsetNameShort(){return this.isValid?this.zone.offsetName(this.ts,{format:"short",locale:this.locale}):null}get offsetNameLong(){return this.isValid?this.zone.offsetName(this.ts,{format:"long",locale:this.locale}):null}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset)}getPossibleOffsets(){if(!this.isValid||this.isOffsetFixed)return[this];const e=864e5,t=6e4,n=qt(this.c),a=this.zone.offset(n-e),r=this.zone.offset(n+e),i=this.zone.offset(n-a*t),s=this.zone.offset(n-r*t);if(i===s)return[this];const o=n-i*t,l=n-s*t,u=_a(o,i),c=_a(l,s);return u.hour===c.hour&&u.minute===c.minute&&u.second===c.second&&u.millisecond===c.millisecond?[$a(this,{ts:o}),$a(this,{ts:l})]:[this]}get isInLeapYear(){return Lt(this.year)}get daysInMonth(){return Pt(this.year,this.month)}get daysInYear(){return this.isValid?Ht(this.year):NaN}get weeksInWeekYear(){return this.isValid?Wt(this.weekYear):NaN}get weeksInLocalWeekYear(){return this.isValid?Wt(this.localWeekYear,this.loc.getMinDaysInFirstWeek(),this.loc.getStartOfWeek()):NaN}resolvedLocaleOptions(e={}){const{locale:t,numberingSystem:n,calendar:a}=hn.create(this.loc.clone(e),e).resolvedOptions(this);return{locale:t,numberingSystem:n,outputCalendar:a}}toUTC(e=0,t={}){return this.setZone(Ye.instance(e),t)}toLocal(){return this.setZone(lt.defaultZone)}setZone(e,{keepLocalTime:t=!1,keepCalendarTime:n=!1}={}){if((e=Ge(e,lt.defaultZone)).equals(this.zone))return this;if(e.isValid){let a=this.ts;if(t||n){const t=e.offset(this.ts),n=this.toObject();[a]=Ua(n,t,e)}return $a(this,{ts:a,zone:e})}return tr.invalid(ka(e))}reconfigure({locale:e,numberingSystem:t,outputCalendar:n}={}){return $a(this,{loc:this.loc.clone({locale:e,numberingSystem:t,outputCalendar:n})})}setLocale(e){return this.reconfigure({locale:e})}set(e){if(!this.isValid)return this;const t=Gt(e,Za),{minDaysInFirstWeek:n,startOfWeek:a}=St(t,this.loc),r=!It(t.weekYear)||!It(t.weekNumber)||!It(t.weekday),i=!It(t.ordinal),s=!It(t.year),o=!It(t.month)||!It(t.day),l=s||o,u=t.weekYear||t.weekNumber;if((l||i)&&u)throw new Q("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(o&&i)throw new Q("Can't mix ordinal dates with month/day");let c;r?c=Tt({...yt(this.c,n,a),...t},n,a):It(t.ordinal)?(c={...this.toObject(),...t},It(t.day)&&(c.day=Math.min(Pt(c.year,c.month),c.day))):c=bt({...vt(this.c),...t});const[d,m]=Ua(c,this.o,this.zone);return $a(this,{ts:d,o:m})}plus(e){return this.isValid?$a(this,La(this,ca.fromDurationLike(e))):this}minus(e){return this.isValid?$a(this,La(this,ca.fromDurationLike(e).negate())):this}startOf(e,{useLocaleWeeks:t=!1}={}){if(!this.isValid)return this;const n={},a=ca.normalizeUnit(e);switch(a){case"years":n.month=1;case"quarters":case"months":n.day=1;case"weeks":case"days":n.hour=0;case"hours":n.minute=0;case"minutes":n.second=0;case"seconds":n.millisecond=0}if("weeks"===a)if(t){const e=this.loc.getStartOfWeek(),{weekday:t}=this;t<e&&(n.weekNumber=this.weekNumber-1),n.weekday=e}else n.weekday=1;if("quarters"===a){const e=Math.ceil(this.month/3);n.month=3*(e-1)+1}return this.set(n)}endOf(e,t){return this.isValid?this.plus({[e]:1}).startOf(e,t).minus(1):this}toFormat(e,t={}){return this.isValid?hn.create(this.loc.redefaultToEN(t)).formatDateTimeFromString(this,e):Aa}toLocaleString(e=ae,t={}){return this.isValid?hn.create(this.loc.clone(t),e).formatDateTime(this):Aa}toLocaleParts(e={}){return this.isValid?hn.create(this.loc.clone(e),e).formatDateTimeParts(this):[]}toISO({format:e="extended",suppressSeconds:t=!1,suppressMilliseconds:n=!1,includeOffset:a=!0,extendedZone:r=!1}={}){if(!this.isValid)return null;const i="extended"===e;let s=qa(this,i);return s+="T",s+=ja(this,i,t,n,a,r),s}toISODate({format:e="extended"}={}){return this.isValid?qa(this,"extended"===e):null}toISOWeekDate(){return Pa(this,"kkkk-'W'WW-c")}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:n=!0,includePrefix:a=!1,extendedZone:r=!1,format:i="extended"}={}){return this.isValid?(a?"T":"")+ja(this,"extended"===i,t,e,n,r):null}toRFC2822(){return Pa(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)}toHTTP(){return Pa(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")}toSQLDate(){return this.isValid?qa(this,!0):null}toSQLTime({includeOffset:e=!0,includeZone:t=!1,includeOffsetSpace:n=!0}={}){let a="HH:mm:ss.SSS";return(t||e)&&(n&&(a+=" "),t?a+="z":e&&(a+="ZZ")),Pa(this,a,!0)}toSQL(e={}){return this.isValid?`${this.toSQLDate()} ${this.toSQLTime(e)}`:null}toString(){return this.isValid?this.toISO():Aa}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`:`DateTime { Invalid, reason: ${this.invalidReason} }`}valueOf(){return this.toMillis()}toMillis(){return this.isValid?this.ts:NaN}toSeconds(){return this.isValid?this.ts/1e3:NaN}toUnixInteger(){return this.isValid?Math.floor(this.ts/1e3):NaN}toJSON(){return this.toISO()}toBSON(){return this.toJSDate()}toObject(e={}){if(!this.isValid)return{};const t={...this.c};return e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this.loc.numberingSystem,t.locale=this.loc.locale),t}toJSDate(){return new Date(this.isValid?this.ts:NaN)}diff(e,t="milliseconds",n={}){if(!this.isValid||!e.isValid)return ca.invalid("created by diffing an invalid DateTime");const a={locale:this.locale,numberingSystem:this.numberingSystem,...n},r=(o=t,Array.isArray(o)?o:[o]).map(ca.normalizeUnit),i=e.valueOf()>this.valueOf(),s=function(e,t,n,a){let[r,i,s,o]=function(e,t,n){const a=[["years",(e,t)=>t.year-e.year],["quarters",(e,t)=>t.quarter-e.quarter+4*(t.year-e.year)],["months",(e,t)=>t.month-e.month+12*(t.year-e.year)],["weeks",(e,t)=>{const n=fa(e,t);return(n-n%7)/7}],["days",fa]],r={},i=e;let s,o;for(const[l,u]of a)n.indexOf(l)>=0&&(s=l,r[l]=u(e,t),o=i.plus(r),o>t?(r[l]--,(e=i.plus(r))>t&&(o=e,r[l]--,e=i.plus(r))):e=o);return[e,r,o,s]}(e,t,n);const l=t-r,u=n.filter((e=>["hours","minutes","seconds","milliseconds"].indexOf(e)>=0));0===u.length&&(s<t&&(s=r.plus({[o]:1})),s!==r&&(i[o]=(i[o]||0)+l/(s-r)));const c=ca.fromObject(i,a);return u.length>0?ca.fromMillis(l,a).shiftTo(...u).plus(c):c}(i?this:e,i?e:this,r,a);var o;return i?s.negate():s}diffNow(e="milliseconds",t={}){return this.diff(tr.now(),e,t)}until(e){return this.isValid?ma.fromDateTimes(this,e):this}hasSame(e,t,n){if(!this.isValid)return!1;const a=e.valueOf(),r=this.setZone(e.zone,{keepLocalTime:!0});return r.startOf(t,n)<=a&&a<=r.endOf(t,n)}equals(e){return this.isValid&&e.isValid&&this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this.loc.equals(e.loc)}toRelative(e={}){if(!this.isValid)return null;const t=e.base||tr.fromObject({},{zone:this.zone}),n=e.padding?this<t?-e.padding:e.padding:0;let a=["years","months","days","hours","minutes","seconds"],r=e.unit;return Array.isArray(e.unit)&&(a=e.unit,r=void 0),Ja(t,this.plus(n),{...e,numeric:"always",units:a,unit:r})}toRelativeCalendar(e={}){return this.isValid?Ja(e.base||tr.fromObject({},{zone:this.zone}),this,{...e,numeric:"auto",units:["years","months","days"],calendary:!0}):null}static min(...e){if(!e.every(tr.isDateTime))throw new K("min requires all arguments be DateTimes");return At(e,(e=>e.valueOf()),Math.min)}static max(...e){if(!e.every(tr.isDateTime))throw new K("max requires all arguments be DateTimes");return At(e,(e=>e.valueOf()),Math.max)}static fromFormatExplain(e,t,n={}){const{locale:a=null,numberingSystem:r=null}=n;return Oa(Ve.fromOpts({locale:a,numberingSystem:r,defaultToEN:!0}),e,t)}static fromStringExplain(e,t,n={}){return tr.fromFormatExplain(e,t,n)}static buildFormatParser(e,t={}){const{locale:n=null,numberingSystem:a=null}=t,r=Ve.fromOpts({locale:n,numberingSystem:a,defaultToEN:!0});return new Ea(r,e)}static fromFormatParser(e,t,n={}){if(It(e)||It(t))throw new K("fromFormatParser requires an input string and a format parser");const{locale:a=null,numberingSystem:r=null}=n,i=Ve.fromOpts({locale:a,numberingSystem:r,defaultToEN:!0});if(!i.equals(t.locale))throw new K(`fromFormatParser called with a locale of ${i}, but the format parser was created for ${t.locale}`);const{result:s,zone:o,specificOffset:l,invalidReason:u}=t.explainFromTokens(e);return u?tr.invalid(u):Ha(s,o,n,`format ${t.format}`,e,l)}static get DATE_SHORT(){return ae}static get DATE_MED(){return re}static get DATE_MED_WITH_WEEKDAY(){return ie}static get DATE_FULL(){return se}static get DATE_HUGE(){return oe}static get TIME_SIMPLE(){return le}static get TIME_WITH_SECONDS(){return ue}static get TIME_WITH_SHORT_OFFSET(){return ce}static get TIME_WITH_LONG_OFFSET(){return de}static get TIME_24_SIMPLE(){return me}static get TIME_24_WITH_SECONDS(){return he}static get TIME_24_WITH_SHORT_OFFSET(){return fe}static get TIME_24_WITH_LONG_OFFSET(){return ge}static get DATETIME_SHORT(){return pe}static get DATETIME_SHORT_WITH_SECONDS(){return ye}static get DATETIME_MED(){return Te}static get DATETIME_MED_WITH_SECONDS(){return ve}static get DATETIME_MED_WITH_WEEKDAY(){return be}static get DATETIME_FULL(){return Se}static get DATETIME_FULL_WITH_SECONDS(){return xe}static get DATETIME_HUGE(){return we}static get DATETIME_HUGE_WITH_SECONDS(){return Ie}}function nr(e){if(tr.isDateTime(e))return e;if(e&&e.valueOf&&Dt(e.valueOf()))return tr.fromJSDate(e);if(e&&"object"==typeof e)return tr.fromObject(e);throw new K(`Unknown datetime argument: ${e}, of type ${typeof e}`)}function ar(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const rr=(e,t)=>{const n=["yyyy-MM-dd HH:mm:ss.SSS","yyyy-MM-dd HH:mm:ss.SSSSSS","yyyy-MM-dd HH:mm:ss.SSSSSSSSS","yyyy-MM-dd HH:mm:ss","MM/dd/yyyy HH:mm","dd-MM-yyyy HH:mm:ss","yyyy/MM/dd HH:mm:ss","MMM dd, yyyy HH:mm:ss"].map((n=>tr.fromFormat(e,n,{zone:t}))).find((e=>e.isValid))||tr.fromISO(e,{zone:t});if(!n.isValid)throw new Error(`Invalid datetime format: "${e}"`);return n.toUTC().toISO()},ir=(t,n)=>{t.startsWith("Nullable(")&&(t=(t=t.slice(9)).slice(0,-1));const a=t.match(/^\s*DateTime(?:64)?\s*\(\s*(?:\d+\s*,\s*)?['"]([^'"]+)['"]\s*\)\s*$/i);let r;return a?(r=a[1],{fieldType:e.FieldType.time,timezone:r}):t.startsWith("Date")||0===n&&t.startsWith("UInt")?e.FieldType.time:t.startsWith("UInt")||t.startsWith("Int")||t.startsWith("Float")||t.startsWith("Decimal")?e.FieldType.number:t.startsWith("IPv")?e.FieldType.other:e.FieldType.string};class sr{constructor(n){ar(this,"refId",void 0),ar(this,"series",void 0),ar(this,"keys",void 0),ar(this,"meta",void 0),ar(this,"tillNow",void 0),ar(this,"from",void 0),ar(this,"to",void 0),ar(this,"toAnnotation",((e,t)=>P(e,t))),ar(this,"toFlamegraph",(()=>(e=>{try{return function(e){const t=e.filter((e=>!(0===Number(e.level)))),n={label:{name:"label",type:"string",values:["all"],config:{}},level:{name:"level",type:"number",values:[0],config:{}},value:{name:"value",type:"number",values:[0],config:{}},self:{name:"self",type:"number",values:[0],config:{}}};return n.value.values[0]=e.filter((e=>1===Number(e.level))).reduce(((e,t)=>e+Number(t.value)),0),t.forEach((e=>{n.label.values.push(e.label),n.level.values.push(Number(e.level)),n.value.values.push(Number(e.value)),n.self.values.push(e.self)})),[{fields:Object.values(n),length:e.length}]}(e)}catch(e){var t;return[{fields:[{name:"error",type:"string",values:[null===(t=e)||void 0===t?void 0:t.message],config:{}}],length:1}]}})(this.series))),ar(this,"toLogs",(()=>(n=>{var a,r,i,s,o,l,u,c,d,m,h,f,g;const p=["severity","level","id"];if(0===n.series.length)return[];let y={},T=[];const v=[];let b,S=null===(a=(0,t.find)(n.meta,["name","content"]))||void 0===a?void 0:a.name;var x;if(void 0===S&&(S=null===(x=(0,t.find)(n.meta,(t=>q(t.type)===e.FieldType.string)))||void 0===x?void 0:x.name),void 0===S)return[];(0,t.each)(n.meta,(function(t,n){let a=q(t.type,n);a!==e.FieldType.number&&a!==e.FieldType.string||t.name===S||p.includes(t.name)||T.push(t.name),y[t.name]=a}));const w=Object.entries(n.series[0]).reduce(((e,[t,n])=>(e[t]={type:y[t],values:[],name:t},e)),{});return(0,t.each)(n.series,(function(n){var a,r;const i=(0,t.pickBy)(n,((e,t)=>T.includes(t)));Object.keys(i).length>0&&v.push((e=>{if(e&&"object"==typeof e){const t=Array.isArray(e)?[]:{};for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n)){const a=e[n];t[n]=a&&"object"==typeof a?JSON.stringify(a):a}return t}return e})(i));const s=(0,t.omitBy)(n,((e,t)=>{T.includes(t)})),o=null===(a=Object.entries(y))||void 0===a?void 0:a.find((e=>"time"===e[1]));b=o?o[0]:null,null===(r=Object.entries(s))||void 0===r||r.forEach((([t,n])=>{y[t]&&y[t]instanceof Object&&"fieldType"in y[t]&&y[t].fieldType===e.FieldType.time?(b=t,w[t].values.push(rr(n,y[t].timezone))):w[t].values.push(n)}))})),[(0,e.createDataFrame)({fields:[(null===(r=w[b])||void 0===r?void 0:r.values.length)&&{name:"timestamp",type:e.FieldType.time,values:null===(i=w[b])||void 0===i?void 0:i.values},((null===(o=w.level)||void 0===o||null===(s=o.values)||void 0===s?void 0:s.length)||(null===(u=w.severity)||void 0===u||null===(l=u.values)||void 0===l?void 0:l.length))&&{name:"severity",type:null===(c=w.level||w.severity)||void 0===c?void 0:c.type,values:null===(d=w.level||w.severity)||void 0===d?void 0:d.values},w[S]&&{name:"body",type:w[S].type,values:w[S].values,config:{filterable:!1}},v.length&&{name:"labels",values:v,type:e.FieldType.other},(null===(h=w.id)||void 0===h||null===(m=h.values)||void 0===m?void 0:m.length)&&{name:"id",type:null===(f=w.id)||void 0===f?void 0:f.type,values:null===(g=w.id)||void 0===g?void 0:g.values}].filter(Boolean),meta:{type:e.DataFrameType.LogLines,preferredVisualisationType:"logs"},refId:n.refId})]})(this))),ar(this,"toTable",(()=>(e=>{let n=[];if(0===e.series.length)return n;let a=[];(0,t.each)(e.meta,(function(e){a.push({text:e.name,type:j(e.type)})}));let r=[];return(0,t.each)(e.series,(function(n){let i=[];(0,t.each)(a,(function(t,a){i.push(((e,t)=>{if(null===e)return e;if("object"==typeof e)return JSON.stringify(e);let n=Number(e);return isNaN(n)||"number"!==t?e:n})(n[t.text],j(e.meta[a].type)))})),r.push(i)})),n.push({columns:a,rows:r,type:"table"}),n})(this))),ar(this,"toTimeSeries",((n=!0)=>((n=!0,a)=>{let r=[];if(0===a.series.length)return r;let i={},s=a.meta[0],o=ir(s.type||""),l=a.series[0][s.name],u=a.keys.filter((e=>e!==s.name));return(0,t.each)(a.series,(function(n){let r=W(n[s.name]),c=null;u.length>0&&(c=u.map((e=>{const t=n[e];if(void 0!==t)return"object"==typeof t?JSON.stringify(t):String(t)})).join(", ")),l<r&&((0,t.each)(i,(function(e,t){e[e.length-1][1]<l&&e.push([null,l])})),l=r),(0,t.each)(n,(function(n,l){var u;0===a.keys.length&&s.name===l||a.keys.indexOf(l)>=0||(c&&(l=c),(null===(u=o)||void 0===u?void 0:u.fieldType)===e.FieldType.time&&(r=rr(r,o.timezone)),(0,t.isArray)(n)?(0,t.each)(n,(function(e){z(i,r,e[0],e[1])})):z(i,r,l,n))}))})),(0,t.each)(i,(function(e,t){n?r.push({target:t,datapoints:V(e,a),refId:t&&a.refId?`${a.refId} - ${t}`:void 0}):r.push({target:t,datapoints:e,refId:t&&a.refId?`${a.refId} - ${t}`:void 0})})),r})(n,this))),ar(this,"toTraces",(()=>{return t=this.series,n=this.meta,function(t){let a=n.find((e=>"startTime"===e.name)),r=ir(a.type||"");const i={traceID:{name:"traceID",type:"string",values:[],config:{}},spanID:{name:"spanID",type:"string",values:[],config:{}},operationName:{name:"operationName",type:"string",values:[],config:{}},parentSpanID:{name:"parentSpanID",type:"string",values:[],config:{}},serviceName:{name:"serviceName",type:"string",values:[],config:{}},startTime:{name:"startTime",type:"number",values:[],config:{}},duration:{name:"duration",type:"number",values:[],config:{}},tags:{name:"tags",type:"number",values:[],config:{}},serviceTags:{name:"serviceTags",type:"number",values:[],config:{}}};return t.forEach((t=>{var n;const a=(null===(n=r)||void 0===n?void 0:n.fieldType)===e.FieldType.time;let s;a&&(s=((e,t)=>{const n=["yyyy-MM-dd HH:mm:ss.SSS","yyyy-MM-dd HH:mm:ss.SSSSSS","yyyy-MM-dd HH:mm:ss.SSSSSSSSS","yyyy-MM-dd HH:mm:ss","MM/dd/yyyy HH:mm","dd-MM-yyyy HH:mm:ss","yyyy/MM/dd HH:mm:ss","MMM dd, yyyy HH:mm:ss"].map((n=>tr.fromFormat(e,n,{zone:t}))).find((e=>e.isValid))||tr.fromISO(e,{zone:t});if(!n.isValid)throw new Error(`Invalid datetime format: "${e}"`);return n.toUTC().toMillis()})(t.startTime,r.timezone)),i.traceID.values.push(t.traceID),i.spanID.values.push(t.spanID),i.operationName.values.push(t.operationName),i.parentSpanID.values.push(t.parentSpanID||null),i.serviceName.values.push(t.serviceName),i.startTime.values.push(a?s:parseInt(t.startTime.toString(),10)),i.duration.values.push(parseInt(t.duration.toString(),10)),i.tags.values.push(Object.entries(t.tags).map((([e,t])=>({key:e,value:t})))),i.serviceTags.values.push(Object.entries(t.serviceTags).map((([e,t])=>({key:e,value:t}))))})),[{fields:Object.values(i),length:t.length}]}(t);var t,n})),this.refId=n.refId,this.series=n.series,this.meta=n.meta,this.tillNow=n.tillNow,this.from=n.from,this.to=n.to,this.keys=n.keys||[]}}function or(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const lr="\\s+",ur="--(([^'\n]*[']){2})*[^'\n]*(?=\n|$)|/\\*(?:[^*]|\\*[^/])*\\*/",cr="[a-zA-Z_][a-zA-Z_0-9]*",dr="\\b(with|select|from|where|having|order by|group by|limit|format|prewhere|union all)\\b",mr="\\b(left\\s+array\\s+join|array\\s+join|global\\s+any\\s+inner\\s+outer\\s+join|global\\s+any\\s+inner\\s+join|global\\s+any\\s+left\\s+outer\\s+join|global\\s+any\\s+left\\s+join|global\\s+any\\s+right\\s+outer\\s+join|global\\s+any\\s+right\\s+join|global\\s+any\\s+full\\s+outer\\s+join|global\\s+any\\s+full\\s+join|global\\s+any\\s+cross\\s+outer\\s+join|global\\s+any\\s+cross\\s+join|global\\s+any\\s+outer\\s+join|global\\s+any\\s+join|global\\s+all\\s+inner\\s+outer\\s+join|global\\s+all\\s+inner\\s+join|global\\s+all\\s+left\\s+outer\\s+join|global\\s+all\\s+left\\s+join|global\\s+all\\s+right\\s+outer\\s+join|global\\s+all\\s+right\\s+join|global\\s+all\\s+full\\s+outer\\s+join|global\\s+all\\s+full\\s+join|global\\s+all\\s+cross\\s+outer\\s+join|global\\s+all\\s+cross\\s+join|global\\s+all\\s+outer\\s+join|global\\s+all\\s+join|global\\s+inner\\s+outer\\s+join|global\\s+inner\\s+join|global\\s+left\\s+outer\\s+join|global\\s+left\\s+join|global\\s+right\\s+outer\\s+join|global\\s+right\\s+join|global\\s+full\\s+outer\\s+join|global\\s+full\\s+join|global\\s+cross\\s+outer\\s+join|global\\s+cross\\s+join|global\\s+outer\\s+join|global\\s+join|any\\s+inner\\s+outer\\s+join|any\\s+inner\\s+join|any\\s+left\\s+outer\\s+join|any\\s+left\\s+join|any\\s+right\\s+outer\\s+join|any\\s+right\\s+join|any\\s+full\\s+outer\\s+join|any\\s+full\\s+join|any\\s+cross\\s+outer\\s+join|any\\s+cross\\s+join|any\\s+outer\\s+join|any\\s+join|all\\s+inner\\s+outer\\s+join|all\\s+inner\\s+join|all\\s+left\\s+outer\\s+join|all\\s+left\\s+join|all\\s+right\\s+outer\\s+join|all\\s+right\\s+join|all\\s+full\\s+outer\\s+join|all\\s+full\\s+join|all\\s+cross\\s+outer\\s+join|all\\s+cross\\s+join|all\\s+outer\\s+join|all\\s+join|inner\\s+outer\\s+join|inner\\s+join|left\\s+outer\\s+join|left\\s+join|right\\s+outer\\s+join|right\\s+join|full\\s+outer\\s+join|full\\s+join|cross\\s+outer\\s+join|cross\\s+join|outer\\s+join|join)\\b",hr="(\\$deltaColumnsAggregated|\\$increaseColumnsAggregated|\\$perSecondColumnsAggregated|\\$rateColumnsAggregated|\\$rateColumns|\\$perSecondColumns|\\$deltaColumns|\\$increaseColumns|\\$rate|\\$perSecond|\\$delta|\\$increase|\\$columnsMs|\\$columns)",fr="\\b(global in|global not in|not in|in)\\b(?:\\s+\\[\\s*(?:'[^']*'\\s*,\\s*)*'[^']*'\\s*\\])?",gr="[\\(\\)\\[\\]]",pr="\\$[A-Za-z0-9_$]+",yr=new RegExp("^(?:"+lr+")$"),Tr=new RegExp("^(?:"+ur+")$"),vr=new RegExp("^(?:"+cr+")$"),br=new RegExp("^(?:"+gr+")$"),Sr=new RegExp("^(?:"+hr+")$"),xr=new RegExp("^(?:"+dr+")$","i"),wr=new RegExp("^(?:"+mr+")$","i"),Ir=new RegExp("^(?:\\b(using|on)\\b)$","i"),Dr=new RegExp("^(?:([A-Za-z0-9_]+|[A-Za-z0-9_]+\\.[A-Za-z0-9_]+))$","i"),Er=new RegExp("^(?:\\b(sqlite|file|remote|remoteSecure|cluster|clusterAllReplicas|merge|numbers|url|mysql|postgresql|jdbc|odbc|hdfs|input|generateRandom|s3|s3Cluster)\\b)$","i"),Or=new RegExp("^(?:"+pr+")$","i"),Cr=new RegExp("^(?:"+fr+")$","i"),Ar=new RegExp("^(?:\\b(or|and)\\b)$","i"),Nr=new RegExp("^(?:[\\(\\.! \\[])$"),kr=[dr,hr,mr,fr,lr,ur,cr,"('(?:[^'\\\\]|\\\\.)*')|(`(?:[^`\\\\]|\\\\.)*`)|(\"(?:[^\"\\\\]|\\\\.)*\")","\\d+e\\d+","\\d+\\.\\d*|\\d*\\.\\d+|\\d+[eE][-+]\\d+","\\d+","=>|\\|\\||>=|<=|==|!=|<>|->|[-+/%*=<>\\.!]",gr,"[,?:]",pr].join("|"),Fr="    ",Rr="\n";class $r{raw(){return this._sOriginal}expectNext(){if(!this.next())throw"expecting additional token at the end of query ["+this._sOriginal+"]";return!0}next(){for(;this._next();)if(!this.skipSpace||!Pr(this.token))return!0;return!1}_next(){var e;if(0===this._s.length)return!1;let t=null===(e=this.re)||void 0===e?void 0:e.exec(this._s);if(null===t)throw"cannot find next token in ["+this._s+"]";return this.token=t&&t[0],this._s=this._s.substring(this.token.length),!0}Format(){return Kr(this.toAST())}Print(e){return Kr(e)}push(e){Array.isArray(this.tree[this.rootToken])?this.tree[this.rootToken].push(e):this.tree[this.rootToken]instanceof Object&&(this.tree[this.rootToken].hasOwnProperty("aliases")||(this.tree[this.rootToken].aliases=[]),this.tree[this.rootToken].aliases.push(e)),this.expectedNext=!1}setRoot(e){this.rootToken=e.toLowerCase(),this.tree[this.rootToken]=[],this.expectedNext=!0}isExpectedNext(){let e=this.expectedNext;return this.expectedNext=!1,e}appendToken(e){return""===e||Mr(e[e.length-1])?this.token:" "+this.token}toAST(){this._s=this._sOriginal,this.tree={},this.setRoot("root"),this.expectedNext=!1,this.skipSpace=!0,this.re=new RegExp("^(?:"+kr+")","i");let e="",n="";for(;this.next();)if(this.isExpectedNext()||!zr(this.token)||this.tree.hasOwnProperty((0,t.toLower)(this.token)))if(","===this.token&&$r.isClosured(n))this.push(n),n="","where"===this.rootToken&&this.push(this.token),this.expectedNext=!0;else if(Br(this.token)&&"from"===this.rootToken)e=Jr(this._s),Yr(n)?(this.push(n+"("+e+")"),n=""):this.tree[this.rootToken]=Zr(e),this._s=this._s.substring(e.length+1);else if(qr(this.token)){let t=this.token;if(!this.next())throw"wrong function signature for `"+t+"` at ["+this._s+"]";e=Jr(this._s);let n=Zr(e);Qr(n,"root")?this.tree[t]=n.root.map((function(e){return e})):this.tree[t]=n,this._s=this._s.substring(e.length+1),this.tree.select=[]}else if(Ur(this.token)){if(n+=" "+this.token,!this.next())throw"wrong in signature for `"+n+"` at ["+this._s+"]";if(Br(this.token)){e=Jr(this._s);let t=Zr(e);Qr(t,"root")?(n+=" ("+t.root.map((function(e){return e})),n+=")"):(n+=" ("+Rr+Kr(t,Fr)+")","select"!==this.rootToken&&(this.push(n),n="")),this._s=this._s.substring(e.length+1)}else n+=" "+this.token}else if(!_r(this.token)||"where"!==this.rootToken&&"prewhere"!==this.rootToken)if(Lr(this.token))n=this.parseJOIN(n);else if("union all"!==this.rootToken)Wr(this.token)?n+=this.token+"\n":Br(this.token)||"."===this.token?n+=this.token:","!==this.token?n+=this.appendToken(n):n+=this.token+" ";else{let e="union all";this._s=this.token+" "+this._s;let t=this._s.toLowerCase().indexOf(e);for(;-1!==t;){let n=Zr(this._s.substring(0,t));this.tree[e].push(n),this._s=this._s.substring(t+e.length,this._s.length),t=this._s.toLowerCase().indexOf(e)}let n=Zr(this._s);this._s="",this.tree[e].push(n)}else $r.isClosured(n)?(this.push(n),n=this.token):n+=" "+this.token;else{if("WITH"===this.token.toUpperCase()&&"order by"===this.rootToken){n+=this.appendToken(n);continue}if(!$r.isClosured(n)){n+=this.appendToken(n);continue}n.length>0&&(this.push(n),n=""),this.setRoot(this.token)}return""!==n&&this.push(n),this.tree}parseJOIN(e){this.tree.hasOwnProperty("join")||(this.tree.join=[]);let n,a=this.token;if(!this.next())throw"wrong join signature for `"+a+"` at ["+this._s+"]";if(Br(this.token)){let e=Jr(this._s);n=Zr(e),this._s=this._s.substring(e.length+1),this.token=""}else{n="";do{if(!Vr(this.token)||Hr(n)||"AS"===this.token.toUpperCase()||Ir.test(this.token))if(jr(this.token))n+=this.token;else{if("."!==this.token)break;n+=this.token}else n+=this.token}while(-1===a.toUpperCase().indexOf("ARRAY JOIN")&&this.expectNext()||this.next());this.token===n&&(this.token=""),n=[n]}let r={type:a,source:n,aliases:[],using:[],on:[]};do{if(""===this.token||Ir.test(this.token)){if(Ir.test(this.token))break}else r.aliases.push(this.token)}while(-1===a.toUpperCase().indexOf("ARRAY JOIN")&&this.expectNext()||this.next());const i=(0,t.toLower)(this.token);let s="";for(;this.next();){if(zr(this.token)){""!==e&&(this.push(e),e=""),this.setRoot(this.token);break}if(Lr(this.token)){""!==s&&(r.on.push(s),s=""),this.tree.join.push(r),r=null,e=this.parseJOIN(e);break}if("using"===i){if(!Vr(this.token))continue;r.using.push(this.token)}else _r(this.token)?s+=" "+this.token.toUpperCase()+" ":s+=this.token}return null!=r&&(""!==s&&r.on.push(s),this.tree.join.push(r)),e}static RemoveComments(e){return e.replace(new RegExp(ur,"g"),"")}static AddMetadata(e){return"/* grafana dashboard=$__dashboard, user=$__user */\n"+e}static isClosured(e){const t=[];let n=!1,a=null;const r={"(":")","[":"]","{":"}"},i={")":"(","]":"[","}":"{"};for(let s=0;s<e.length;s++){const o=e[s];if("'"!==o&&'"'!==o&&"`"!==o||0!==s&&"\\"===e[s-1]){if(!n)if(o in r)t.push(o);else if(o in i&&t.pop()!==i[o])return!1}else n?o===a&&(n=!1,a=null):(n=!0,a=o)}return 0===t.length}constructor(e){or(this,"tree",void 0),or(this,"rootToken",void 0),or(this,"token",void 0),or(this,"skipSpace",void 0),or(this,"re",void 0),or(this,"expectedNext",void 0),or(this,"_sOriginal",void 0),or(this,"_s",void 0),this._sOriginal=e,this.token=null}}const Mr=e=>Nr.test(e),_r=e=>Ar.test(e),Ur=e=>Cr.test(e),Lr=e=>wr.test(e),Hr=e=>Dr.test(e),Pr=e=>yr.test(e),qr=e=>Sr.test(e),jr=e=>Or.test(e),Wr=e=>Tr.test(e),Vr=e=>vr.test(e),zr=e=>xr.test(e),Yr=e=>Er.test(e),Br=e=>br.test(e);function Gr(e,n="",a=""){let r="";return(0,t.isArray)(e)?1===e.length?r+=" "+e[0]+Rr:(r+=Rr,e.forEach((function(t,i){r+=n+Fr+t,i!==e.length-1&&(r+=a,r+=Rr)}))):r=Rr+"("+Rr+Kr(e,n+Fr)+Rr+")",r}function Zr(e){return new $r(e).toAST()}function Qr(e,n){return e.hasOwnProperty(n)&&!(0,t.isEmpty)(e[n])}function Jr(e){let t=1,n="";for(let a=0;a<e.length;a++)if("("===e.charAt(a)&&t++,")"===e.charAt(a)){if(1===t){n=e.substring(0,a);break}t--}return n}function Kr(e,t=""){let n="";return Qr(e,"root")&&(n+=Gr(e.root,"\n","\n")),Qr(e,"$rate")&&(n+=t+"$rate(",n+=Gr(e.$rate,t,",")+")"),Qr(e,"$perSecond")&&(n+=t+"$perSecond(",n+=Gr(e.$perSecond,t,",")+")"),Qr(e,"$perSecondColumns")&&(n+=t+"$perSecondColumns(",n+=Gr(e.$perSecondColumns,t,",")+")"),Qr(e,"$perSecondColumnsAggregated")&&(n+=t+"$perSecondColumnsAggregated(",n+=Gr(e.$perSecondColumnsAggregated,t,",")+")"),Qr(e,"$delta")&&(n+=t+"$delta(",n+=Gr(e.$delta,t,",")+")"),Qr(e,"$deltaColumns")&&(n+=t+"$deltaColumns(",n+=Gr(e.$deltaColumns,t,",")+")"),Qr(e,"$deltaColumnsAggregated")&&(n+=t+"$deltaColumnsAggregated(",n+=Gr(e.$deltaColumnsAggregated,t,",")+")"),Qr(e,"$increase")&&(n+=t+"$increase(",n+=Gr(e.$delta,t,",")+")"),Qr(e,"$increaseColumns")&&(n+=t+"$increaseColumns(",n+=Gr(e.$deltaColumns,t,",")+")"),Qr(e,"$increaseColumnsAggregated")&&(n+=t+"$increaseColumnsAggregated(",n+=Gr(e.$increaseColumnsAggregated,t,",")+")"),Qr(e,"$columns")&&(n+=t+"$columns(",n+=Gr(e.$columns,t,",")+")"),Qr(e,"$columnsMs")&&(n+=t+"$columnsMs(",n+=Gr(e.$columnsMs,t,",")+")"),Qr(e,"$rateColumns")&&(n+=t+"$rateColumns(",n+=Gr(e.$rateColumns,t,",")+")"),Qr(e,"$rateColumnsAggregated")&&(n+=t+"$rateColumnsAggregated(",n+=Gr(e.$rateColumnsAggregated,t,",")+")"),Qr(e,"with")&&(n+=t+"WITH",n+=Gr(e.with,t,",")),Qr(e,"select")&&(n+=t+"SELECT",n+=Gr(e.select,t,",")),Qr(e,"from")&&(n+=Rr+t+"FROM",n+=Gr(e.from,t)),Qr(e,"aliases")&&(n+=Gr(e.aliases,""," ")),Qr(e,"join")&&e.join.forEach((function(e){n+=Rr+t+e.type.toUpperCase()+Gr(e.source,t)+" "+Gr(e.aliases,""," "),e.using.length>0?n+=" USING "+Gr(e.using,""," "):e.on.length>0&&(n+=" ON "+Gr(e.on,t," "))})),Qr(e,"prewhere")&&(n+=Rr+t+"PREWHERE",n+=Gr(e.prewhere,t)),Qr(e,"where")&&(n+=Rr+t+"WHERE",n+=Gr(e.where,t)),Qr(e,"group by")&&(n+=Rr+t+"GROUP BY",n+=Gr(e["group by"],t,",")),Qr(e,"having")&&(n+=Rr+t+"HAVING",n+=Gr(e.having,t)),Qr(e,"order by")&&(n+=Rr+t+"ORDER BY",n+=Gr(e["order by"],t,",")),Qr(e,"limit")&&(n+=Rr+t+"LIMIT",n+=Gr(e.limit,t,",")),Qr(e,"union all")&&e["union all"].forEach((function(e){n+=Rr+Rr+t+"UNION ALL"+Rr+Rr,n+=Kr(e,t)})),Qr(e,"format")&&(n+=Rr+t+"FORMAT",n+=Gr(e.format,t)),n}const Xr=$r;var ei,ti,ni,ai=o(285),ri=o.n(ai);!function(e){e.SQL="sql",e.Builder="builder"}(ei||(ei={})),function(e){e.DateTime="datetime",e.Date="date"}(ti||(ti={})),function(e){e.DateTime="DATETIME",e.DateTime64="DATETIME64",e.TimeStamp="TIMESTAMP",e.TimeStamp64_3="TIMESTAMP64_3",e.TimeStamp64_6="TIMESTAMP64_6",e.TimeStamp64_9="TIMESTAMP64_9",e.Float="FLOAT"}(ni||(ni={}));ei.SQL;class ii{static convertTimestamp(n){return(0,t.isString)(n)&&(n=e.dateMath.parse(n,!0)),Math.floor(n.valueOf()/1e3)}static round(n,a){if(0===a)return n;(0,t.isString)(n)&&(n=e.dateMath.parse(n,!0));let r=1e3*a,i=Math.floor(n.valueOf()/r)*r;return ri()(i)}static convertInterval(e,t,n){var a;const r=null===(a=e)||void 0===a?void 0:a.match(/(\d+)(ms|s|m|h|d|w|M|y)/);if(!e||"string"!=typeof e||""===e||!r)return 0;const i=parseInt(r[1],10),s=r[2],o={s:1,m:60,h:3600,d:86400,w:604800,M:2592e3,y:31536e3,ms:.001};if(!(s in o))throw new Error("Invalid unit in interval: "+s);let l=i*o[s];return n&&(l*=1e3),Math.ceil(l*t)}static conditionalTest(e,t){let n="$conditionalTest(",a=e.indexOf(n);for(;-1!==a;){let r=ii.betweenBraces(e.substring(a+17,e.length));if(r.error.length>0)throw{message:"$conditionalIn macros error: "+r.error};let i=r.result,s=i.substring(0,i.lastIndexOf(",")).trim(),o=i.substring(i.lastIndexOf(",")+1).trim(),l=o.substring(1),u=0,c=t.getVariables();for(let t=0;t<c.length;t++){let n=c[t];if(n.name===l){let t=a+17+r.result.length+1;u=1;const i="current"in n?n.current.value:"";e="query"===n.type&&(1===i.length&&"$__all"===i[0]||"string"==typeof i&&"$__all"===i)||"object"==typeof i&&0===i.length||["textbox","custom"].includes(n.type)&&["",void 0,null].includes(i)?e.substring(0,a)+" "+e.substring(t,e.length):e.substring(0,a)+" "+s+" "+e.substring(t,e.length);break}}if(0===u)throw{message:"$conditionalTest macros error cannot find referenced variable: "+o};a=e.indexOf(n)}return e}static unescape(e){const t="$unescape(";let n=e.indexOf(t);for(;-1!==n;){let a=ii.betweenBraces(e.substring(n+10,e.length));if(a.error.length>0)throw{message:"$unescape macros error: "+a.error};let r=a.result;r=r.replace(/'+/g,"");let i=n+10+a.result.length+1;n=(e=e.substring(0,n)+r+e.substring(i,e.length)).indexOf(t)}return e}static betweenBraces(e){let t={result:"",error:""},n=1;for(let a=0;a<e.length;a++)if("("===e.charAt(a)&&n++,")"===e.charAt(a)&&(n--,0===n)){t.result=e.substring(0,a);break}return n>1&&(t.error="missing parentheses"),t}static interpolateQueryExpr(e,t,n){return t.multi||t.includeAll||Array.isArray(e)?Array.isArray(e)?e.map((function(e){return ii.clickhouseEscape(e,t)})).join(","):ii.clickhouseEscape(e,t):e}static clickhouseOperator(e){switch(e){case"=":case"!=":case">":case"<":return e;case"=~":return"LIKE";case"!~":return"NOT LIKE";default:return console.warn("adhoc filters: got unsupported operator `"+e+"`"),e}}static clickhouseEscape(e,n){const a=/^[+-]?\d+(\.\d+)?$/;let r=!0,i=!1;return(0,t.each)(n.options,(function(e){return"string"==typeof e.value&&"$__all"===e.value||("number"==typeof e.value?(r=!0,!1):"string"!=typeof e.value||a.test(e.value)?!(e.value instanceof Array&&(i=!0,(0,t.each)(e.value,(function(e){return!("string"==typeof e&&!a.test(e)&&(r=!1,1))})),1)):(r=!1,!1))})),e instanceof Array&&i?"["+(0,t.map)(e,(function(e){return ii.clickhouseEscape(e,n)})).join(", ")+"]":"number"==typeof e||r&&"string"==typeof e&&a.test(e)?e:"'"+e.replace(/[\\']/g,"\\$&")+"'"}static contain(e,n){return e.hasOwnProperty(n)&&!(0,t.isEmpty)(e[n])}static target(e,t){if(0===e.length)return["",""];let n,a,r=e.split(".");switch(r.length){case 1:n=r[0],a=t.database;break;case 2:a=r[0],n=r[1];break;default:throw{message:'FROM expression "'+e+'" cant be parsed'}}return"$table"===n&&(n=t.table),[a,n]}static getFilterSqlForDateTime(e,t){const n=(e=>function(t){return e===ni.DateTime?"toDateTime("+t+")":e===ni.DateTime64?"toDateTime64("+t+",3)":e===ni.TimeStamp64_3?"1000*"+t:e===ni.TimeStamp64_6?"1000000*"+t:e===ni.TimeStamp64_9?"1000000000*"+t:t})(t);let a="$from",r="$to";return t===ni.DateTime64&&(a="$__from/1000",r="$__to/1000"),`${e} >= ${n(a)} AND ${e} <= ${n(r)}`}static getFilterSqlForDateTimeMs(e,t){const n=(e=>function(t){return e===ni.DateTime?"toDateTime("+t+")":e===ni.DateTime64?"toDateTime64("+t+",3)":e===ni.Float||e===ni.TimeStamp?t+"/1000":e===ni.TimeStamp64_3?t:e===ni.TimeStamp64_6?"1000*"+t:e===ni.TimeStamp64_9?"1000000*"+t:t})(t);let a="$__from",r="$__to";return t!==ni.DateTime&&t!==ni.DateTime64||(a="$__from/1000",r="$__to/1000"),`${e} >= ${n(a)} AND ${e} <= ${n(r)}`}static escapeTableIdentifier(e){return/^[a-zA-Z][0-9a-zA-Z_]*$/.test(e)?e:`\`${e.replace(/`/g,"\\`")}\``}static escapeIdentifier(e){return/^[a-zA-Z][0-9a-zA-Z_]*$/.test(e)||/\(.*\)/.test(e)||/[\/*+\-]/.test(e)?e:`"${e.replace(/"/g,'\\"')}"`}}class si{static applyMacros(e,t,n){return ii.contain(t,"$columns")?si.columns(e,t,n):ii.contain(t,"$columnsMs")?si.columnsMs(e,t,n):ii.contain(t,"$rate")?si.rate(e,t,n):ii.contain(t,"$rateColumns")?si.rateColumns(e,t,n):ii.contain(t,"$rateColumnsAggregated")?si.rateColumnsAggregated(e,t,n):ii.contain(t,"$perSecond")?si.perSecond(e,t,n):ii.contain(t,"$perSecondColumns")?si.perSecondColumns(e,t,n):ii.contain(t,"$perSecondColumnsAggregated")?si.perSecondColumnsAggregated(e,t,n):ii.contain(t,"$increase")?si.increase(e,t,n):ii.contain(t,"$increaseColumns")?si.increaseColumns(e,t,n):ii.contain(t,"$increaseColumnsAggregated")?si.increaseColumnsAggregated(e,t,n):ii.contain(t,"$delta")?si.delta(e,t,n):ii.contain(t,"$deltaColumns")?si.deltaColumns(e,t,n):ii.contain(t,"$deltaColumnsAggregated")?si.deltaColumnsAggregated(e,t,n):e}static getDateFilter(){return"$dateCol >= toDate($from) AND $dateCol <= toDate($to)"}static getDateTimeFilter(e){let t=function(t){return e===ni.DateTime?"toDateTime("+t+")":e===ni.DateTime64?"toDateTime64("+t+",3)":e===ni.Float?t:e===ni.TimeStamp64_3?`1000*${t}`:e===ni.TimeStamp64_6?`1000000*${t}`:e===ni.TimeStamp64_9?`1000000000*${t}`:t};return"$dateTimeCol >= "+t("$from")+" AND $dateTimeCol <= "+t("$to")}static getDateTimeFilterMs(e){return e===ni.DateTime?"$dateTimeCol >= toDateTime($__from/1000) AND $dateTimeCol <= toDateTime($__to/1000)":e===ni.DateTime64?"$dateTimeCol >= toDateTime64($__from/1000,3) AND $dateTimeCol <= toDateTime64($__to/1000,3)":e===ni.Float?"$dateTimeCol >= toFloat64($__from/1000) AND $dateTimeCol <= toFloat64($__to/1000)":e===ni.TimeStamp64_3?"$dateTimeCol >= $__from AND $dateTimeCol <= $__to":e===ni.TimeStamp64_6?"$dateTimeCol >= 1000*$__from AND $dateTimeCol <= 1000*$__to":e===ni.TimeStamp64_9?"$dateTimeCol >= 1000000*$__from AND $dateTimeCol <= 1000000*$__to":"$dateTimeCol >= $__from/1000 AND $dateTimeCol <= $__to/1000"}static getTimeSeries(e){return e===ni.DateTime?"(intDiv(toUInt32($dateTimeCol), $interval) * $interval) * 1000":e===ni.DateTime64?"(intDiv(toFloat64($dateTimeCol) * 1000, ($interval * 1000)) * ($interval * 1000))":e===ni.Float?"(intDiv($dateTimeCol * 1000, ($interval * 1000)) * ($interval * 1000))":e===ni.TimeStamp64_3?"(intDiv($dateTimeCol, ($interval * 1000)) * ($interval * 1000))":e===ni.TimeStamp64_6?"(intDiv($dateTimeCol / 1000, ($interval * 1000)) * ($interval * 1000))":e===ni.TimeStamp64_9?"(intDiv($dateTimeCol / 1000000, ($interval * 1000)) * ($interval * 1000))":"(intDiv($dateTimeCol, $interval) * $interval) * 1000"}static getTimeSeriesMs(e){return e===ni.DateTime?"(intDiv(toUInt32($dateTimeCol) * 1000, $__interval_ms) * $__interval_ms)":e===ni.DateTime64?"(intDiv(toFloat64($dateTimeCol) * 1000, $__interval_ms) * $__interval_ms)":e===ni.TimeStamp||e===ni.Float?"(intDiv($dateTimeCol * 1000, $__interval_ms) * $__interval_ms)":e===ni.TimeStamp64_3?"(intDiv($dateTimeCol, $__interval_ms) * $__interval_ms)":e===ni.TimeStamp64_6?"(intDiv($dateTimeCol / 1000, $__interval_ms) * $__interval_ms)":e===ni.TimeStamp64_9?"(intDiv($dateTimeCol / 1000000, $__interval_ms) * $__interval_ms)":"(intDiv($dateTimeCol, $__interval_ms) * $__interval_ms)"}static getNaturalTimeSeries(e,t,n){if(e===ni.DateTime||e===ni.DateTime64){let e=n-t;return e<1200?"toUInt32($dateTimeCol) * 1000":e<14400?"toUInt32(toStartOfMinute($dateTimeCol)) * 1000":e<86400?"toUInt32(toStartOfFiveMinute($dateTimeCol)) * 1000":e<259200?"toUInt32(toStartOfFifteenMinutes($dateTimeCol)) * 1000":e<1296e3?"toUInt32(toStartOfHour($dateTimeCol)) * 1000":e<9072e3?"toUInt32(toStartOfDay($dateTimeCol)) * 1000":e<2592e4?"toUInt32(toDateTime(toMonday($dateTimeCol))) * 1000":e<189216e3?"toUInt32(toDateTime(toStartOfMonth($dateTimeCol))) * 1000":"toUInt32(toDateTime(toStartOfQuarter($dateTimeCol))) * 1000"}return"(intDiv($dateTimeCol, $interval) * $interval) * 1000"}static delta(e,n,a){let[r,i]=si._parseMacro("$delta",e);if(i.length<1)return e;let s=n.$delta;if(s.length<1)throw{message:"Amount of arguments must be > 0 for $delta func. Parsed arguments are:  "+s.join(", ")};(0,t.each)(s,(function(e,t){s[t]="max("+e.trim()+") AS max_"+t}));let o=[];return(0,t.each)(s,(function(e,t){a?o.push("max_"+t+" - lagInFrame(max_"+t+",1,0) OVER () AS max_"+t+"_Delta"):o.push("runningDifference(max_"+t+") AS max_"+t+"_Delta")})),i=si._applyTimeFilter(i,!1),r+"SELECT t, "+o.join(", ")+" FROM ( SELECT $timeSeries AS t, "+s.join(", ")+" "+i+" GROUP BY t ORDER BY t)"}static _parseMacro(e,t){let n=e.length,a=t.indexOf(e);if(-1===a||t.slice(a,a+n+1)!==e+"(")return[t,""];let r=((e,t)=>{let n=new RegExp("\\"+t+"\\([\\w\\s\\S]+?\\)(\\s+FROM\\s+)","gim"),a=n.exec(e);if(null===a||0===a.length)throw{message:"Could not find FROM-statement at: "+e};let r=a[a.length-1].toLocaleLowerCase().indexOf("from");return n.lastIndex-a[a.length-1].length+r})(t,e);return[t.slice(0,a),t.slice(r)]}static _applyTimeFilter(e,t){const n=t?"$timeFilterMs":"$timeFilter";return e.toLowerCase().includes("where")?e.replace(/where/gi,`WHERE ${n} AND`):`${e} WHERE ${n}`}static transformQuery(e,t,n,a){let[r,i]=si._parseMacro(n,e);if(i.length<1)return e;let s=t[n];if(s.length<1)throw{message:`Amount of arguments must be > 0 for ${n} func. Parsed arguments are:  ${s.join(", ")}`};let o=[];return a(s,o),i=si._applyTimeFilter(i,!1),r+"SELECT t, "+o.join(", ")+" FROM ( SELECT $timeSeries AS t, "+s.join(", ")+" "+i+" GROUP BY t ORDER BY t)"}static increase(e,n,a){let[r,i]=si._parseMacro("$increase",e);if(i.length<1)return e;let s=n.$increase;if(s.length<1)throw{message:"Amount of arguments must be > 0 for $increase func. Parsed arguments are:  "+s.join(", ")};(0,t.each)(s,(function(e,t){s[t]="max("+e.trim()+") AS max_"+t}));let o=[];return(0,t.each)(s,(function(e,t){a?o.push("if((max_"+t+" - lagInFrame(max_"+t+",1,0) OVER ()) < 0, 0, max_"+t+" - lagInFrame(max_"+t+",1,0) OVER ()) AS max_"+t+"_Increase"):o.push("if(runningDifference(max_"+t+") < 0, 0, runningDifference(max_"+t+")) AS max_"+t+"_Increase")})),i=si._applyTimeFilter(i,!1),r+"SELECT t, "+o.join(", ")+" FROM ( SELECT $timeSeries AS t, "+s.join(", ")+" "+i+" GROUP BY t ORDER BY t)"}static perSecond(e,n,a){let[r,i]=si._parseMacro("$perSecond",e);if(i.length<1)return e;let s=n.$perSecond;if(s.length<1)throw{message:"Amount of arguments must be > 0 for $perSecond func. Parsed arguments are:  "+s.join(", ")};(0,t.each)(s,(function(e,t){s[t]="max("+e.trim()+") AS max_"+t}));let o=[];return(0,t.each)(s,(function(e,t){a?o.push("if(max_"+t+" - lagInFrame(max_"+t+",1,0) OVER () < 0, nan, (max_"+t+" - lagInFrame(max_"+t+",1,0) OVER ()) / ((t - lagInFrame(t,1,0) OVER ())/1000) ) AS max_"+t+"_PerSecond"):o.push("if(runningDifference(max_"+t+") < 0, nan, runningDifference(max_"+t+") / runningDifference(t/1000)) AS max_"+t+"_PerSecond")})),i=si._applyTimeFilter(i,!1),r+"SELECT t, "+o.join(", ")+" FROM ( SELECT $timeSeries AS t, "+s.join(", ")+" "+i+" GROUP BY t ORDER BY t)"}static rate(e,n,a){return si.transformQuery(e,n,"$rate",(function(e,n){let r=[];(0,t.each)(e,(function(e){if(")"===e.slice(-1))throw{message:'Argument "'+e+"\" can't be used without alias"};r.push(e.trim().split(" ").pop())})),(0,t.each)(r,(function(e){a?n.push(e+"/((t - lagInFrame(t,1,0) OVER ())/1000) "+e+"Rate"):n.push(e+"/runningDifference(t/1000) "+e+"Rate")}))}))}static _columns(e,t,n,a,r){if(")"===e.slice(-1)||")"===t.slice(-1))throw{message:"Some of passed arguments are without aliases: "+e+", "+t};let i=e.trim().split(" ").pop(),s=t.trim().split(" ").pop(),o=" GROUP BY t, "+i,l="",u=" ORDER BY t, "+i;if(!/^\s*FROM\s*\(/im.test(a)){function c(e,t){const n=new RegExp(`(?<!\\([^)]*)${t}(?![^(]*\\))`,"gi").exec(e);return n?n.index:-1}const d=c(a,"group by"),m=c(a,"having"),h=c(a,"order by");if(m>=0&&h>=0&&m>=h)throw{message:"ORDER BY clause shall be before HAVING"};if(d>=0&&h>=0&&d>=h)throw{message:"GROUP BY clause shall be before ORDER BY"};if(d>=0&&m>=0&&d>=m)throw{message:"GROUP BY clause shall be before HAVING"};-1!==h&&(u=" "+a.slice(h,a.length),a=a.slice(0,h-1)),-1!==m&&(l=" "+a.slice(m,a.length),a=a.slice(0,m-1)),-1!==d&&(o=" "+a.slice(d,a.length),a=a.slice(0,d-1))}return n+"SELECT t, groupArray(("+i+", "+s+")) AS groupArr FROM ( SELECT "+(r?"$timeSeriesMs":"$timeSeries")+" AS t, "+e+", "+t+" "+(a=si._applyTimeFilter(a,r))+o+l+u+") GROUP BY t ORDER BY t"}static columns(e,t,n){let[a,r]=si._parseMacro("$columns",e);if(r.length<1)return e;let i=t.$columns;if(2!==i.length)throw{message:"Amount of arguments must equal 2 for $columns func. Parsed arguments are: "+t.$columns.join(", ")};return si._columns(i[0],i[1],a,r,!1)}static columnsMs(e,t,n){let[a,r]=si._parseMacro("$columnsMs",e);if(r.length<1)return e;let i=t.$columnsMs;if(2!==i.length)throw{message:"Amount of arguments must equal 2 for $columnsMs func. Parsed arguments are: "+t.$columnsMs.join(", ")};return si._columns(i[0],i[1],a,r,!0)}static rateColumns(e,t,n){let[a,r]=si._parseMacro("$rateColumns",e);if(r.length<1)return e;let i,s=t.$rateColumns;if(2!==s.length)throw{message:"Amount of arguments must equal 2 for $rateColumns func. Parsed arguments are: "+s.join(", ")};return i=n?"(t/1000 - lagInFrame(t/1000,1,0) OVER ())":"runningDifference( t/1000 )",a+"SELECT t, arrayMap(a -> (a.1, a.2/"+i+"), groupArr) FROM ("+(e=si._columns(s[0],s[1],"",r,!1))+")"}static _prepareColumnsAggregated(e,t,n){let[a,r]=si._parseMacro(e,t);if(r.length<1)throw{message:"Missing FROM section after "+e+" function. Query: "+t};let i=n[e];if(i.length<4)throw{message:"Expect 2 or more amount of arguments for "+e+" function. Parsed arguments are: "+i.join(", ")};let s=r.toLowerCase().indexOf("having"),o="";-1!==s&&(o=" "+r.slice(s,r.length),r=r.slice(0,s-1)),r=si._applyTimeFilter(r,!1);let l=i[0],u=l.trim().split(" ").pop(),c=i[1],d=c.trim().split(" ").pop();if(i.length%2!=0)throw{message:"Wrong arguments count, expect argument pairs aggregate function and value for $rateColumnsAggregated func. Parsed arguments are: "+i.join(", ")};const m=[],h=[],f=[];for(let e=2;e<i.length;e+=2){f.push(i[e]);let t=i[e+1],n=t.trim().split(" "),a=n.pop();h.push(a),n.length>1&&(t=n.join(" ").replace(/ AS$/i,"")),-1===t.indexOf("(")&&(t="max("+t+")",m.push()),m.push(t+" AS "+a)}return[a,r,o,l,u,c,d,m,h,f]}static _formatColumnsAggregated(e,t,n,a,r,i,s,o,l,u){return e+"SELECT t, "+t+", "+n.join(", ")+" FROM (  SELECT t, "+t+", "+a+", "+r.join(", ")+"  FROM (   SELECT $timeSeries AS t, "+i+", "+s+", "+o.join(", ")+"   "+l+"   GROUP BY "+t+", "+a+", t "+u+"   ORDER BY "+t+", "+a+", t  ) ) GROUP BY "+t+", t ORDER BY "+t+", t"}static rateColumnsAggregated(e,t,n){const[a,r,i,s,o,l,u,c,d,m]=si._prepareColumnsAggregated("$rateColumnsAggregated",e,t),h=[],f=[];return d.forEach(((e,t)=>{h.push(m[t]+"("+e+"Rate) AS "+e+"RateAgg"),n?f.push(e+" / (t/1000 - lagInFrame(t/1000,1,0) OVER ()) AS "+e+"Rate"):f.push(e+" / runningDifference(t / 1000) AS "+e+"Rate")})),si._formatColumnsAggregated(a,o,h,u,f,s,l,c,r,i)}static _detectAliasAndApplyTimeFilter(e,t,n,a,r,i){return-1===e?t=t+" AS "+n:n=t.slice(e+4,t.length),-1!==a&&(r=" "+i.slice(a,i.length),i=i.slice(0,a-1)),[t,n,r,i=si._applyTimeFilter(i,!1)]}static perSecondColumns(e,t,n){let[a,r]=si._parseMacro("$perSecondColumns",e);if(r.length<1)return e;let i=t.$perSecondColumns;if(2!==i.length)throw{message:"Amount of arguments must equal 2 for $perSecondColumns func. Parsed arguments are: "+i.join(", ")};let s,o=i[0],l="max("+i[1].trim()+") AS max_0",u=r.toLowerCase().indexOf("having"),c="",d=o.toLowerCase().indexOf(" as "),m="perSecondColumns";return[o,m,c,r]=si._detectAliasAndApplyTimeFilter(d,o,m,u,c,r),s=n?"if((max_0 - lagInFrame(max_0,1,0) OVER ()) < 0 OR lagInFrame("+m+",1,"+m+") OVER () != "+m+", nan, (max_0 - lagInFrame(max_0,1,0) OVER ()) / (t/1000 - lagInFrame(t/1000,1,0) OVER ()))":"if(runningDifference(max_0) < 0 OR neighbor("+m+",-1,"+m+") != "+m+", nan, runningDifference(max_0) / runningDifference(t/1000))",a+"SELECT t, groupArray(("+m+", max_0_PerSecond)) AS groupArr FROM ( SELECT t, "+m+", "+s+" AS max_0_PerSecond FROM ( SELECT $timeSeries AS t, "+o+", "+l+" "+r+" GROUP BY t, "+m+c+" ORDER BY "+m+", t)) GROUP BY t ORDER BY t"}static perSecondColumnsAggregated(e,t,n){const[a,r,i,s,o,l,u,c,d,m]=si._prepareColumnsAggregated("$perSecondColumnsAggregated",e,t),h=[],f=[];return d.forEach(((e,t)=>{h.push(m[t]+"("+e+"PerSecond) AS "+e+"PerSecondAgg"),n?f.push("if(("+e+" - lagInFrame("+e+",1,0) OVER ()) < 0 OR lagInFrame("+u+",1,"+u+") OVER () != "+u+", nan, ("+e+" - lagInFrame("+e+",1,0) OVER ()) / (t/1000 - lagInFrame(t/1000,1,0) OVER ())) AS "+e+"PerSecond"):f.push("if(runningDifference("+e+") < 0 OR neighbor("+u+",-1,"+u+") != "+u+", nan, runningDifference("+e+") / runningDifference(t / 1000)) AS "+e+"PerSecond")})),si._formatColumnsAggregated(a,o,h,u,f,s,l,c,r,i)}static increaseColumns(e,t,n){let[a,r]=si._parseMacro("$increaseColumns",e);if(r.length<1)return e;let i=t.$increaseColumns;if(2!==i.length)throw{message:"Amount of arguments must equal 2 for $increaseColumns func. Parsed arguments are: "+i.join(", ")};let s,o=i[0],l="max("+i[1].trim()+") AS max_0",u=r.toLowerCase().indexOf("having"),c="",d=o.toLowerCase().indexOf(" as "),m="increaseColumns";return[o,m,c,r]=si._detectAliasAndApplyTimeFilter(d,o,m,u,c,r),s=n?"if((max_0 - lagInFrame(max_0,1,0) OVER ()) < 0 OR lagInFrame("+m+",1,"+m+") OVER () != "+m+", 0, max_0 - lagInFrame(max_0,1,0) OVER ())":"if(runningDifference(max_0) < 0 OR neighbor("+m+",-1,"+m+") != "+m+", 0, runningDifference(max_0))",a+"SELECT t, groupArray(("+m+", max_0_Increase)) AS groupArr FROM ( SELECT t, "+m+", "+s+" AS max_0_Increase FROM ( SELECT $timeSeries AS t, "+o+", "+l+" "+r+" GROUP BY t, "+m+c+" ORDER BY "+m+", t)) GROUP BY t ORDER BY t"}static increaseColumnsAggregated(e,t,n){const[a,r,i,s,o,l,u,c,d,m]=si._prepareColumnsAggregated("$increaseColumnsAggregated",e,t),h=[],f=[];return d.forEach(((e,t)=>{h.push(m[t]+"("+e+"Increase) AS "+e+"IncreaseAgg"),n?f.push("if(("+e+" - lagInFrame("+e+",1,0) OVER ()) < 0 OR lagInFrame("+u+",1,"+u+") OVER () != "+u+", nan, ("+e+" - lagInFrame("+e+",1,0) OVER ()) / 1) AS "+e+"Increase"):f.push("if(runningDifference("+e+") < 0 OR neighbor("+u+",-1,"+u+") != "+u+", nan, runningDifference("+e+") / 1) AS "+e+"Increase")})),si._formatColumnsAggregated(a,o,h,u,f,s,l,c,r,i)}static deltaColumns(e,t,n){let[a,r]=si._parseMacro("$deltaColumns",e);if(r.length<1)return e;let i=t.$deltaColumns;if(2!==i.length)throw{message:"Amount of arguments must equal 2 for $deltaColumns func. Parsed arguments are: "+i.join(", ")};let s,o=i[0],l="max("+i[1].trim()+") AS max_0",u=r.toLowerCase().indexOf("having"),c="",d=o.toLowerCase().indexOf(" as "),m="deltaColumns";return[o,m,c,r]=si._detectAliasAndApplyTimeFilter(d,o,m,u,c,r),s=n?"if(lagInFrame("+m+",1,"+m+") OVER () != "+m+", 0, max_0 - lagInFrame(max_0,1,0) OVER ())":"if(neighbor("+m+",-1,"+m+") != "+m+", 0, runningDifference(max_0))",a+"SELECT t, groupArray(("+m+", max_0_Delta)) AS groupArr FROM ( SELECT t, "+m+", "+s+" AS max_0_Delta FROM ( SELECT $timeSeries AS t, "+o+", "+l+" "+r+" GROUP BY t, "+m+c+" ORDER BY "+m+", t)) GROUP BY t ORDER BY t"}static deltaColumnsAggregated(e,t,n){const[a,r,i,s,o,l,u,c,d,m]=si._prepareColumnsAggregated("$deltaColumnsAggregated",e,t),h=[],f=[];return d.forEach(((e,t)=>{h.push(m[t]+"("+e+"Delta) AS "+e+"DeltaAgg"),n?f.push("if(lagInFrame("+u+",1,"+u+") OVER () != "+u+", 0, "+e+" - lagInFrame("+e+",1,0) OVER ()) AS "+e+"Delta"):f.push("if(neighbor("+u+",-1,"+u+") != "+u+", 0, runningDifference("+e+") / 1) AS "+e+"Delta")})),si._formatColumnsAggregated(a,o,h,u,f,s,l,c,r,i)}static replaceTimeFilters(e,t,n=ni.DateTime,a){let r=ii.convertTimestamp(ii.round(t.from,a||0)),i=ii.convertTimestamp(ii.round(t.to,a||0));return a&&a>0&&(i+=2*a-1,r-=2*a-1),e.replace(/\$timeFilterByColumn\(([\w_]+)\)/g,((e,t)=>`${ii.getFilterSqlForDateTime(t,n)}`)).replace(/\$timeFilter64ByColumn\(([\w_]+)\)/g,((e,t)=>`${ii.getFilterSqlForDateTimeMs(t,n)}`)).replace(/\$from/g,r.toString()).replace(/\$to/g,i.toString()).replace(/\$__from/g,t.from.valueOf()).replace(/\$__to/g,t.to.valueOf())}}function oi(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class li{replace(e,n){if(!this.target.query)return"";let a=this.target.query.trim();this.target.skip_comments&&(a=Xr.RemoveComments(a)),this.target.add_metadata&&(a=Xr.AddMetadata(a)),a=this.templateSrv.replace(ii.conditionalTest(a,this.templateSrv),e.scopedVars,ii.interpolateQueryExpr);let r=new Xr(a),i=this.target.dateTimeType?this.target.dateTimeType:ni.DateTime,s=this.templateSrv.replace(this.target.interval,e.scopedVars)||e.interval,o=ii.convertInterval(s,this.target.intervalFactor||1),l=ii.convertInterval(s,this.target.intervalFactor||1,!0),u=[];try{let e=r.toAST(),i=e;if(n&&n.length>0){for(;e.hasOwnProperty("from")&&!(0,t.isArray)(e.from);)e=e.from;e.hasOwnProperty("where")||(e.where=[]);let s=ii.target(e.from[0],this.target);n.forEach((t=>{let n=t.key.includes(".")?t.key.split("."):[s[0],s[1],t.key];if(1===n.length&&(n=[s[1],...n]),2===n.length&&(n=[s[0],...n]),n.length<3)return void console.warn(`adhoc filters: filter '${t.key}' has the wrong format`);if(s[0]!==n[0]||s[1]!==n[1])return;const r=ii.clickhouseOperator(t.operator);let i=`${n[2]} ${r} ${"number"==typeof t.value||t.value.includes("'")||t.value.includes(", ")||t.value.match(/^\s*\d+\s*$/)?t.value:"'"+t.value+"'"}`;u.push(i),e.where.length>0&&(i="AND "+i),a.includes("$adhoc")||e.where.push(i)})),a=r.Print(i)}a=si.applyMacros(a,i,this.target.useWindowFuncForMacros)}catch(e){console.error("AST parser error: ",e)}let c=u.length>0?"("+u.join(" AND ")+")":"1";a=ii.unescape(a);let d=si.getDateTimeFilter(i),m=si.getDateTimeFilterMs(i);"string"==typeof this.target.dateColDataType&&this.target.dateColDataType.length>0&&(d=si.getDateFilter()+" AND "+d,m=si.getDateFilter()+" AND "+m);let h=ii.escapeTableIdentifier(this.target.table);this.target.database&&(h=ii.escapeTableIdentifier(this.target.database)+"."+h);let f="$step"===this.target.round?o:ii.convertInterval(this.target.round,1),g=ii.convertTimestamp(ii.round(this.options.range.from,f)),p=ii.convertTimestamp(ii.round(this.options.range.to,f));this.target.rawQuery=a.replace(/\$timeSeries\b/g,si.getTimeSeries(i)).replace(/\$timeSeriesMs\b/g,si.getTimeSeriesMs(i)).replace(/\$naturalTimeSeries/g,si.getNaturalTimeSeries(i,g,p)).replace(/\$timeFilter\b/g,d).replace(/\$timeFilterMs\b/g,m).replace(/\$table\b/g,h).replace(/\$from\b/g,g.toString()).replace(/\$to\b/g,p.toString()).replace(/\$dateCol\b/g,ii.escapeIdentifier(this.target.dateColDataType)).replace(/\$dateTimeCol\b/g,ii.escapeIdentifier(this.target.dateTimeColDataType)).replace(/\$interval\b/g,o.toString()).replace(/\$__interval_ms\b/g,l.toString()).replace(/\$adhoc\b/g,c);const y="$step"===this.target.round?o:ii.convertInterval(this.target.round,1);return this.target.rawQuery=si.replaceTimeFilters(this.target.rawQuery,this.options.range,i,y),this.target.rawQuery}constructor(e,t,n){oi(this,"target",void 0),oi(this,"templateSrv",void 0),oi(this,"options",void 0),this.target=e,this.templateSrv=t,this.options=n}}class ui{parse(e,n){var a;if(!n||!n.data||0===(null===(a=n.data)||void 0===a?void 0:a.length))return[];let r,i,s=[];void 0!==n.meta?(r=n.meta,i=n.data):(r=n.data.meta,i=n.data.data);const o=r.map((e=>e.name)),l=ui.findColIndex(o,"__text"),u=ui.findColIndex(o,"__value"),c=2===o.length&&-1!==l&&-1!==u;return i.forEach((e=>{if(!(0,t.isObject)(e))return void s.push({text:e});let n=Object.keys(e);if(n.length>1)if(c){const t=n[l],a=n[u];t in e&&a in e&&s.push({text:e[t],value:e[a]})}else s.push(e);else{const t=n[0];s.push({text:e[t]})}})),s}static findColIndex(e,t){for(let n=0;n<e.length;n++)if(e[n]===t)return n;return-1}transformAnnotationResponse(e,t){const n=t.data,a=t.meta,r=[];let i=!1,s=!1,o=!1;for(let e=0,t=a.length;e<t;e++){const t=a[e];"time"===t.name&&(i=!0),"time_end"===t.name&&(s=!0),"type"===t.name&&(o=!0)}if(!i)throw new Error("Missing mandatory time column in annotation query.");for(let t=0,a=n.length;t<a;t++){const a=n[t],i={annotation:e.annotation,time:Math.floor(a.time),timeEnd:a.time_end?Math.floor(a.time_end):0,isRegion:s&&Math.floor(a.time_end)>0,title:a.title,type:o&&a.type?a.type:"annotation",text:a.text,tags:a.tags?a.tags.trim().split(/\s*,\s*/):[]};r.push(i)}return r}constructor(){}}function ci(e,t,n,a,r,i,s){try{var o=e[i](s),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,r)}function di(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const mi="SELECT DISTINCT {field} AS value FROM {database}.{table} LIMIT 300";class hi{GetTagKeys(e){let t=this;if(this.tagKeys.length>0)return Promise.resolve(this.tagKeys);let n=this.query;return e&&e.length>0&&(n=e),this.datasource.metricFindQuery(n).then((function(e){return t.processTagKeysResponse(e)}))}processTagKeysResponse(e){const t={};return e.forEach((e=>{const n=(0===this.datasource.defaultDatabase.length?e.database+".":"")+e.table+"."+e.name;if(this.datasource.adHocHideTableNames||this.tagKeys.push({text:n,value:n}),"Enum"===e.type.slice(0,4)){const t=/'(?:[^']+|'')+'/gim,a=e.type.match(t)||[];a.length>0&&(this.datasource.adHocHideTableNames||(this.tagValues[n]=a.map((e=>({text:e,value:e})))),this.tagValues[e.name]?this.tagValues[e.name].combine(this.tagValues[n]):this.tagValues[e.name]=this.tagValues[n])}t[e.name]=!0})),Object.keys(t).forEach((e=>{this.tagKeys.push({text:e,value:e})})),Promise.resolve(this.tagKeys)}GetTagValues(e){var t,n=this;return(t=function*(){const t=n.adHocValuesQuery||mi;let a,r,i;const s=e=>e.replace("{field}",i).replace("{database}",a).replace("{table}",r);if(n.datasource.adHocHideTableNames){const o="SELECT name,database,table FROM system.columns WHERE name='"+e.key+"'";let l=[];return(yield n.datasource.metricFindQuery(o).then((e=>(l=e.map((e=>(i=e.name,a=e.database,r=e.table,s("("+t+")")))),!0))).catch((e=>(console.error(e),!1))))?n.datasource.metricFindQuery(l.join(" UNION ALL ")).then((t=>(n.tagValues[e.key]=n.processTagValuesResponse(t),n.tagValues[e.key]))).catch((t=>(n.tagValues[e.key]=[],console.error(t),n.tagValues[e.key]))):[]}if(Object.prototype.hasOwnProperty.call(n.tagValues,e.key))return Promise.resolve(n.tagValues[e.key]);const o=e.key.split(".");return o.length<2||2===o.length&&!n.datasource.defaultDatabase||o.length>3?Promise.resolve([]):(3===o.length?[a,r,i]=o:(a=n.datasource.defaultDatabase,[r,i]=o),n.datasource.metricFindQuery(s(t)).then((t=>(n.tagValues[e.key]=n.processTagValuesResponse(t),n.tagValues[e.key]))).catch((t=>(n.tagValues[e.key]=[],console.error(t),n.tagValues[e.key]))))},function(){var e=this,n=arguments;return new Promise((function(a,r){var i=t.apply(e,n);function s(e){ci(i,a,r,s,o,"next",e)}function o(e){ci(i,a,r,s,o,"throw",e)}s(void 0)}))})()}processTagValuesResponse(e){const t=e.map((e=>({text:e.text,value:e.text})));return Promise.resolve(t)}constructor(e){di(this,"tagKeys",void 0),di(this,"tagValues",{}),di(this,"datasource",void 0),di(this,"query",void 0),di(this,"adHocValuesQuery",void 0),this.tagKeys=[],this.tagValues=[],this.datasource=e,this.adHocValuesQuery=e.adHocValuesQuery;let t="database NOT IN ('system','INFORMATION_SCHEMA','information_schema')";e.defaultDatabase.length>0&&(t="database = '"+e.defaultDatabase+"'"),this.query="SELECT database, table, name, type FROM system.columns WHERE {filter} ORDER BY database, table".replace("{filter}",t)}}var fi=o(531),gi=o(959),pi=o.n(gi),yi=o(7);const Ti={EditorMode:{options:{QuerySettings:"Query Settings",SQLEditor:"SQL Editor"}}},vi=[{label:Ti.EditorMode.options.QuerySettings,value:ei.Builder},{label:Ti.EditorMode.options.SQLEditor,value:ei.SQL}];function bi(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const Si=({editorMode:e,setEditorMode:t,isAnnotationView:n,onTriggerQuery:a,datasource:r,query:i,onChange:s})=>{const[o,l]=(0,gi.useState)(!1),[u,c]=(0,gi.useState)([]);return(0,gi.useEffect)((()=>{c(function(e,t){const{defaultValues:n}=t,a=[];function r(e){return void 0===e||""===e.trim()?"EMPTY":e.trim()}var i,s;return n&&(e.dateTimeType!==n.defaultDateTimeType&&a.push({key:"Timestamp type Column",original:r(e.dateTimeType),updated:n.defaultDateTimeType,fieldName:"dateTimeType"}),"TIMESTAMP"===n.defaultDateTimeType&&n.dateTime.defaultUint32&&e.dateTimeColDataType!==n.dateTime.defaultUint32&&a.push({key:"Timestamp Column",original:r(e.dateTimeColDataType),updated:n.dateTime.defaultUint32,fieldName:"dateTimeColDataType"}),n.defaultDateTimeType===ni.DateTime64&&n.dateTime.defaultDateTime64&&e.dateTimeColDataType!==n.dateTime.defaultDateTime64&&a.push({key:"Timestamp Column",original:r(e.dateTimeColDataType),updated:n.dateTime.defaultDateTime64,fieldName:"dateTimeColDataType"}),n.defaultDateTimeType===ni.DateTime&&n.dateTime.defaultDateTime&&e.dateTimeColDataType!==n.dateTime.defaultDateTime&&a.push({key:"Timestamp Column",original:r(e.dateTimeColDataType),updated:n.dateTime.defaultDateTime,fieldName:"dateTimeColDataType"}),n.dateTime.defaultDateDate32&&e.dateColDataType!==n.dateTime.defaultDateDate32&&a.push({key:"Date column",original:r(e.dateColDataType),updated:n.dateTime.defaultDateDate32,fieldName:"dateColDataType"}),e.contextWindowSize!==n.contextWindowSize&&a.push({key:"Logs context window size",original:r(e.contextWindowSize),updated:n.contextWindowSize,fieldName:"contextWindowSize"}),e.useWindowFuncForMacros!==n.useWindowFuncForMacros&&a.push({key:"Use window functions for macros",original:(null===(i=e.useWindowFuncForMacros)||void 0===i?void 0:i.toString())||"true",updated:(null===(s=n.useWindowFuncForMacros)||void 0===s?void 0:s.toString())||"false",fieldName:"useWindowFuncForMacros"})),a}(i,r))}),[i,r]),pi().createElement("div",{style:{display:"flex",marginTop:"10px"}},pi().createElement(yi.RadioButtonGroup,{size:"sm",options:vi,value:e,onChange:e=>(e=>{t(e)})(e)}),e!==ei.SQL||n?null:pi().createElement(yi.Button,{variant:"primary",icon:"play",size:"sm",style:{marginLeft:"10px"},onClick:a},"Run Query"),e===ei.Builder?pi().createElement(pi().Fragment,null,pi().createElement(yi.Button,{variant:"primary",size:"sm",icon:"arrow-right",style:{marginLeft:"10px"},onClick:()=>t(ei.SQL)},"Go to Query"),u.length?pi().createElement(yi.Button,{variant:"primary",size:"sm",icon:"sync",style:{marginLeft:"10px"},onClick:()=>l(!0)},"Override settings"):null):null,pi().createElement(yi.Modal,{title:"Confirmation",isOpen:o,onClickBackdrop:()=>l(!1),onDismiss:()=>l(!1)},pi().createElement("div",null,pi().createElement("p",null,"Configuration will be reset to default values defined in datasource configuration"),u.map((e=>pi().createElement(yi.Label,{style:{fontSize:"16px"},key:e.key,description:pi().createElement("p",null,e.original," → ",e.updated)},e.key)))),pi().createElement(yi.Modal.ButtonRow,null,pi().createElement(yi.Button,{variant:"secondary",onClick:()=>l(!1)},"Cancel"),pi().createElement(yi.Button,{variant:"primary",onClick:()=>{l(!1);const e=u.reduce(((e,t)=>(e[t.fieldName]=t.updated,e)),{});s(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){bi(e,t,n[t])}))}return e}({},i,e))}},"Confirm"))))},xi=()=>pi().createElement("div",null,pi().createElement("h5",null,"Macros"),pi().createElement("pre",null,pi().createElement("code",null,"$table - replaced with selected table name from Query Builder\n","$dateCol - replaced with Date:Col value from Query Builder\n","$dateTimeCol - replaced with Column:DateTime or Column:TimeStamp value from Query Builder\n",'$from - replaced with (timestamp with ms)/1000 value of UI selected "Time Range:From"\n','$to - replaced with (timestamp with ms)/1000 value of UI selected "Time Range:To"\n','$interval - replaced with selected "Group by time interval" value (as a number of seconds)\n','$timeFilter - replaced with currently selected "Time Range". Require Column:Date and Column:DateTime or Column:TimeStamp to be selected\n','$timeSeries - replaced with special ClickHouse construction to convert results as time-series data. Use it as "SELECT $timeSeries...". Require Column:DateTime or Column:TimeStamp to be selected\n','$naturalTimeSeries - replaced with special ClickHouse construction to convert results as time-series data in logical/natural units. Use it as "SELECT $naturalTimeSeries...". Require Column:DateTime or Column:TimeStamp to be selected\n','$unescape - unescapes variable value by removing single quotes. Used for multiple-value string variables: "SELECT $unescape($column) FROM requests WHERE $unescape($column) = 5"\n','$adhoc - replaced with a rendered ad-hoc filter expression, or "1" if no ad-hoc filters exist\n',"$conditionalTest - add `SQL predicate` filter expression only if $variable have non empty value\n","A description of macros is available by typing their names in Raw Editor\n")),pi().createElement("h5",null,"Functions (Only one function per query allowed)"),pi().createElement("pre",null,pi().createElement("code",null,'$rate(cols...) - function to convert query results as "change rate per interval". Example usage: $rate(countIf(Type = 200) * 60 AS good, countIf(Type != 200) * 60 AS bad) FROM requests\n',"$columns(key, value) - function to query values as an array of [key, value], where key would be used as a label. Example usage: $columns(Type, count() c) FROM requests\n","$columnsMs(key, value) - same with $columns but time will in milliseconds. Example usage: $columns(Type, count() c) FROM requests\n","$rateColumns(key, value) - is a combination of $columns and $rate. Example usage: $rateColumns(Type, count() c) FROM requests\n","$rateColumnsAggregated(key, subkey, aggFunction1, value1, ... aggFunctionN, valueN) - if you need calculate `$rate` for higher cardinality dimension and then aggregate by lower cardinality dimension. Example usage: $rateColumnsAggregated(datacenter, concat(datacenter,interface) AS dc_interface, sum, tx_bytes * 1014 AS tx_kbytes, sum, max(rx_bytes) AS rx_bytes) FROM traffic\n",'$perSecond(cols...) - converts query results as "change rate per interval" for Counter-like(growing only) metrics\n',"$perSecondColumns(key, value) - is a combination of $columns and $perSecond for Counter-like metrics\n","$perSecondColumnsAggregated(key, subkey, aggFunction1, value1, ... aggFunctionN, valueN) - if you need to calculate `perSecond` for higher cardinality dimension and then aggregate by lower cardinality dimension\n",'$delta(cols...) - converts query results as "delta value inside interval" for Counter-like(growing only) metrics, will negative if counter reset\n',"$deltaColumns(key, value) - is a combination of $columns and $delta for Counter-like metrics\n","$deltaColumnsAggregated(key, subkey, aggFunction1, value1, ... aggFunctionN, valueN) - if you need to calculate `delta` for higher cardinality dimension and then aggregate by lower cardinality dimension\n",'$increase(cols...) - converts query results as "non-negative delta value inside interval" for Counter-like(growing only) metrics, will zero if counter reset and delta less zero\n',"$increaseColumns(key, value) - is a combination of $columns and $increase for Counter-like metrics\n","$increaseColumnsAggregated(key, subkey, aggFunction1, value1, ... aggFunctionN, valueN) - if you need to calculate `increase` for higher cardinality dimension and then aggregate by lower cardinality dimension\n"))),wi=["SELECT","CASE","THEN","DISTINCT","INSERT","UPDATE","DELETE","WHERE","AND","OR","OFFSET","HAVING","AS","GLOBAL","FROM","WHEN","ELSE","END","TYPE","LEFT","RIGHT","USING","JOIN","ON","OUTER","DESC","ASC","CREATE","TABLE","PRIMARY","KEY","FOREIGN","NOT","REFERENCES","DEFAULT","INNER","CROSS","NATURAL","DATABASE","DROP","GRANT","ANY","BETWEEN","ATTACH","DETACH","CAST","WITH","BIT_AND","BIT_OR","BIT_XOR","DESCRIBE","OPTIMIZE","PREWHERE","TOTALS","DATABASES","PROCESSLIST","SHOW","LIMIT","IF","IF NOT EXISTS","IF EXISTS","GROUP","ORDER","BY","IN","FORMAT","GROUP BY","ORDER BY","UNION ALL","UNION DISTINCT","ALTER"],Ii=["BIT_AND","BIT_OR","BIT_XOR","CAST","CHARACTER_LENGTH","CHAR_LENGTH","COVAR_POP","COVAR_SAMP","CRC32","CRC32IEEE","CRC64","DATABASE","DATE","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","FQDN","FROM_BASE64","FROM_UNIXTIME","HOUR","INET6_ATON","INET6_NTOA","INET_ATON","INET_NTOA","IPv4CIDRToRange","IPv4NumToString","IPv4NumToStringClassC","IPv4StringToNum","IPv4StringToNumOrDefault","IPv4StringToNumOrNull","IPv4ToIPv6","IPv6CIDRToRange","IPv6NumToString","IPv6StringToNum","IPv6StringToNumOrDefault","IPv6StringToNumOrNull","JSONExtract","JSONExtractArrayRaw","JSONExtractBool","JSONExtractFloat","JSONExtractInt","JSONExtractKeys","JSONExtractKeysAndValues","JSONExtractKeysAndValuesRaw","JSONExtractRaw","JSONExtractString","JSONExtractUInt","JSONHas","JSONKey","JSONLength","JSONType","JSON_EXISTS","JSON_QUERY","JSON_VALUE","L1Distance","L1Norm","L1Normalize","L2Distance","L2Norm","L2Normalize","LAST_DAY","LinfDistance","LinfNorm","LinfNormalize","LpDistance","LpNorm","LpNormalize","MACNumToString","MACStringToNum","MACStringToOUI","MD4","MD5","MINUTE","MONTH","QUARTER","REGEXP_MATCHES","REGEXP_REPLACE","SECOND","SHA1","SHA224","SHA256","SHA384","SHA512","STDDEV_POP","STDDEV_SAMP","SVG","TO_BASE64","URLHash","URLHierarchy","URLPathHierarchy","UUIDNumToString","UUIDStringToNum","VAR_POP","VAR_SAMP","YEAR","_CAST","__bitBoolMaskAnd","__bitBoolMaskOr","__bitSwapLastTwo","__bitWrapperFunc","__getScalar","abs","accurateCast","accurateCastOrDefault","accurateCastOrNull","accurate_Cast","accurate_CastOrNull","acos","acosh","addDays","addHours","addMicroseconds","addMilliseconds","addMinutes","addMonths","addNanoseconds","addQuarters","addSeconds","addWeeks","addYears","addressToLine","addressToLineWithInlines","addressToSymbol","aes_decrypt_mysql","aes_encrypt_mysql","aggThrow","alphaTokens","and","any","anyHeavy","anyLast","appendTrailingCharIfAbsent","argMax","argMin","array","arrayAUC","arrayAll","arrayAvg","arrayCompact","arrayConcat","arrayCosineDistance","arrayCount","arrayCumSum","arrayCumSumNonNegative","arrayDifference","arrayDistinct","arrayElement","arrayEnumerate","arrayEnumerateDense","arrayEnumerateDenseRanked","arrayEnumerateUniq","arrayEnumerateUniqRanked","arrayExists","arrayFill","arrayFilter","arrayFirst","arrayFirstIndex","arrayFirstOrNull","arrayFlatten","arrayIntersect","arrayJoin","arrayL1Distance","arrayL1Norm","arrayL2Distance","arrayL2Norm","arrayLast","arrayLastIndex","arrayLastOrNull","arrayLinfDistance","arrayLinfNorm","arrayMap","arrayMax","arrayMin","arrayPopBack","arrayPopFront","arrayProduct","arrayPushBack","arrayPushFront","arrayReduce","arrayReduceInRanges","arrayResize","arrayReverse","arrayReverseFill","arrayReverseSort","arrayReverseSplit","arraySlice","arraySort","arraySplit","arrayStringConcat","arraySum","arrayUniq","arrayWithConstant","arrayZip","asin","asinh","assumeNotNull","atan","atan2","atanh","avg","avgWeighted","bar","base64Decode","base64Encode","basename","bin","bitAnd","bitCount","bitHammingDistance","bitNot","bitOr","bitPositionsToArray","bitRotateLeft","bitRotateRight","bitShiftLeft","bitShiftRight","bitSlice","bitTest","bitTestAll","bitTestAny","bitXor","bitmapAnd","bitmapAndCardinality","bitmapAndnot","bitmapAndnotCardinality","bitmapBuild","bitmapCardinality","bitmapContains","bitmapHasAll","bitmapHasAny","bitmapMax","bitmapMin","bitmapOr","bitmapOrCardinality","bitmapSubsetInRange","bitmapSubsetLimit","bitmapToArray","bitmapTransform","bitmapXor","bitmapXorCardinality","bitmaskToArray","bitmaskToList","blockNumber","blockSerializedSize","blockSize","boundingRatio","buildId","byteSize","caseWithExpr","caseWithExpression","caseWithoutExpr","caseWithoutExpression","categoricalInformationValue","cbrt","ceil","ceiling","char","cityHash64","coalesce","concat","concatAssumeInjective","connectionId","connection_id","contingency","convertCharset","corr","corrStable","cos","cosh","cosineDistance","count","countDigits","countEqual","countMatches","countMatchesCaseInsensitive","countSubstrings","countSubstringsCaseInsensitive","countSubstringsCaseInsensitiveUTF8","covarPop","covarPopStable","covarSamp","covarSampStable","cramersV","cramersVBiasCorrected","currentDatabase","currentProfiles","currentRoles","currentUser","cutFragment","cutIPv6","cutQueryString","cutQueryStringAndFragment","cutToFirstSignificantSubdomain","cutToFirstSignificantSubdomainCustom","cutToFirstSignificantSubdomainCustomWithWWW","cutToFirstSignificantSubdomainWithWWW","cutURLParameter","cutWWW","dateDiff","dateName","dateTime64ToSnowflake","dateTimeToSnowflake","dateTrunc","date_trunc","decodeURLComponent","decodeURLFormComponent","decodeXMLComponent","decrypt","defaultProfiles","defaultRoles","defaultValueOfArgumentType","defaultValueOfTypeName","degrees","deltaSum","deltaSumTimestamp","demangle","dense_rank","detectCharset","detectLanguage","detectLanguageMixed","detectLanguageUnknown","detectProgrammingLanguage","detectTonality","dictGet","dictGetChildren","dictGetDate","dictGetDateOrDefault","dictGetDateTime","dictGetDateTimeOrDefault","dictGetDescendants","dictGetFloat32","dictGetFloat32OrDefault","dictGetFloat64","dictGetFloat64OrDefault","dictGetHierarchy","dictGetInt16","dictGetInt16OrDefault","dictGetInt32","dictGetInt32OrDefault","dictGetInt64","dictGetInt64OrDefault","dictGetInt8","dictGetInt8OrDefault","dictGetOrDefault","dictGetOrNull","dictGetString","dictGetStringOrDefault","dictGetUInt16","dictGetUInt16OrDefault","dictGetUInt32","dictGetUInt32OrDefault","dictGetUInt64","dictGetUInt64OrDefault","dictGetUInt8","dictGetUInt8OrDefault","dictGetUUID","dictGetUUIDOrDefault","dictHas","dictIsIn","distanceL1","distanceL2","distanceLinf","distanceLp","divide","domain","domainWithoutWWW","dotProduct","dumpColumnStructure","e","empty","emptyArrayDate","emptyArrayDateTime","emptyArrayFloat32","emptyArrayFloat64","emptyArrayInt16","emptyArrayInt32","emptyArrayInt64","emptyArrayInt8","emptyArrayString","emptyArrayToSingle","emptyArrayUInt16","emptyArrayUInt32","emptyArrayUInt64","emptyArrayUInt8","enabledProfiles","enabledRoles","encodeURLComponent","encodeURLFormComponent","encodeXMLComponent","encrypt","endsWith","entropy","equals","erf","erfc","errorCodeToName","evalMLMethod","exp","exp10","exp2","exponentialMovingAverage","exponentialTimeDecayedAvg","exponentialTimeDecayedCount","exponentialTimeDecayedMax","exponentialTimeDecayedSum","extract","extractAll","extractAllGroups","extractAllGroupsHorizontal","extractAllGroupsVertical","extractGroups","extractTextFromHTML","extractURLParameter","extractURLParameterNames","extractURLParameters","farmFingerprint64","farmHash64","file","filesystemAvailable","filesystemCapacity","filesystemFree","finalizeAggregation","firstSignificantSubdomain","firstSignificantSubdomainCustom","first_value","flatten","flattenTuple","floor","format","formatDateTime","formatReadableQuantity","formatReadableSize","formatReadableTimeDelta","formatRow","formatRowNoNewline","fragment","fromModifiedJulianDay","fromModifiedJulianDayOrNull","fromUnixTimestamp","fromUnixTimestamp64Micro","fromUnixTimestamp64Milli","fromUnixTimestamp64Nano","fullHostName","fuzzBits","gccMurmurHash","gcd","generateUUIDv4","geoDistance","geoToH3","geoToS2","geohashDecode","geohashEncode","geohashesInBox","getMacro","getOSKernelVersion","getServerPort","getSetting","getSizeOfEnumType","getTypeSerializationStreams","globalIn","globalInIgnoreSet","globalNotIn","globalNotInIgnoreSet","globalNotNullIn","globalNotNullInIgnoreSet","globalNullIn","globalNullInIgnoreSet","globalVariable","greatCircleAngle","greatCircleDistance","greater","greaterOrEquals","greatest","groupArray","groupArrayInsertAt","groupArrayMovingAvg","groupArrayMovingSum","groupArraySample","groupBitAnd","groupBitOr","groupBitXor","groupBitmap","groupBitmapAnd","groupBitmapOr","groupBitmapXor","groupUniqArray","h3CellAreaM2","h3CellAreaRads2","h3Distance","h3EdgeAngle","h3EdgeLengthKm","h3EdgeLengthM","h3ExactEdgeLengthKm","h3ExactEdgeLengthM","h3ExactEdgeLengthRads","h3GetBaseCell","h3GetFaces","h3GetPentagonIndexes","h3GetRes0Indexes","h3GetResolution","h3HexAreaKm2","h3HexAreaM2","h3HexRing","h3IndexesAreNeighbors","h3IsPentagon","h3IsResClassIII","h3IsValid","h3Line","h3NumHexagons","h3PointDistKm","h3PointDistM","h3PointDistRads","h3ToCenterChild","h3ToChildren","h3ToGeo","h3ToGeoBoundary","h3ToParent","h3ToString","h3kRing","halfMD5","has","hasAll","hasAny","hasColumnInTable","hasSubstr","hasThreadFuzzer","hasToken","hasTokenCaseInsensitive","hex","histogram","hiveHash","hop","hopEnd","hopStart","hostName","hostname","hypot","identity","if","ifNotFinite","ifNull","ignore","ilike","in","inIgnoreSet","indexHint","indexOf","initialQueryID","initial_query_id","initializeAggregation","intDiv","intDivOrZero","intExp10","intExp2","intHash32","intHash64","intervalLengthSum","isConstant","isDecimalOverflow","isFinite","isIPAddressInRange","isIPv4String","isIPv6String","isInfinite","isNaN","isNotNull","isNull","isValidJSON","isValidUTF8","isZeroOrNull","javaHash","javaHashUTF16LE","joinGet","joinGetOrNull","jumpConsistentHash","kostikConsistentHash","kurtPop","kurtSamp","lagInFrame","last_value","lcase","lcm","leadInFrame","least","left","leftPad","leftPadUTF8","leftUTF8","lemmatize","length","lengthUTF8","less","lessOrEquals","lgamma","like","ln","locate","log","log10","log1p","log2","logTrace","lowCardinalityIndices","lowCardinalityKeys","lower","lowerUTF8","lpad","makeDate","makeDate32","makeDateTime","makeDateTime64","mannWhitneyUTest","map","mapAdd","mapApply","mapContains","mapContainsKeyLike","mapExtractKeyLike","mapFilter","mapKeys","mapPopulateSeries","mapSubtract","mapUpdate","mapValues","match","materialize","max","max2","maxIntersections","maxIntersectionsPosition","maxMappedArrays","meanZTest","median","medianBFloat16","medianBFloat16Weighted","medianDeterministic","medianExact","medianExactHigh","medianExactLow","medianExactWeighted","medianTDigest","medianTDigestWeighted","medianTiming","medianTimingWeighted","meiliMatch","metroHash64","mid","min","min2","minMappedArrays","minSampleSizeContinous","minSampleSizeConversion","minus","mod","modelEvaluate","modulo","moduloLegacy","moduloOrZero","monthName","multiFuzzyMatchAllIndices","multiFuzzyMatchAny","multiFuzzyMatchAnyIndex","multiIf","multiMatchAllIndices","multiMatchAny","multiMatchAnyIndex","multiSearchAllPositions","multiSearchAllPositionsCaseInsensitive","multiSearchAllPositionsCaseInsensitiveUTF8","multiSearchAllPositionsUTF8","multiSearchAny","multiSearchAnyCaseInsensitive","multiSearchAnyCaseInsensitiveUTF8","multiSearchAnyUTF8","multiSearchFirstIndex","multiSearchFirstIndexCaseInsensitive","multiSearchFirstIndexCaseInsensitiveUTF8","multiSearchFirstIndexUTF8","multiSearchFirstPosition","multiSearchFirstPositionCaseInsensitive","multiSearchFirstPositionCaseInsensitiveUTF8","multiSearchFirstPositionUTF8","multiply","murmurHash2_32","murmurHash2_64","murmurHash3_128","murmurHash3_32","murmurHash3_64","negate","neighbor","netloc","ngramDistance","ngramDistanceCaseInsensitive","ngramDistanceCaseInsensitiveUTF8","ngramDistanceUTF8","ngramMinHash","ngramMinHashArg","ngramMinHashArgCaseInsensitive","ngramMinHashArgCaseInsensitiveUTF8","ngramMinHashArgUTF8","ngramMinHashCaseInsensitive","ngramMinHashCaseInsensitiveUTF8","ngramMinHashUTF8","ngramSearch","ngramSearchCaseInsensitive","ngramSearchCaseInsensitiveUTF8","ngramSearchUTF8","ngramSimHash","ngramSimHashCaseInsensitive","ngramSimHashCaseInsensitiveUTF8","ngramSimHashUTF8","ngrams","normL1","normL2","normLinf","normLp","normalizeL1","normalizeL2","normalizeLinf","normalizeLp","normalizeQuery","normalizeQueryKeepNames","normalizeUTF8NFC","normalizeUTF8NFD","normalizeUTF8NFKC","normalizeUTF8NFKD","normalizedQueryHash","normalizedQueryHashKeepNames","not","notEmpty","notEquals","notILike","notIn","notInIgnoreSet","notLike","notNullIn","notNullInIgnoreSet","nothing","now","now64","nth_value","nullIf","nullIn","nullInIgnoreSet","or","parseDateTime32BestEffort","parseDateTime32BestEffortOrNull","parseDateTime32BestEffortOrZero","parseDateTime64BestEffort","parseDateTime64BestEffortOrNull","parseDateTime64BestEffortOrZero","parseDateTimeBestEffort","parseDateTimeBestEffortOrNull","parseDateTimeBestEffortOrZero","parseDateTimeBestEffortUS","parseDateTimeBestEffortUSOrNull","parseDateTimeBestEffortUSOrZero","partitionId","path","pathFull","pi","plus","pointInEllipses","pointInPolygon","polygonAreaCartesian","polygonAreaSpherical","polygonConvexHullCartesian","polygonPerimeterCartesian","polygonPerimeterSpherical","polygonsDistanceCartesian","polygonsDistanceSpherical","polygonsEqualsCartesian","polygonsIntersectionCartesian","polygonsIntersectionSpherical","polygonsSymDifferenceCartesian","polygonsSymDifferenceSpherical","polygonsUnionCartesian","polygonsUnionSpherical","polygonsWithinCartesian","polygonsWithinSpherical","port","position","positionCaseInsensitive","positionCaseInsensitiveUTF8","positionUTF8","pow","power","proportionsZTest","protocol","quantile","quantileBFloat16","quantileBFloat16Weighted","quantileDeterministic","quantileExact","quantileExactExclusive","quantileExactHigh","quantileExactInclusive","quantileExactLow","quantileExactWeighted","quantileTDigest","quantileTDigestWeighted","quantileTiming","quantileTimingWeighted","quantiles","quantilesBFloat16","quantilesBFloat16Weighted","quantilesDeterministic","quantilesExact","quantilesExactExclusive","quantilesExactHigh","quantilesExactInclusive","quantilesExactLow","quantilesExactWeighted","quantilesTDigest","quantilesTDigestWeighted","quantilesTiming","quantilesTimingWeighted","queryID","queryString","queryStringAndFragment","query_id","radians","rand","rand32","rand64","randConstant","randomFixedString","randomPrintableASCII","randomString","randomStringUTF8","range","rank","rankCorr","readWKTMultiPolygon","readWKTPoint","readWKTPolygon","readWKTRing","regexpQuoteMeta","regionHierarchy","regionIn","regionToArea","regionToCity","regionToContinent","regionToCountry","regionToDistrict","regionToName","regionToPopulation","regionToTopContinent","reinterpret","reinterpretAsDate","reinterpretAsDateTime","reinterpretAsFixedString","reinterpretAsFloat32","reinterpretAsFloat64","reinterpretAsInt128","reinterpretAsInt16","reinterpretAsInt256","reinterpretAsInt32","reinterpretAsInt64","reinterpretAsInt8","reinterpretAsString","reinterpretAsUInt128","reinterpretAsUInt16","reinterpretAsUInt256","reinterpretAsUInt32","reinterpretAsUInt64","reinterpretAsUInt8","reinterpretAsUUID","repeat","replace","replaceAll","replaceOne","replaceRegexpAll","replaceRegexpOne","replicate","retention","reverse","reverseUTF8","right","rightPad","rightPadUTF8","rightUTF8","round","roundAge","roundBankers","roundDown","roundDuration","roundToExp2","rowNumberInAllBlocks","rowNumberInBlock","row_number","rpad","runningAccumulate","runningConcurrency","runningDifference","runningDifferenceStartingWithFirstValue","s2CapContains","s2CapUnion","s2CellsIntersect","s2GetNeighbors","s2RectAdd","s2RectContains","s2RectIntersection","s2RectUnion","s2ToGeo","scalarProduct","sequenceCount","sequenceMatch","sequenceNextNode","serverUUID","shardCount","shardNum","sigmoid","sign","simpleJSONExtractBool","simpleJSONExtractFloat","simpleJSONExtractInt","simpleJSONExtractRaw","simpleJSONExtractString","simpleJSONExtractUInt","simpleJSONHas","simpleLinearRegression","sin","singleValueOrNull","sinh","sipHash128","sipHash64","skewPop","skewSamp","sleep","sleepEachRow","snowflakeToDateTime","snowflakeToDateTime64","sparkbar","splitByChar","splitByNonAlpha","splitByRegexp","splitByString","splitByWhitespace","sqrt","startsWith","stddevPop","stddevPopStable","stddevSamp","stddevSampStable","stem","stochasticLinearRegression","stochasticLogisticRegression","stringToH3","studentTTest","subBitmap","substr","substring","substringUTF8","subtractDays","subtractHours","subtractMicroseconds","subtractMilliseconds","subtractMinutes","subtractMonths","subtractNanoseconds","subtractQuarters","subtractSeconds","subtractWeeks","subtractYears","sum","sumCount","sumKahan","sumMapFiltered","sumMapFilteredWithOverflow","sumMapWithOverflow","sumMappedArrays","sumWithOverflow","svg","synonyms","tan","tanh","tcpPort","tgamma","theilsU","throwIf","tid","timeSlot","timeSlots","timeZone","timeZoneOf","timeZoneOffset","timezone","timezoneOf","timezoneOffset","toBool","toColumnTypeName","toDate","toDate32","toDate32OrDefault","toDate32OrNull","toDate32OrZero","toDateOrDefault","toDateOrNull","toDateOrZero","toDateTime","toDateTime32","toDateTime64","toDateTime64OrDefault","toDateTime64OrNull","toDateTime64OrZero","toDateTimeOrDefault","toDateTimeOrNull","toDateTimeOrZero","toDayOfMonth","toDayOfWeek","toDayOfYear","toDecimal128","toDecimal128OrDefault","toDecimal128OrNull","toDecimal128OrZero","toDecimal256","toDecimal256OrDefault","toDecimal256OrNull","toDecimal256OrZero","toDecimal32","toDecimal32OrDefault","toDecimal32OrNull","toDecimal32OrZero","toDecimal64","toDecimal64OrDefault","toDecimal64OrNull","toDecimal64OrZero","toFixedString","toFloat32","toFloat32OrDefault","toFloat32OrNull","toFloat32OrZero","toFloat64","toFloat64OrDefault","toFloat64OrNull","toFloat64OrZero","toHour","toIPv4","toIPv4OrDefault","toIPv4OrNull","toIPv6","toIPv6OrDefault","toIPv6OrNull","toISOWeek","toISOYear","toInt128","toInt128OrDefault","toInt128OrNull","toInt128OrZero","toInt16","toInt16OrDefault","toInt16OrNull","toInt16OrZero","toInt256","toInt256OrDefault","toInt256OrNull","toInt256OrZero","toInt32","toInt32OrDefault","toInt32OrNull","toInt32OrZero","toInt64","toInt64OrDefault","toInt64OrNull","toInt64OrZero","toInt8","toInt8OrDefault","toInt8OrNull","toInt8OrZero","toIntervalDay","toIntervalHour","toIntervalMicrosecond","toIntervalMillisecond","toIntervalMinute","toIntervalMonth","toIntervalNanosecond","toIntervalQuarter","toIntervalSecond","toIntervalWeek","toIntervalYear","toJSONString","toLastDayOfMonth","toLowCardinality","toMinute","toModifiedJulianDay","toModifiedJulianDayOrNull","toMonday","toMonth","toNullable","toQuarter","toRelativeDayNum","toRelativeHourNum","toRelativeMinuteNum","toRelativeMonthNum","toRelativeQuarterNum","toRelativeSecondNum","toRelativeWeekNum","toRelativeYearNum","toSecond","toStartOfDay","toStartOfFifteenMinutes","toStartOfFiveMinute","toStartOfFiveMinutes","toStartOfHour","toStartOfISOYear","toStartOfInterval","toStartOfMicrosecond","toStartOfMillisecond","toStartOfMinute","toStartOfMonth","toStartOfNanosecond","toStartOfQuarter","toStartOfSecond","toStartOfTenMinutes","toStartOfWeek","toStartOfYear","toString","toStringCutToZero","toTime","toTimeZone","toTimezone","toTypeName","toUInt128","toUInt128OrNull","toUInt128OrZero","toUInt16","toUInt16OrDefault","toUInt16OrNull","toUInt16OrZero","toUInt256","toUInt256OrDefault","toUInt256OrNull","toUInt256OrZero","toUInt32","toUInt32OrDefault","toUInt32OrNull","toUInt32OrZero","toUInt64","toUInt64OrDefault","toUInt64OrNull","toUInt64OrZero","toUInt8","toUInt8OrDefault","toUInt8OrNull","toUInt8OrZero","toUUID","toUUIDOrDefault","toUUIDOrNull","toUUIDOrZero","toUnixTimestamp","toUnixTimestamp64Micro","toUnixTimestamp64Milli","toUnixTimestamp64Nano","toValidUTF8","toWeek","toYYYYMM","toYYYYMMDD","toYYYYMMDDhhmmss","toYear","toYearWeek","today","tokens","topK","topKWeighted","topLevelDomain","transactionID","transactionLatestSnapshot","transactionOldestSnapshot","transform","trimBoth","trimLeft","trimRight","trunc","truncate","tryBase64Decode","tumble","tumbleEnd","tumbleStart","tuple","tupleDivide","tupleDivideByNumber","tupleElement","tupleHammingDistance","tupleMinus","tupleMultiply","tupleMultiplyByNumber","tupleNegate","tuplePlus","tupleToNameValuePairs","ucase","unbin","unhex","uniq","uniqCombined","uniqCombined64","uniqExact","uniqHLL12","uniqTheta","uniqUpTo","upper","upperUTF8","uptime","user","validateNestedArraySizes","varPop","varPopStable","varSamp","varSampStable","vectorDifference","vectorSum","version","visibleWidth","visitParamExtractBool","visitParamExtractFloat","visitParamExtractInt","visitParamExtractRaw","visitParamExtractString","visitParamExtractUInt","visitParamHas","week","welchTTest","windowFunnel","windowID","wkt","wordShingleMinHash","wordShingleMinHashArg","wordShingleMinHashArgCaseInsensitive","wordShingleMinHashArgCaseInsensitiveUTF8","wordShingleMinHashArgUTF8","wordShingleMinHashCaseInsensitive","wordShingleMinHashCaseInsensitiveUTF8","wordShingleMinHashUTF8","wordShingleSimHash","wordShingleSimHashCaseInsensitive","wordShingleSimHashCaseInsensitiveUTF8","wordShingleSimHashUTF8","wyHash64","xor","xxHash32","xxHash64","yandexConsistentHash","yearweek","yesterday","zookeeperSessionUptime","toLowerCase"],Di=["JSON","Polygon","Ring","Point","SimpleAggregateFunction","MultiPolygon","IPv6","UInt32","IntervalYear","IntervalQuarter","IntervalMonth","Int64","IntervalDay","IntervalHour","IPv4","IntervalSecond","LowCardinality","Int16","UInt256","AggregateFunction","Nothing","Decimal256","Tuple","Array","IntervalMicrosecond","Bool","Enum16","IntervalMinute","FixedString","String","DateTime","Object","Map","UUID","Decimal64","Nullable","Enum","Int32","UInt8","Date","Decimal32","UInt128","Float64","Nested","UInt16","IntervalMillisecond","Int128","Decimal128","Int8","Decimal","Int256","DateTime64","Enum8","DateTime32","Date32","IntervalWeek","UInt64","IntervalNanosecond","Float32","bool","INET6","INET4","ENUM","BINARY","GEOMETRY","NATIONAL CHAR VARYING","BINARY VARYING","NCHAR LARGE OBJECT","NATIONAL CHARACTER VARYING","boolean","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER","NATIONAL CHAR","CHARACTER VARYING","LONGBLOB","TINYBLOB","MEDIUMTEXT","TEXT","VARCHAR2","CHARACTER LARGE OBJECT","DOUBLE PRECISION","LONGTEXT","NVARCHAR","INT1 UNSIGNED","VARCHAR","CHAR VARYING","MEDIUMBLOB","NCHAR","VARBINARY","CHAR","SMALLINT UNSIGNED","TIMESTAMP","FIXED","TINYTEXT","NUMERIC","DEC","TIME","FLOAT","SET","TINYINT UNSIGNED","INTEGER UNSIGNED","INT UNSIGNED","CLOB","MEDIUMINT UNSIGNED","BLOB","REAL","SMALLINT","INTEGER SIGNED","NCHAR VARYING","INT SIGNED","TINYINT SIGNED","BIGINT SIGNED","BINARY LARGE OBJECT","SMALLINT SIGNED","YEAR","MEDIUMINT","INTEGER","INT1 SIGNED","BIT","BIGINT UNSIGNED","BYTEA","INT","SINGLE","MEDIUMINT SIGNED","DOUBLE","INT1","CHAR LARGE OBJECT","TINYINT","BIGINT","CHARACTER","BYTE"],Ei=["true","false","NULL","null","inf","nan"],Oi=["$table","$dateCol","$dateTimeCol","$from","$to","$interval","$timeFilter","$timeFilterMs","$timeFilterByColumn","$timeFilter64ByColumn","$timeSeries","$timeSeriesMs","$naturalTimeSeries","$rate","$rateColumns","$rateColumnsAggregated","$perSecond","$perSecondColumns","$perSecondColumnsAggregated","$delta","$deltaColumns","$deltaColumnsAggregated","$increase","$increaseColumns","$increaseColumnsAggregated","$columns","$columnsMs","$unescape","$adhoc","$conditionalTest"];function Ci(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}let Ai=null;var Ni;!function(e){e.FUNCTIONS="custom-functions",e.KEYWORDS="custom-keywords",e.CONSTANTS="custom-constants",e.DATATYPES="custom-datatypes",e.MACROS="custom-macros",e.PARENTHESIS="custom-parenthesis",e.COMMENT="custom-comment",e.COMMENT_BLOCK="custom-comment-block",e.VARIABLE="custom-variable",e.STRING="custom-string"}(Ni||(Ni={}));const ki="clickhouse-dark-theme",Fi="clickhouseLanguage",Ri=(e,t,n,a)=>{const{Method:r,Variable:i,Constant:s,Keyword:o,TypeParameter:l,Text:u}=t.languages.CompletionItemKind;let c,d,m,h;var f,g,p;if(n&&(c=(null===(f=n)||void 0===f?void 0:f.identifier)||[],d=(null===(g=n)||void 0===g?void 0:g.keyword)||[],m=(null===(p=n)||void 0===p?void 0:p.string)||[]),a&&(h=a||[]),!t)return;Ai&&(Ai.dispose(),Ai=null);const y="#a6e22e",T={[s]:"Constant",[l]:"Type",[o]:"Keyword",[r]:"Function",[i]:"Macros",[u]:"Macros"},v=(e,t,n,a,r)=>({label:{label:e,description:T[t]},kind:t,insertText:n,range:a,documentation:{value:r}});return t.languages.register({id:Fi}),(()=>{const e=wi,n=Ii,a=Di,r=Ei,i=Oi;t.languages.setMonarchTokensProvider(Fi,{tokenizer:{root:[[new RegExp(`\\b(${[...e,...d,...h].join("|")})\\b`),Ni.KEYWORDS],[new RegExp(`\\s(${n.join("|")})`),Ni.FUNCTIONS],[new RegExp("[()]"),Ni.PARENTHESIS],[new RegExp("--.*$"),Ni.COMMENT],[new RegExp("```.*```"),Ni.COMMENT_BLOCK],[new RegExp("\\$\\w+"),Ni.VARIABLE],[new RegExp("\\${\\w+}"),Ni.VARIABLE],[new RegExp("'.*?'"),Ni.STRING],[new RegExp(`\\b(${a.join("|")})\\b`),Ni.DATATYPES],[new RegExp(`\\b(${r.join("|")})\\b`),Ni.CONSTANTS],[new RegExp(`(${i.map((e=>e.replace("$","\\$"))).join("|")})`),Ni.MACROS]]}})})(),t.editor.defineTheme(ki,{base:"vs-dark",inherit:!1,rules:[{token:Ni.FUNCTIONS,foreground:"#66d9ef"},{token:Ni.PARENTHESIS,foreground:"#f0a842"},{token:Ni.KEYWORDS,foreground:"#66d9ef"},{token:Ni.CONSTANTS,foreground:"#fe85fc"},{token:Ni.DATATYPES,foreground:"#66d9ef"},{token:Ni.MACROS,foreground:y},{token:Ni.COMMENT,foreground:"#75715e"},{token:Ni.COMMENT_BLOCK,foreground:"#75715e"},{token:Ni.VARIABLE,foreground:y},{token:Ni.STRING,foreground:"#74e680"}],colors:{"editor.foreground":"#e0e0e0","editor.background":"#000000"}}),Ai=((e,t)=>t.languages.registerCompletionItemProvider(Fi,{provideCompletionItems:(t,n)=>{const a=t.getWordUntilPosition(n),f={startLineNumber:n.lineNumber,endLineNumber:n.lineNumber,startColumn:a.startColumn,endColumn:a.endColumn},g=(y=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){Ci(e,t,n[t])}))}return e}({},f),T=null!=(T={startColumn:a.startColumn-1})?T:{},Object.getOwnPropertyDescriptors?Object.defineProperties(y,Object.getOwnPropertyDescriptors(T)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n.push.apply(n,a)}return n}(Object(T)).forEach((function(e){Object.defineProperty(y,e,Object.getOwnPropertyDescriptor(T,e))})),y),p=(e,t)=>e.map((e=>v(e,t,e,f)));var y,T,b,S;return{incomplete:!1,suggestions:[...(b=[{name:"corr",def:"corr(x, y)",docText:"Calculates the Pearson correlation coefficient: `Σ((x - x̅)(y - y̅)) / sqrt(Σ((x - x̅)<sup>2</sup>) * Σ((y - y̅)<sup>2</sup>))`."},{name:"stddevPop",def:"stddevPop(x)",docText:"The result is equal to the square root of `varPop(x)`."},{name:"varPop",def:"varPop(x, y)",docText:"Calculates the value of `Σ((x - x̅)(y - y̅)) / n`."},{name:"argMin",def:"argMin(arg, val)",docText:"Calculates the `arg` value for a minimal `val` value. If there are several different values of `arg` for minimal values of `val`, the first of these values encountered is output."},{name:"quantileExactWeighted",def:"quantileExactWeighted(level)(x, weight)",docText:'Computes the level quantile exactly. In this case, each value is taken into account with the weight weight - as if it is present weight once. The arguments of the function can be considered as histograms, where the value "x" corresponds to the "column" of the histogram of the height weight, and the function itself can be considered as the summation of histograms.\n\nThe algorithm is a hash table. Because of this, in case the transmitted values are often repeated, the function consumes less RAM than the quantileExact. You can use this function instead of quantileExact, specifying the number 1 as the weight.'},{name:"min",def:"min(v)",docText:"Aggregate function that calculates the minimum across a group of values."},{name:"varSamp",def:"varSamp(x)",docText:"Calculates the amount Σ((x - x̅)2) / (n - 1), where 'n' is the sample size and 'x̅' is the average value of 'x'.\n\nIt represents an unbiased estimate of the variance of a random variable, if the values passed to the function are a sample of this random amount.\n\nReturns Float64. If n <= 1, it returns +∞."},{name:"anyLast",def:"anyLast(x)",docText:"Selects the last value encountered. \n\n The result is just as indeterminate as for the `any` function."},{name:"argMax",def:"argMax(arg, val)",docText:"Calculates the `arg` value for a maximum `val` value. If there are several different values of `arg` for maximum values of `val`, the first of these values encountered is output."},{name:"count",def:"count()",docText:"Counts the number of rows. "},{name:"any",def:"any(x)",docText:"Selects the last value encountered. \n\n The result is just as indeterminate as for the `any` function."},{name:"avg",def:"avg(x)",docText:"Calculates the average. \n\n Only works for numbers. \n\n The result is always Float64."},{name:"sequenceMatch",def:"sequenceMatch(pattern)(time, cond1, cond2, ...)",docText:"Pattern matching for event chains.\n\n'pattern' is a string containing a pattern to match. The pattern is similar to a regular expression. 'time' is the event time of the DateTime type. 'cond1, cond2 ...' are from one to 32 arguments of the UInt8 type that indicate whether an event condition was met.\n\nThe function collects a sequence of events in RAM. Then it checks whether this sequence matches the pattern. It returns UInt8 - 0 if the pattern isn't matched, or 1 if it matches.\n\nExample: sequenceMatch('(?1).*(?2)')(EventTime, URL LIKE '%company%', URL LIKE '%cart%') - whether there was a chain of events in which pages with the address in company were visited earlier than pages with the address in cart."},{name:"stddevSamp",def:"stddevSamp(x)",docText:"The result is equal to the square root of `varSamp(x)`."},{name:"medianDeterministic",def:"medianDeterministic(x, determinator)",docText:"This function works similarly to the `median` function - it approximates the median."},{name:"quantilesTimingWeighted",def:"quantilesTimingWeighted(level1, level2, ...)(x, weight)",docText:"Calculates the quantiles of all specified levels using the same algorithm as the `medianTimingWeighted` function."},{name:"uniq",def:"uniq(N)(x)",docText:"Calculates the number of different argument values, if it is less than or equal to N. \n\n If the number of different argument values is greater than N, it returns N + 1."},{name:"covarSamp",def:"covarSamp(x, y)",docText:"Calculates the value of `Σ((x - x̅)(y - y̅)) / (n - 1)`. Returns Float64. If n <= 1, it returns +∞."},{name:"max",def:"max(v)",docText:"Aggregate function that calculates the maximum across a group of values."},{name:"quantileTDigest",def:"quantileTDigest(level)(x)",docText:"t-digest"},{name:"quantilesTiming",def:"quantilesTiming(level1, level2, ...)(x, weight)",docText:"Calculates the quantiles of all specified levels using the same algorithm as the `medianTimingWeighted` function."},{name:"quantiles",def:"quantiles(level1, level2, ...)(x, determinator)",docText:"Calculates the quantiles of all specified levels using the same algorithm as the `medianDeterministic` function."},{name:"quantile",def:"quantile(level1, level2, ...)(x, determinator)",docText:"Calculates the quantiles of all specified levels using the same algorithm as the `medianDeterministic` function."},{name:"groupArray",def:"groupArray(x)",docText:"Creates an array of argument values. \n\n Values can be added to the array in any (indeterminate) order. \n\n In some cases, you can rely on the order of execution. This applies to cases when SELECT comes from a subquery that uses ORDER BY."},{name:"sum",def:"sum(x)",docText:"Calculates the sum. \n\n Only works for numbers."},{name:"median",def:"median(x, weight)",docText:"Differs from the `medianTiming` function in that it has a second argument - `weights`. Weight is a non-negative integer. \n\n The result is calculated as if the `x` value were passed `weight` number of times to the `medianTiming` function."},{name:"quantileTiming",def:"quantileTiming(level)(x, weight)",docText:"Calculates the quantile of `level` using the same algorithm as the `medianTimingWeighted` function."},{name:"quantileTimingWeighted",def:"quantileTimingWeighted(level)(x, weight)",docText:"Calculates the quantile of `level` using the same algorithm as the `medianTimingWeighted` function."},{name:"groupUniqArray",def:"groupUniqArray(x)",docText:"Creates an array from different argument values. Memory consumption is the same as for the `uniqExact` function."},{name:"uniqHLL12",def:"uniqHLL12(x)",docText:"Uses the HyperLogLog algorithm to approximate the number of different values of the argument. "},{name:"covarPop",def:"covarPop(x, y)",docText:"Calculates the value of `Σ((x - x̅)(y - y̅)) / n`."},{name:"sequenceCount",def:"sequenceCount(pattern)(time, cond1, cond2, ...)",docText:"sequenceMatch"},{name:"quantileDeterministic",def:"quantileDeterministic(level)(x, determinator)",docText:"Calculates the quantile of `level` using the same algorithm as the `medianDeterministic` function."},{name:"quantileExact",def:"quantileExact(level)(x, weight)",docText:""},{name:"quantilesDeterministic",def:"quantilesDeterministic(level1, level2, ...)(x, determinator)",docText:"Calculates the quantiles of all specified levels using the same algorithm as the `medianDeterministic` function."},{name:"medianTiming",def:"medianTiming(x, weight)",docText:"Differs from the `medianTiming` function in that it has a second argument - `weights`."},{name:"medianTimingWeighted",def:"medianTimingWeighted(x, weight)",docText:"Differs from the `medianTiming` function in that it has a second argument - `weights`."},{name:"uniqExact",def:"uniqExact(x)",docText:"Calculates the number of different values of the argument, exactly. \n\n There is no reason to fear approximations, so it`s better to use the `uniq` function. \n\n You should use the `uniqExact` function if you definitely need an exact result. "},{name:"uniqCombined",def:"uniqCombined(x)",docText:""},{name:"uniqCombinedIf",def:"uniqCombinedIf(x,v)",docText:""},{name:"uniqUpTo",def:"uniqUpTo(N)(x)",docText:"Calculates the number of different argument values, if it is less than or equal to N. \n\n If the number of different argument values is greater than N, it returns N + 1."},{name:"substring",def:"substring(s, offset, length)",docText:"The same as `substring`, but for Unicode code points. Works under the assumption that the string contains a set of bytes representing a UTF-8 encoded text. If this assumption is not met, it returns some result (it doesn`t throw an exception)."},{name:"notLike",def:"notLike(haystack, pattern), haystack NOT LIKE pattern operator",docText:"The same thing as `like`, but negative."},{name:"hostName",def:"hostName()",docText:"Returns a string with the name of the host that this function was performed on. For distributed processing, this is the name of the remote server host, if the function is performed on a remote server."},{name:"globalNotIn",def:"globalNotIn(v)",docText:"See the section `IN operators`."},{name:"or",def:"or(v)",docText:"The same thing as `max_temporary_columns`, but without counting constant columns. \n\n Note that constant columns are formed fairly often when running a query, but they require approximately zero computing resources."},{name:"extractAll",def:"extractAll(haystack, pattern)",docText:"Extracts all the fragments of a string using a regular expression. If `haystack` doesn`t match the `pattern` regex, an empty string is returned. Returns an array of strings consisting of all matches to the regex."},{name:"arrayFirst",def:"arrayFirst(func, arr1, ...)",docText:"Returns the index of the first element in the `arr1` array for which `func` returns something other than 0."},{name:"arrayExists",def:"arrayExists([func,] arr1, ...)",docText:"Returns 1 if there is at least one element in `arr` for which `func` returns something other than 0. Otherwise, it returns 0."},{name:"arrayCount",def:"arrayCount([func,] arr1, ...)",docText:"Returns the number of elements in `arr` for which `func` returns something other than 0. If `func` is not specified, it returns the number of non-zero items in the array."},{name:"arrayMap",def:"arrayMap(func, arr1, ...)",docText:"Returns an array obtained from the original application of the `func` function to each element in the `arr` array."},{name:"now",def:"now(v)",docText:"If the parameter is true, INSERT operation will skip columns with unknown names from input. \n\n Otherwise, an exception will be generated, it is default behavior. \n\n The parameter works only for JSONEachRow and TSKV input formats."},{name:"intDiv",def:"intDiv(a, b)",docText:"Differs from `intDiv` in that it returns zero when dividing by zero or when dividing a minimal negative number by minus one."},{name:"topLevelDomain",def:"topLevelDomain(v)",docText:"Selects the top-level domain. Example: .ru."},{name:"intHash32",def:"intHash32(v)",docText:"Calculates a 32-bit hash code from any type of integer. \n\n This is a relatively fast non-cryptographic hash function of average quality for numbers."},{name:"replaceOne",def:"replaceOne(haystack, pattern, replacement)",docText:"Replaces the first occurrence, if it exists, of the `pattern` substring in `haystack` with the `replacement` substring. \n\n Hereafter, `pattern` and `replacement` must be constants."},{name:"cityHash64",def:"cityHash64(v)",docText:"Calculates CityHash64 from a string or a similar hash function for any number of any type of arguments. \n\n For String-type arguments, CityHash is used. This is a fast non-cryptographic hash function for strings with decent quality"},{name:"OSToRoot",def:"OSToRoot(v)",docText:"Accepts a UInt8 number - the ID of the operating system from the Yandex.Metrica dictionary. If any OS matches the passed number, it returns a UInt8 number - the ID of the corresponding root OS (for example, it converts Windows Vista to Windows). Otherwise, returns 0."},{name:"sipHash128",def:"sipHash128(v)",docText:"Calculates SipHash from a string. \n\n Accepts a String-type argument. Returns FixedString(16). \n\n Differs from sipHash64 in that the final xor-folding state is only done up to 128 bits."},{name:"SHA1",def:"SHA1(v)",docText:"Calculates SHA-1, SHA-224, or SHA-256 from a string and returns the resulting set of bytes as FixedString(20), FixedString(28), or FixedString(32)."},{name:"asin",def:"asin(x)",docText:"The arc sine."},{name:"SHA256",def:"SHA256(v)",docText:"Calculates SHA-1, SHA-224, or SHA-256 from a string and returns the resulting set of bytes as FixedString(20), FixedString(28), or FixedString(32)."},{name:"MD5",def:"MD5(v)",docText:"Calculates the MD5 from a string and returns the resulting set of bytes as FixedString(16)."},{name:"bitmaskToList",def:"bitmaskToList(num)",docText:"Accepts an integer. Returns a string containing the list of powers of two that total the source number when summed. They are comma-separated without spaces in text format, in ascending order."},{name:"array",def:"array(v)",docText:"The -`Array` suffix can be appended to any aggregate function. In this case, the aggregate function takes arguments of the `Array(T)` type (arrays) instead of `T` type arguments. If the aggregate function accepts multiple arguments, this must be arrays of equal lengths. "},{name:"dictGetStringOrDefault",def:"dictGetStringOrDefault(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"greaterOrEquals",def:"greaterOrEquals(v)",docText:""},{name:"e",def:"e(v)",docText:"What to do when the amount of data exceeds one of the limits: `throw` or `break`. By default, throw."},{name:"runningDifference",def:"runningDifference(x)",docText:"Calculates the difference between consecutive values in the data block. \n\n Result of the function depends on the order of the data in the blocks. \n\n It works only inside of the each processed block of data. Data splitting in the blocks is not explicitly controlled by the user. "},{name:"not",def:"not(v)",docText:"See the section `IN operators`."},{name:"intHash64",def:"intHash64(v)",docText:"Calculates a 64-bit hash code from any type of integer. \n\n It works faster than intHash32. Average quality."},{name:"acos",def:"acos(x)",docText:"The arc cosine."},{name:"dictGetString",def:"dictGetString(v)",docText:""},{name:"and",def:"and(x, determinator)",docText:"This function works similarly to the `median` function - it approximates the median. However, in contrast to `median`, the result is deterministic and does not depend on the order of query execution. \n\n To achieve this, the function takes a second argument - the `determinator`. "},{name:"dictGetDate",def:"dictGetDate(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"dictGetFloat32",def:"dictGetFloat32(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"dictGetInt8",def:"dictGetInt8(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"dictGetUInt32",def:"dictGetUInt32(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"OSIn",def:"OSIn(lhs, rhs)",docText:"Checks whether the `lhs` operating system belongs to the `rhs` operating system."},{name:"arrayFirstIndex",def:"arrayFirstIndex(func, arr1, ...)",docText:"Returns the index of the first element in the `arr1` array for which `func` returns something other than 0."},{name:"ceil",def:"ceil(x[, N])",docText:"Returns the smallest round number that is greater than or equal to `x`. In every other way, it is the same as the `floor` function (see above)."},{name:"fragment",def:"fragment(v)",docText:"Removes the query-string and fragment identifier. The question mark and number sign are also removed."},{name:"dictGetUInt8",def:"dictGetUInt8(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"dictHas",def:"dictHas(v)",docText:"dictHas('dict_name', id) check the presence of a key in the dictionary. Returns a value of type UInt8, equal to 0, if there is no key and 1 if there is a key."},{name:"arraySum",def:"arraySum([func,] arr1, ...)",docText:"Returns the sum of the `func` values. If the function is omitted, it just returns the sum of the array elements."},{name:"emptyArrayDateTime",def:"emptyArrayDateTime(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"intDivOrZero",def:"intDivOrZero(a, b)",docText:"Differs from `intDiv` in that it returns zero when dividing by zero or when dividing a minimal negative number by minus one."},{name:"SEHierarchy",def:"SEHierarchy(v)",docText:"Accepts a UInt8 number - the ID of the search engine from the Yandex.Metrica dictionary. Returns an array with a hierarchy of search engines. Similar to the `regionHierarchy` function."},{name:"regionToContinent",def:"regionToContinent(id[, geobase])",docText:"Converts a region to a continent. In every other way, this function is the same as `regionToCity`. \n\n Example: `regionToContinent(toUInt32(213)) = 10001` converts Moscow (213) to Eurasia (10001)."},{name:"dictGetInt32",def:"dictGetInt32(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"toInt8",def:"toInt8(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"materialize",def:"materialize(x)",docText:"Turns a constant into a full column containing just one value. \n\n In ClickHouse, full columns and constants are represented differently in memory. Functions work differently for constant arguments and normal arguments (different code is executed), although the result is almost always the same. This function is for debugging this behavior."},{name:"regionToCountry",def:"regionToCountry(id[, geobase])",docText:"Converts a region to a country. In every other way, this function is the same as `regionToCity`. \n\n Example: `regionToCountry(toUInt32(213)) = 225` converts Moscow (213) to Russia (225)."},{name:"dictGetDateTime",def:"dictGetDateTime(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"xor",def:"xor(v)",docText:""},{name:"regionToCity",def:"regionToCity(id[, geobase])",docText:"Accepts a UInt32 number - the region ID from the Yandex geobase. If this region is a city or part of a city, it returns the region ID for the appropriate city. Otherwise, returns 0."},{name:"dictGetFloat64",def:"dictGetFloat64(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"timeSlot",def:"timeSlot(StartTime, Duration)",docText:"For a time interval starting at `StartTime` and continuing for `Duration` seconds, it returns an array of moments in time, consisting of points from this interval rounded down to the half hour."},{name:"toTime",def:"toTime(v)",docText:"Converts a date with time to the date of the start of the Unix Epoch, while preserving the time."},{name:"log2",def:"log2(x)",docText:"Accepts a numeric argument and returns a Float64 number close to the binary logarithm of the argument."},{name:"toRelativeHourNum",def:"toRelativeHourNum(v)",docText:"Converts a date with time or date to the number of the hour, starting from a certain fixed point in the past."},{name:"toRelativeDayNum",def:"toRelativeDayNum(v)",docText:"Converts a date with time or date to the number of the day, starting from a certain fixed point in the past."},{name:"toRelativeWeekNum",def:"toRelativeWeekNum(v)",docText:"Converts a date with time or date to the number of the week, starting from a certain fixed point in the past."},{name:"splitByString",def:"splitByString(separator, s)",docText:"The same as above, but it uses a string of multiple characters as the separator. The string must be non-empty."},{name:"currentDatabase",def:"currentDatabase()",docText:"Returns the name of the current database. \n\n You can use this function in table engine parameters in a CREATE TABLE query where you need to specify the database."},{name:"toRelativeMonthNum",def:"toRelativeMonthNum(v)",docText:"Converts a date with time or date to the number of the month, starting from a certain fixed point in the past."},{name:"visibleWidth",def:"visibleWidth(x)",docText:"Calculates the approximate width when outputting values to the console in text format (tab-separated). This function is used by the system for implementing Pretty formats."},{name:"bitShiftRight",def:"bitShiftRight(a, b)",docText:""},{name:"toRelativeYearNum",def:"toRelativeYearNum(v)",docText:"Converts a date with time or date to the number of the year, starting from a certain fixed point in the past."},{name:"toStartOfHour",def:"toStartOfHour(v)",docText:"Rounds down a date with time to the start of the hour."},{name:"halfMD5",def:"halfMD5(v)",docText:"Calculates the MD5 from a string. Then it takes the first 8 bytes of the hash and interprets them as UInt64 in big endian."},{name:"toStartOfFiveMinute",def:"toStartOfFiveMinute(v)",docText:"Rounds down a date with time to the start of the 5 minute (00:00, 00:05, 00:10...)."},{name:"toStartOfFifteenMinutes",def:"toStartOfFifteenMinutes(v)",docText:"Rounds down a date with time to the start of the 15 minute (00:00, 00:15, 00:30...)."},{name:"toUInt16OrZero",def:"toUInt16OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument."},{name:"toMonday",def:"toMonday(v)",docText:"Rounds down a date or date with time to the nearest Monday. \n\n Returns the date."},{name:"IPv6NumToString",def:"IPv6NumToString(x)",docText:"Accepts a FixedString(16) value containing the IPv6 address in binary format. Returns a string containing this address in text format. "},{name:"indexOf",def:"indexOf(arr, x)",docText:"Returns the index of the `x` element (starting from 1) if it is in the array, or 0 if it is not."},{name:"today",def:"today(v)",docText:"Accepts zero arguments and returns the current date at one of the moments of request execution. \n\n The same as `toDate(now())`."},{name:"emptyArrayToSingle",def:"emptyArrayToSingle(v)",docText:"Accepts an empty array as argument and returns an array of one element equal to the default value."},{name:"sleep",def:"sleep(seconds)",docText:"Sleeps `seconds` seconds on each data block. You can specify an integer or a floating-point number."},{name:"extract",def:"extract(params, name)",docText:"Parses the string in double quotes. The value is unescaped. If unescaping failed, it returns an empty string. Examples: "},{name:"emptyArrayInt8",def:"emptyArrayInt8(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"regionToName",def:"regionToName(id[, lang])",docText:"Accepts a UInt32 number - the region ID from the Yandex geobase. A string with the name of the language can be passed as a second argument. Supported languages are: ru, en, ua, uk, by, kz, tr. If the second argument is omitted, the language `ru` is used. "},{name:"concat",def:"concat(arr[, separator])",docText:"Concatenates strings from the array elements, using `separator` as the separator. \n\n `separator` is a string constant, an optional parameter. By default it is an empty string. \n\n Returns a string."},{name:"convertCharset",def:"convertCharset(s, from, to)",docText:"Returns a string with the data `s` (encoded as `from` charset) that was converted to the `to` charset."},{name:"toMonth",def:"toMonth(v)",docText:"Converts a date or date with time to a UInt8 number containing the month number (1-12)."},{name:"IPv6StringToNum",def:"IPv6StringToNum(s)",docText:"The reverse function of IPv6NumToString. If the IPv6 address has an invalid format, it returns a string of null bytes. \n\n HEX can be uppercase or lowercase."},{name:"emptyArrayString",def:"emptyArrayString(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"uptime",def:"uptime()",docText:"Returns server's uptime in seconds."},{name:"blockSize",def:"blockSize()",docText:"Gets the size of the block. \n\n In ClickHouse, queries are always run on blocks (sets of column parts). This function allows getting the size of the block that you called it for."},{name:"toInt64OrZero",def:"toInt64OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"pathFull",def:"pathFull(v)",docText:"Selects the path, but including query-string and fragment. Example: /top/news.html?page=2#comments"},{name:"emptyArrayDate",def:"emptyArrayDate(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"emptyArrayInt64",def:"emptyArrayInt64(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"toInt32OrZero",def:"toInt32OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"greater",def:"greater(v)",docText:""},{name:"emptyArrayInt32",def:"emptyArrayInt32(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"toString",def:"toString(str)",docText:"Accepts a FixedString(16) value containing the UUID in the binary format. Returns a readable string containing the UUID in the text format."},{name:"greatest",def:"greatest(a, b)",docText:"Returns the greatest element of a and b."},{name:"emptyArrayUInt64",def:"emptyArrayUInt64(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"emptyArrayUInt32",def:"emptyArrayUInt32(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"formatReadableSize",def:"formatReadableSize(x)",docText:"Gets a size (number of bytes). Returns a string that contains rounded size with the suffix (KiB, MiB etc.).\n\nExample:\n\nSELECT\n    arrayJoin([1, 1024, 1024*1024, 192851925]) AS f_bytes,\n    formatReadableSize(filesize_bytes) AS filesize\n┌─f_bytes-─┬─filesize───┐\n│        1 │ 1.00 B     │\n│     1024 │ 1.00 KiB   │\n│  1048576 │ 1.00 MiB   │\n│192851925 │ 183.92 MiB │\n└──────────┴────────────┘\n"},{name:"toInt16OrZero",def:"toInt16OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"emptyArrayUInt8",def:"emptyArrayUInt8(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"protocol",def:"protocol(v)",docText:"Selects the protocol. Examples: http, ftp, mailto, magnet..."},{name:"regionToPopulation",def:"regionToPopulation(id[, geobase])",docText:"Gets the population for a region. \n\n The population can be recorded in files with the geobase. See the section `External dictionaries`. \n\n If the population is not recorded for the region, it returns 0. \n\n In the Yandex geobase, the population might be recorded for child regions, but not for parent regions."},{name:"notIn",def:"notIn(v)",docText:"See the section `IN operators`."},{name:"position",def:"position(haystack, needle)",docText:"The same as `position`, but the position is returned in Unicode code points. Works under the assumption that the string contains a set of bytes representing a UTF-8 encoded text. If this assumption is not met, it returns some result (it doesn`t throw an exception). \n\n There's also positionCaseInsensitiveUTF8 function."},{name:"arrayElement",def:"arrayElement(arr, n), arr[n] operator",docText:"Get the element with the index `n` from the array `arr`. \n\n `n` should be any integer type. \n\n Indexes in an array begin from one. \n\n Negative indexes are supported - in this case, it selects the corresponding element numbered from the end. "},{name:"toStringCutToZero",def:"toStringCutToZero(s)",docText:"Accepts a String or FixedString argument. Returns a String that is cut to a first null byte occurrence."},{name:"log",def:"log(x)",docText:"Accepts a numeric argument and returns a Float64 number close to the decimal logarithm of the argument."},{name:"SEIn",def:"SEIn(lhs, rhs)",docText:"Checks whether the `lhs` search engine belongs to the `rhs` search engine."},{name:"replicate",def:"replicate(v)",docText:"Create a MergeTree table with a different name. Move all the data from the directory with the ReplicatedMergeTree table data to the new table`s data directory."},{name:"sipHash64",def:"sipHash64(v)",docText:"Calculates SipHash from a string. \n\n Accepts a String-type argument. Returns UInt64. \n\n SipHash is a cryptographic hash function. It works at least three times faster than MD5. For more information, see [https://131002.net/siphash/](https://131002.net/siphash/)"},{name:"emptyArrayUInt16",def:"emptyArrayUInt16(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"hex",def:"hex(str)",docText:"Accepts a string containing any number of hexadecimal digits, and returns a string containing the corresponding bytes. Supports both uppercase and lowercase letters A-F. The number of hexadecimal digits doesn`t have to be even."},{name:"regionToDistrict",def:"regionToDistrict(id[, geobase])",docText:"Converts a region to a federal district (type 4 in the geobase). In every other way, this function is the same as `regionToCity`. "},{name:"arrayFilter",def:"arrayFilter(func, arr1, ...)",docText:"Returns an array containing only the elements in `arr1` for which `func` returns something other than 0. \n\n Examples: \n\n SELECT arrayFilter(x -> x LIKE `%World%`, [`Hello`, `abc World`]) AS res "},{name:"toStartOfQuarter",def:"toStartOfQuarter(v)",docText:"Rounds down a date or date with time to the first day of the quarter. \n\n The first day of the quarter is either 1 January, 1 April, 1 July, or 1 October. Returns the date."},{name:"divide",def:"divide(a, b), a / b operator",docText:"Calculates the quotient of the numbers. The result type is always a floating-point type. \n\n It is not integer division. For integer division, use the `intDiv` function. \n\n When dividing by zero you get `inf`, `-inf`, or `nan`."},{name:"reverseUTF8",def:"reverseUTF8(v)",docText:"Reverses a sequence of Unicode code points, assuming that the string contains a set of bytes representing a UTF-8 text. Otherwise, it does something else (it doesn`t throw an exception)."},{name:"toDate",def:"toDate(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"emptyArrayFloat64",def:"emptyArrayFloat64(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"abs",def:"abs(s, c)",docText:"If the `s` string is non-empty and does not contain the `c` character at the end, it appends the `c` character to the end."},{name:"yesterday",def:"yesterday(v)",docText:"Accepts zero arguments and returns yesterday`s date at one of the moments of request execution. \n\n The same as `today() - 1`."},{name:"toMinute",def:"toMinute(v)",docText:"Converts a date with time to a UInt8 number containing the number of the minute of the hour (0-59)."},{name:"bitXor",def:"bitXor(a, b)",docText:""},{name:"minus",def:"minus(a, b), a - b operator",docText:"Calculates the difference. The result is always signed. \n\n You can also calculate whole numbers from a date or date with time. The idea is the same - see above for `plus`."},{name:"toDateTime",def:"toDateTime(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"modulo",def:"modulo(a, b), a % b operator",docText:"Calculates the remainder after division. \n\n If arguments are floating-point numbers, they are pre-converted to integers by dropping the decimal portion. The remainder is taken in the same sense as in C++. Truncated division is used for negative numbers. \n\n An exception is thrown when dividing by zero or when dividing a minimal negative number by minus one."},{name:"bitmaskToArray",def:"bitmaskToArray(num)",docText:"Accepts an integer. Returns an array of UInt64 numbers containing the list of powers of two that total the source number when summed. Numbers in the array are in ascending order."},{name:"negate",def:"negate(a), -a operator",docText:"Calculates a number with the reverse sign. The result is always signed."},{name:"emptyArrayFloat32",def:"emptyArrayFloat32(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"range",def:"range(N)",docText:"Returns an array of numbers from 0 to N-1. \n\n Just in case, an exception is thrown if arrays with a total length of more than 100,000,000 elements are created in a data block."},{name:"arrayAll",def:"arrayAll([func,] arr1, ...)",docText:"Returns 1 if `func` returns something other than 0 for all the elements in `arr`. Otherwise, it returns 0."},{name:"toInt32",def:"toInt32(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"unhex",def:"unhex(str)",docText:"Accepts a string containing any number of hexadecimal digits, and returns a string containing the corresponding bytes. Supports both uppercase and lowercase letters A-F. The number of hexadecimal digits doesn`t have to be even. If it is odd, the last digit is interpreted as the younger half of the 00-0F byte. If the argument string contains anything other than hexadecimal digits, some implementation-defined result is returned (an exception isn`t thrown). \n\n If you want to convert the result to a number, you can use the functions `reverse` and `reinterpretAsType`."},{name:"toFloat64",def:"toFloat64(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"bitAnd",def:"bitAnd(a, b)",docText:""},{name:"toStartOfYear",def:"toStartOfYear(v)",docText:"Rounds down a date or date with time to the first day of the year. \n\n Returns the date."},{name:"bitOr",def:"bitOr(a, b)",docText:""},{name:"SEToRoot",def:"SEToRoot(v)",docText:"Accepts a UInt8 number - the ID of the search engine from the Yandex.Metrica dictionary. If any search engine matches the passed number, it returns a UInt8 number - the ID of the corresponding root search engine (for example, it converts Yandex.Images to Yandex). Otherwise, returns 0."},{name:"toRelativeMinuteNum",def:"toRelativeMinuteNum(v)",docText:"Converts a date with time or date to the number of the minute, starting from a certain fixed point in the past."},{name:"visitParamExtractInt",def:"visitParamExtractInt(params, name)",docText:"The same as for Int64."},{name:"emptyArrayInt16",def:"emptyArrayInt16(v)",docText:"Accepts zero arguments and returns an empty array of the appropriate type."},{name:"visitParamExtractString",def:"visitParamExtractString(params, name)",docText:"Parses the string in double quotes. The value is unescaped. If unescaping failed, it returns an empty string. "},{name:"arrayEnumerateUniq",def:"arrayEnumerateUniq(arr, ...)",docText:"Returns an array the same size as the source array, indicating for each element what its position is among elements with the same value. "},{name:"visitParamExtractUInt",def:"visitParamExtractUInt(params, name)",docText:"Parses UInt64 from the value of the field named `name`. If this is a string field, it tries to parse a number from the beginning of the string. If the field doesn`t exist, or it exists but doesn`t contain a number, it returns 0."},{name:"toTypeName",def:"toTypeName(x)",docText:"Gets the type name. Returns a string containing the type name of the passed argument."},{name:"empty",def:"empty(v)",docText:"Accepts an empty array as argument and returns an array of one element equal to the default value."},{name:"multiply",def:"multiply(a, b), a * b operator",docText:"Calculates the product of the numbers."},{name:"has",def:"has('database', 'table', 'column')",docText:"Accepts constant String columns - database name, table name and column name. Returns constant UInt8 value, equal to 1 if column exists, otherwise 0.\n\n If table doesn't exist than exception is thrown. \n\n For elements of nested data structure function checks existence of column. For nested data structure 0 is returned."},{name:"bitNot",def:"bitNot(a)",docText:""},{name:"lessOrEquals",def:"lessOrEquals(v)",docText:"greaterOrEquals, >= operator"},{name:"reinterpretAsInt64",def:"reinterpretAsInt64(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"IPv4NumToString",def:"IPv4NumToString(num)",docText:"Similar to IPv4NumToString, but using `xxx` instead of the last octet. "},{name:"bitShiftLeft",def:"bitShiftLeft(a, b)",docText:""},{name:"dictGetInt16",def:"dictGetInt16(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"toUInt32OrZero",def:"toUInt32OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"regionIn",def:"regionIn(lhs, rhs[, geobase])",docText:"Checks whether a `lhs` region belongs to a `rhs` region. Returns a UInt8 number equal to 1 if it belongs, or 0 if it doesn`t belong. \n\n The relationship is reflexive - any region also belongs to itself."},{name:"reinterpretAsUInt8",def:"reinterpretAsUInt8(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"dictIsIn",def:"dictIsIn(v)",docText:"`dictIsIn(`dict_name`, child_id, ancestor_id)` \n\n - For the `dict_name` hierarchical dictionary, finds out whether the `child_id` key is located inside `ancestor_id` (or matches `ancestor_id`). Returns UInt8."},{name:"toSecond",def:"toSecond(v)",docText:"Converts a date with time to a UInt8 number containing the number of the second in the minute (0-59). \n\n Leap seconds are not accounted for."},{name:"least",def:"least(a, b)",docText:"Returns the least element of a and b."},{name:"countEqual",def:"countEqual(arr, x)",docText:"Returns the number of elements in the array equal to `x`. Equivalent to `arrayCount(elem -> elem = x, arr)`."},{name:"IPv4StringToNum",def:"IPv4StringToNum(s)",docText:"The reverse function of IPv4NumToString. If the IPv4 address has an invalid format, it returns 0."},{name:"replaceRegexpAll",def:"replaceRegexpAll(haystack, pattern, replacement)",docText:"This does the same thing, but replaces all the occurrences"},{name:"SHA224",def:"SHA224(v)",docText:"Calculates SHA-1, SHA-224, or SHA-256 from a string and returns the resulting set of bytes as FixedString(20), FixedString(28), or FixedString(32). \n\n The function works fairly slowly (SHA-1 processes about 5 million short strings per second per processor core, while SHA-224 and SHA-256 process about 2.2 million). "},{name:"URLHash",def:"URLHash(url[, N])",docText:"A fast, decent-quality non-cryptographic hash function for a string obtained from a URL using some type of normalization. \n\n URLHash(s) - Calculates a hash from a string without one of the trailing symbols /,? or # at the end, if present"},{name:"equals",def:"equals(v)",docText:"greaterOrEquals, >= operator"},{name:"plus",def:"plus(a, b), a + b operator",docText:"Calculates the sum of the numbers. \n\n You can also add whole numbers with a date or date and time. In the case of a date, adding a whole number means adding the corresponding number of days. For a date with time, it means adding the corresponding number of seconds."},{name:"less",def:"less(v)",docText:"greaterOrEquals, >= operator"},{name:"regionHierarchy",def:"regionHierarchy(id[, geobase])",docText:"Accepts a UInt32 number - the region ID from the Yandex geobase. Returns an array of region IDs consisting of the passed region and all parents along the chain. \n\n Example: `regionHierarchy(toUInt32(213)) = [213,1,3,225,10001,10000]`."},{name:"toUInt64OrZero",def:"toUInt64OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"rowNumberInAllBlocks",def:"rowNumberInAllBlocks()",docText:"Returns an incremental row number within all blocks that were processed by this function."},{name:"toDayOfWeek",def:"toDayOfWeek(v)",docText:"Converts a date or date with time to a UInt8 number containing the number of the day of the week (Monday is 1, and Sunday is 7)."},{name:"bar",def:"bar(v)",docText:"Allows building a unicode-art diagram. \n\n bar(x, min, max, width) - Draws a band with a width proportional to (x - min) and equal to `width` characters when x"},{name:"if",def:"if(v)",docText:"The suffix -`If` can be appended to the name of any aggregate function. In this case, the aggregate function accepts an extra argument - a condition (Uint8 type). "},{name:"regionToArea",def:"regionToArea(id[, geobase])",docText:"Converts a region to an area (type 5 in the geobase). In every other way, this function is the same as `regionToCity`."},{name:"dictGetUInt16",def:"dictGetUInt16(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"toUInt8",def:"toUInt8(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"toUInt16",def:"toUInt16(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"path",def:"path(URL)",docText:"- The same thing, but without the protocol and host in the result. The / element (root) is not included."},{name:"extractURLParameters",def:"extractURLParameters(URL)",docText:"- Gets an array of name=value strings corresponding to the URL parameters. The values are not decoded in any way."},{name:"OSHierarchy",def:"OSHierarchy(v)",docText:"Accepts a UInt8 number - the ID of the operating system from the Yandex.Metrica dictionary. Returns an array with a hierarchy of operating systems. Similar to the `regionHierarchy` function."},{name:"cutQueryStringAndFragment",def:"cutQueryStringAndFragment(v)",docText:"Removes the query-string and fragment identifier. The question mark and number sign are also removed."},{name:"timeSlots",def:"timeSlots(StartTime, Duration)",docText:"For a time interval starting at `StartTime` and continuing for `Duration` seconds, it returns an array of moments in time, consisting of points from this interval rounded down to the half hour. \n\n For example, `timeSlots(toDateTime(`2012-01-01 12:20:00`), toUInt32(600)) = [toDateTime(`2012-01-01 12:00:00`), toDateTime(`2012-01-01 12:30:00`)]`. \n\n This is necessary for searching for pageviews in the corresponding session."},{name:"toUInt32",def:"toUInt32(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"toStartOfMinute",def:"toStartOfMinute(v)",docText:"Rounds down a date with time to the start of the minute."},{name:"version",def:"version()",docText:"Returns server's version as a string."},{name:"toUInt64",def:"toUInt64(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"toInt16",def:"toInt16(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"reinterpretAsInt16",def:"reinterpretAsInt16(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"toInt64",def:"toInt64(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"toFixedString",def:"toFixedString(s, N)",docText:"Converts a String type argument to a FixedString(N) type (a string with fixed length N). N must be a constant. If the string has fewer bytes than N, it is passed with null bytes to the right. If the string has more bytes than N, an exception is thrown."},{name:"toFloat32",def:"toFloat32(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"dictGetHierarchy",def:"dictGetHierarchy(v)",docText:"`dictGetHierarchy(`dict_name`, id)` \n\n - For the `dict_name` hierarchical dictionary, returns an array of dictionary keys starting from `id` and continuing along the chain of parent elements. Returns Array(UInt64)."},{name:"dictGetInt64",def:"dictGetInt64(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"CAST",def:"CAST(x, t)",docText:"Casts `x` to the `t` data type. \n\n The syntax `CAST(x AS t)` is also supported. \n"},{name:"toRelativeSecondNum",def:"toRelativeSecondNum(v)",docText:"Converts a date with time or date to the number of the second, starting from a certain fixed point in the past."},{name:"toUInt8OrZero",def:"toUInt8OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"toStartOfMonth",def:"toStartOfMonth(v)",docText:"Rounds down a date or date with time to the first day of the month. \n\n Returns the date."},{name:"rand64",def:"rand64(v)",docText:"Returns a pseudo-random UInt64 number, evenly distributed among all UInt64-type numbers. \n\n Uses a linear congruential generator."},{name:"toInt8OrZero",def:"toInt8OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"toFloat32OrZero",def:"toFloat32OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"toYear",def:"toYear(v)",docText:"Converts a date or date with time to a UInt16 number containing the year number (AD)."},{name:"atan",def:"atan(x)",docText:"The arc tangent."},{name:"toFloat64OrZero",def:"toFloat64OrZero(v)",docText:"Functions for converting between numbers, strings (but not fixed strings), dates, and dates with times. All these functions accept one argument. "},{name:"arrayEnumerate",def:"arrayEnumerate(arr, ...)",docText:"Returns an array the same size as the source array, indicating for each element what its position is among elements with the same value."},{name:"toDayOfMonth",def:"toDayOfMonth(v)",docText:"Converts a date or date with time to a UInt8 number containing the number of the day of the month (1-31)."},{name:"dictGetUInt64",def:"dictGetUInt64(v)",docText:"dictGetT('dict_name', 'attr_name', id) Gets the value of the 'attr_name' attribute from the 'dict_name' dictionary by the 'id' key. 'dict_name' and 'attr_name' are constant strings. 'id' must be UInt64. If the 'id' key is not in the dictionary, it returns the default value set in the dictionary definition."},{name:"IPv4NumToStringClassC",def:"IPv4NumToStringClassC(num)",docText:"Similar to IPv4NumToString, but using `xxx` instead of the last octet. "},{name:"reinterpretAsString",def:"reinterpretAsString(v)",docText:"This function accepts a number or date or date with time, and returns a string containing bytes representing the corresponding value in host order (little endian). Null bytes are dropped from the end. For example, a UInt32 type value of 255 is a string that is one byte long."},{name:"toHour",def:"toHour(v)",docText:"Converts a date with time to a UInt8 number containing the number of the hour in 24-hour time (0-23). \n\n This function assumes that if clocks are moved ahead, it is by one hour and occurs at 2 a.m., and if clocks are moved back, it is by one hour and occurs at 3 a.m. (which is not always true - even in Moscow the clocks were once changed at a different time)."},{name:"ignore",def:"ignore(...)",docText:"A function that accepts any arguments and always returns 0. \n\n However, the argument is still calculated. This can be used for benchmarks."},{name:"arrayJoin",def:"arrayJoin(v)",docText:"This is a very unusual function.\n\nNormal functions don't change a set of rows, but just change the values in each row (map). Aggregate functions compress a set of rows (fold or reduce). The 'arrayJoin' function takes each row and generates a set of rows (unfold).\n\nThis function takes an array as an argument, and propagates the source row to multiple rows for the number of elements in the array. All the values in columns are simply copied, except the values in the column where this function is applied - it is replaced with the corresponding array value.\n\nA query can use multiple 'arrayJoin' functions. In this case, the transformation is performed multiple times.\n\nNote the ARRAY JOIN syntax in the SELECT query, which provides broader possibilities."},{name:"length",def:"length(v)",docText:"Returns the length of a string in Unicode code points (not in characters), assuming that the string contains a set of bytes that make up UTF-8 encoded text. If this assumption is not met, it returns some result (it doesn`t throw an exception). \n\n The result type is UInt64."},{name:"tuple",def:"tuple(tuple, n), operator x.N",docText:"A function that allows getting columns from a tuple. \n\n `N` is the column index, starting from 1. `N` must be a constant. `N` must be a strict postive integer no greater than the size of the tuple. \n\n There is no cost to execute the function."},{name:"extractURLParameterNames",def:"extractURLParameterNames(URL)",docText:"- Gets an array of name=value strings corresponding to the names of URL parameters. The values are not decoded in any way."},{name:"tupleElement",def:"tupleElement(tuple, n), operator x.N",docText:"A function that allows getting columns from a tuple. \n\n `N` is the column index, starting from 1. `N` must be a constant. `N` must be a strict postive integer no greater than the size of the tuple. \n\n There is no cost to execute the function."},{name:"in",def:"in(v)",docText:"What to do when the amount of data exceeds one of the limits: `throw` or `break`. By default, throw."},{name:"globalIn",def:"globalIn(v)",docText:"See the section `IN operators`."},{name:"isFinite",def:"isFinite(x)",docText:"Accepts Float32 and Float64 and returns UInt8 equal to 1 if the argument is not infinite and not a NaN, otherwise 0."},{name:"isNaN",def:"isNaN(x)",docText:"Accepts Float32 and Float64 and returns UInt8 equal to 1 if the argument is a NaN, otherwise 0."},{name:"isInfinite",def:"isInfinite(x)",docText:"Accepts Float32 and Float64 and returns UInt8 equal to 1 if the argument is infinite, otherwise 0. \n\n Note that 0 is returned for a NaN."},{name:"transform",def:"transform(v)",docText:"Transforms a value according to the explicitly defined mapping of some elements to other ones. \n\n There are two variations of this function: \n\n 1. `transform(x, array_from, array_to, default)` "},{name:"rand",def:"rand(v)",docText:"Returns a pseudo-random UInt64 number, evenly distributed among all UInt64-type numbers. \n\n Uses a linear congruential generator."},{name:"reinterpretAsUInt16",def:"reinterpretAsUInt16(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"pi",def:"pi(v)",docText:"Maximum pipeline depth. Corresponds to the number of transformations that each data block goes through during query processing. Counted within the limits of a single server. If the pipeline depth is greater, an exception is thrown. By default, 1000."},{name:"reinterpretAsUInt32",def:"reinterpretAsUInt32(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"reinterpretAsUInt64",def:"reinterpretAsUInt64(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"reinterpretAsInt8",def:"reinterpretAsInt8(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"upperUTF8",def:"upperUTF8(v)",docText:"Converts a string to uppercase, assuming the string contains a set of bytes that make up a UTF-8 encoded text. It doesn`t detect the language. So for Turkish the result might not be exactly correct. "},{name:"reinterpretAsInt32",def:"reinterpretAsInt32(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"reinterpretAsFloat32",def:"reinterpretAsFloat32(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"reinterpretAsFloat64",def:"reinterpretAsFloat64(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"reinterpretAsDate",def:"reinterpretAsDate(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"reinterpretAsDateTime",def:"reinterpretAsDateTime(v)",docText:"Functions accept a string and interpret the bytes placed at the beginning of the string as a number in host order (little endian). If the string isn't long enough, the functions work as if the string is padded with the necessary number of null bytes. If the string is longer than needed, the extra bytes are ignored. A date is interpreted as the number of days since the beginning of the Unix Epoch, and a date with time is interpreted as the number of seconds since the beginning of the Unix Epoch."},{name:"roundToExp2",def:"roundToExp2(num)",docText:"Accepts a number. If the number is less than one, it returns 0. Otherwise, it rounds the number down to the nearest (whole non-negative) degree of two."},{name:"upper",def:"upper(v)",docText:"Converts a string to uppercase, assuming the string contains a set of bytes that make up a UTF-8 encoded text. It doesn`t detect the language. So for Turkish the result might not be exactly correct."},{name:"positionUTF8",def:"positionUTF8(haystack, needle)",docText:"The same as `position`, but the position is returned in Unicode code points. Works under the assumption that the string contains a set of bytes representing a UTF-8 encoded text. If this assumption is not met, it returns some result (it doesn`t throw an exception). \n\n There's also positionCaseInsensitiveUTF8 function."},{name:"roundDuration",def:"roundDuration(num)",docText:"Accepts a number. If the number is less than one, it returns 0. Otherwise, it rounds the number down to numbers from the set: 1, 10, 30, 60, 120, 180, 240, 300, 600, 1200, 1800, 3600, 7200, 18000, 36000. This function is specific to Yandex.Metrica and used for implementing the report on session length."},{name:"roundAge",def:"roundAge(num)",docText:"Accepts a number. If the number is less than 18, it returns 0. Otherwise, it rounds the number down to numbers from the set: 18, 25, 35, 45. This function is specific to Yandex.Metrica and used for implementing the report on user age."},{name:"round",def:"round(num)",docText:"Accepts a number. If the number is less than 18, it returns 0. Otherwise, it rounds the number down to numbers from the set: 18, 25, 35, 45. This function is specific to Yandex.Metrica and used for implementing the report on user age."},{name:"floor",def:"floor(x[, N])",docText:"Returns a rounder number that is less than or equal to `x`."},{name:"notEmpty",def:"notEmpty(v)",docText:"Returns 0 for an empty array, or 1 for a non-empty array. \n\n The result type is UInt8. \n\n The function also works for strings."},{name:"lengthUTF8",def:"lengthUTF8(v)",docText:"Returns the length of a string in Unicode code points (not in characters), assuming that the string contains a set of bytes that make up UTF-8 encoded text. If this assumption is not met, it returns some result (it doesnt throw an exception). \n\n The result type is UInt64."},{name:"lower",def:"lower(v)",docText:"Converts a string to lowercase, assuming the string contains a set of bytes that make up a UTF-8 encoded text. It doesn`t detect the language.  "},{name:"lowerUTF8",def:"lowerUTF8(v)",docText:"Converts a string to lowercase, assuming the string contains a set of bytes that make up a UTF-8 encoded text. It doesn`t detect the language. "},{name:"reverse",def:"reverse(v)",docText:"Reverses a sequence of Unicode code points, assuming that the string contains a set of bytes representing a UTF-8 text. Otherwise, it does something else (it doesn`t throw an exception)."},{name:"URLPathHierarchy",def:"URLPathHierarchy(URL)",docText:"- The same thing, but without the protocol and host in the result. The / element (root) is not included. "},{name:"substringUTF8",def:"substringUTF8(s, offset, length)",docText:"The same as `substring`, but for Unicode code points. Works under the assumption that the string contains a set of bytes representing a UTF-8 encoded text. If this assumption is not met, it returns some result (it doesn`t throw an exception)."},{name:"appendTrailingCharIfAbsent",def:"appendTrailingCharIfAbsent(s, c)",docText:"If the `s` string is non-empty and does not contain the `c` character at the end, it appends the `c` character to the end."},{name:"alphaTokens",def:"alphaTokens(s)",docText:"Selects substrings of consecutive bytes from the range a-z and A-Z. \n\n Returns an array of selected substrings."},{name:"splitByChar",def:"splitByChar(separator, s)",docText:"Splits a string into substrings, using `separator` as the separator. \n\n `separator` must be a string constant consisting of exactly one character. \n\n Returns an array of selected substrings"},{name:"arrayStringConcat",def:"arrayStringConcat(arr[, separator])",docText:"Concatenates strings from the array elements, using `separator` as the separator. \n\n `separator` is a string constant, an optional parameter. By default it is an empty string. \n\n Returns a string."},{name:"replaceAll",def:"replaceAll(haystack, pattern, replacement)",docText:"Replaces all occurrences of the `pattern` substring in `haystack` with the `replacement` substring."},{name:"replaceRegexpOne",def:"replaceRegexpOne(haystack, pattern, replacement)",docText:"Replacement using the `pattern` regular expression. A re2 regular expression. Replaces only the first occurrence, if it exists. \n\n A pattern can be specified as `replacement`. "},{name:"cbrt",def:"cbrt(x)",docText:"Accepts a numeric argument and returns a Float64 number close to the cubic root of the argument."},{name:"match",def:"match(pattern)(time, cond1, cond2, ...)",docText:"Pattern matching for event chains. \n\n `pattern` is a string containing a pattern to match. The pattern is similar to a regular expression."},{name:"cutURLParameter",def:"cutURLParameter(URL, name)",docText:"Removes the URL parameter named `name`, if present. This function works under the assumption that the parameter name is encoded in the URL exactly the same way as in the passed argument."},{name:"like",def:"like(haystack, pattern), haystack NOT LIKE pattern operator",docText:"The same thing as `like`, but negative."},{name:"domain",def:"domain(v)",docText:"- Selects the part of the domain that includes top-level subdomains up to the `first significant subdomain` (see the explanation above). \n\n For example, cutToFirstSignificantSubdomain(`https://news.yandex.com.tr/`) = `yandex.com.tr`."},{name:"domainWithoutWWW",def:"domainWithoutWWW(v)",docText:"- Selects the domain and removes no more than one `www.` from the beginning of it, if present."},{name:"firstSignificantSubdomain",def:"firstSignificantSubdomain(v)",docText:"- Selects the part of the domain that includes top-level subdomains up to the `first significant subdomain` (see the explanation above). \n\n For example, cutToFirstSignificantSubdomain(`https://news.yandex.com.tr/`) = `yandex.com.tr`."},{name:"queryString",def:"queryString(v)",docText:"Removes the query-string and fragment identifier. The question mark and number sign are also removed."},{name:"queryStringAndFragment",def:"queryStringAndFragment(v)",docText:"Removes the query-string and fragment identifier. The question mark and number sign are also removed."},{name:"extractURLParameter",def:"extractURLParameter(URL)",docText:"- Gets an array of name=value strings corresponding to the names of URL parameters. The values are not decoded in any way."},{name:"URLHierarchy",def:"URLHierarchy(URL)",docText:"- Gets an array containing the URL trimmed to the `/`, `?` characters in the path and query-string.  Consecutive separator characters are counted as one. The cut is made in the position after all the consecutive separator characters. Example:"},{name:"cutToFirstSignificantSubdomain",def:"cutToFirstSignificantSubdomain(v)",docText:"- Selects the part of the domain that includes top-level subdomains up to the `first significant subdomain` (see the explanation above). \n\n For example, cutToFirstSignificantSubdomain(`https://news.yandex.com.tr/`) = `yandex.com.tr`."},{name:"cutWWW",def:"cutWWW(v)",docText:"Removes no more than one `www.` from the beginning of the URL`s domain, if present."},{name:"cutQueryString",def:"cutQueryString(v)",docText:"Removes the query-string and fragment identifier. The question mark and number sign are also removed."},{name:"cutFragment",def:"cutFragment(v)",docText:"Removes the fragment identifier. The number sign is also removed."},{name:"visitParamHas",def:"visitParamHas(params, name)",docText:"Checks whether there is a field with the `name` name."},{name:"visitParamExtractFloat",def:"visitParamExtractFloat(params, name)",docText:"The same as for Float64."},{name:"visitParamExtractBool",def:"visitParamExtractBool(params, name)",docText:"Parses a true/false value. The result is UInt8."},{name:"visitParamExtractRaw",def:"visitParamExtractRaw(params, name)",docText:"Returns the value of a field, including separators."},{name:"exp",def:"exp(x)",docText:"Accepts a numeric argument and returns a Float64 number close to 10 in power of x."},{name:"exp2",def:"exp2(x)",docText:"Accepts a numeric argument and returns a Float64 number close to 2 in power of x."},{name:"exp10",def:"exp10(x)",docText:"Accepts a numeric argument and returns a Float64 number close to 10 in power of x."},{name:"tgamma",def:"tgamma(x)",docText:"Gamma function."},{name:"log10",def:"log10(x)",docText:"Accepts a numeric argument and returns a Float64 number close to the decimal logarithm of the argument."},{name:"sqrt",def:"sqrt(x)",docText:"Accepts a numeric argument and returns a Float64 number close to the square root of the argument."},{name:"erf",def:"erf(v)",docText:"What to do when the amount of data exceeds one of the limits: `throw` or `break`. By default, throw."},{name:"erfc",def:"erfc(x)",docText:"Accepts a numeric argument and returns a Float64 number close to 1 - erf(x), but without loss of precision for large `x` values."},{name:"lgamma",def:"lgamma(x)",docText:"The logarithm of the gamma function."},{name:"sin",def:"sin(x)",docText:"Accepts Float32 and Float64 and returns UInt8 equal to 1 if the argument is infinite, otherwise 0. \n\n Note that 0 is returned for a NaN."},{name:"cos",def:"cos(x)",docText:"The arc cosine."},{name:"tan",def:"tan(x)",docText:"The arc tangent."},{name:"pow",def:"pow(x, y)",docText:"x in power of y."},{name:"JSONExtract",def:"JSONExtract(json[, indices_or_keys…], Return_type)",docText:"Parses a JSON and extract a value of the given ClickHouse data type."}],S=r,b.map((e=>v(e.name,S,e.def,f,e.docText)))),...((e,t)=>[{name:"$table",def:"$table",docText:"Replaced with selected table name from Query Builder"},{name:"$dateCol",def:"$dateCol",docText:"Replaced with `Date:Col` value from Query Builder"},{name:"$dateTimeCol",def:"$dateTimeCol",docText:"Replaced with `Column:DateTime` or `Column:TimeStamp` value from Query Builder"},{name:"$from",def:"$from",docText:"Replaced with timestamp/1000 value of selected `Time Range:From`"},{name:"$to",def:"$to",docText:"Replaced with timestamp/1000 value of selected `Time Range:To`"},{name:"$interval",def:"$interval",docText:"Replaced with selected `Group by time interval` value (as a number of seconds)"},{name:"$timeFilter",def:"$timeFilter",docText:"Replaced with currently selected `Time Range`. Requires `Column:Date` and `Column:DateTime` or `Column:TimeStamp` or `Column:DateTime64` to be selected"},{name:"$timeFilterMs",def:"$timeFilterMs",docText:"Replaced with currently selected `Time Range` with Millisecond precision. Requires `Column:DateTime64` to be selected"},{name:"$timeFilterByColumn",def:"$timeFilterByColumn(column_name)",docText:"Replaced with currently selected `Time Range`. Requires column name with type `Date` and `DateTime` or `DateTime64`"},{name:"$timeFilter64ByColumn",def:"$timeFilter64ByColumn(column_name)",docText:"Replaced with currently selected `Time Range` with sub-seconds values. Requires column name with type `DateTime64`"},{name:"$timeSeries",def:"$timeSeries",docText:"Replaced with special ClickHouse construction to convert results as time-series data. Use it as `SELECT $timeSeries...`. Require `Column:DateTime` or `Column:TimeStamp` or `Column:DateTime64` to be selected"},{name:"$timeSeriesMs",def:"$timeSeriesMs",docText:"Replaced with special ClickHouse construction to convert results as time-series data with Milliseconds precision. Use it as `SELECT $timeSeriesMs...`. Require `Column:DateTime64` to be selected"},{name:"$naturalTimeSeries",def:"$naturalTimeSeries",docText:"Replaced with special ClickHouse construction to convert results as time-series data in logical/natural units. Use it as `SELECT $timeSeries...`. Require `Column:DateTime` or `Column:TimeStamp` to be selected"},{name:"$rate",def:"$rate(cols...)",docText:"Converts query results as `change rate per interval`. Can be used to display changes-per-second.\nExample:\n $rate(countIf(Type = 200) AS good, countIf(Type != 200) AS bad) FROM requests"},{name:"$perSecond",def:"$perSecond(cols...)",docText:"Similar to $rate macros for Counter-like type of metrics which are only grow. The macros will chose the maxvalue for each column in every timeSlot and calculate the changes.\nExample:\n $perSecond(total_requests) FROM requests"},{name:"$delta",def:"$delta(cols...)",docText:"The macros will chose the max value for each column in every timeSlot and calculate the delta. Could have negative values\nExample:\n $delta(total_requests) FROM requests"},{name:"$increase",def:"$increase(cols...)",docText:"The macros will chose the max value for each column in every timeSlot and calculate the delta. Have only positive values\nExample:\n $increase(total_requests) FROM requests"},{name:"$perSecondColumns",def:"$perSecondColumns(key, value)",docText:"A combination of $perSecond and $columns\nExample:\n $perSecondColumns(type, total) FROM requests"},{name:"$perSecondColumnsAggregated(key, subkey, aggFunction1, value1, aggFunctionN, valueN) - if you need to calculate `perSecond` for higher cardinality dimension and then aggregate by lower cardinality dimension",def:"$perSecondColumnsAggregated(key, subkey, aggFunction1, value1, aggFunctionN, valueN)",docText:"if you need to calculate `$perSecond` for higher cardinality dimension and then aggregate by lower cardinality dimension"},{name:"$deltaColumns",def:"$deltaColumns(key, value)",docText:"A combination of $delta and $columns\nExample:\n $deltaColumns(type, total) FROM requests"},{name:"$deltaColumnsAggregated",def:"$deltaColumnsAggregated(key, subkey, aggFunction1, value1, aggFunctionN, valueN)",docText:"if you need to calculate `$delta` for higher cardinality dimension and then aggregate by lower cardinality dimension"},{name:"$increaseColumns",def:"$increaseColumns(key, value)",docText:"A combination of $increase and $columns\nExample:\n $increaseColumns(type, total) FROM requests"},{name:"$increaseColumnsAggregated",def:"$increaseColumnsAggregated(key, subkey, aggFunction1, value1, ... aggFunctionN, valueN)",docText:"if you need to calculate `$increase` for higher cardinality dimension and then aggregate by lower cardinality dimension"},{name:"$columns",def:"$columns(key, value)",docText:"Query values as array of [key, value], where key will be used as label. Can be used to display multiple lines at graph\nExample:\n $columns(OSName, count(*) c) FROM requests"},{name:"$columnsMs",def:"$columnsMs(key, value)",docText:"Query values as array of [key, value], where key will be used as label. Can be used to display multiple lines at graph\nExample:\n $columnsMs(OSName, count(*) c) FROM requests"},{name:"$rateColumns",def:"$rateColumns(key, value)",docText:"A combination of `$columns` and `$rate` .\nExample:\n $rateColumns(OS, count(*) c) FROM requests"},{name:"$rateColumnsAggregated",def:"$rateColumnsAggregated(key, subkey, aggFunction1, value1, aggFunctionN, valueN)",docText:"if you need calculate `$rate` for higher cardinality dimension and then aggregate by lower cardinality dimension"},{name:"$unescape",def:"$unescape($variable)",docText:"Unescapes variable value by removing single quotes\nExample:\n SELECT $unescape($column) FROM requests WHERE $unescape($column) = 5"},{name:"$adhoc",def:"$adhoc",docText:"Replaced with a rendered ad-hoc filter expression, or `1` if no ad-hoc filters exist\nExample:\n SELECT * FROM (select a, b from table2 WHERE $adhoc) ORDER BY a"},{name:"$conditionalTest",def:"$conditionalTest(SQL predicate,$variable)",docText:"Will add `SQL predicate` filter expression only if $variable have non empty value\nExample:\nSELECT $timeSeries as t, count() FROM $table WHERE $timeFilter\n  $conditionalTest(AND toLowerCase(column) in ($var),$var)\n  $conditionalTest(AND toLowerCase(column2) like '%$text%',$text)\n  $conditionalTest(\n    AND toLowerCase(column3) ilike ${text_with_single_quote:sqlstring},\n    $text_with_single_quote\n  )\nGROUP BY t\nORDER BY t"}].map((e=>v(e.name,t,e.def,g,e.docText))))(0,i),...p(Ei,s),...p(wi,o),...p(Di,l),...p(c,o),...p(h,o),...p(d,o),...p(m,u),...p(e.map((e=>`${e}`)),i)]}}}))(e,t),{theme:ki,language:Fi,editor:Ai}};function $i(e,t,n,a,r,i,s){try{var o=e[i](s),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,r)}const Mi=e=>{const[t,n]=(0,gi.useState)(null);return(0,gi.useEffect)((()=>{const t=(a=function*(){const t=`altinity_systemDatabases_${e.uid}`,a=localStorage.getItem(t),r=new Date;if(a){const{expiry:e,result:t}=JSON.parse(a);if(r.getTime()<e)return void n(t)}try{const a=yield e.metricFindQuery("SELECT name FROM system.tables\nWHERE database='system' AND name IN (\n'functions','table_engines','formats',\n'table_functions','data_type_families','merge_tree_settings',\n'settings','clusters','macros','storage_policies','aggregate_function_combinators',\n'database','tables','dictionaries','columns'\n)"),i=r.getTime()+6e5;localStorage.setItem(t,JSON.stringify({expiry:i,result:a.map((e=>e.text))})),n(a.map((e=>e.text)))}catch(e){n([]),console.error("Failed to fetch data:",e)}},r=function(){var e=this,t=arguments;return new Promise((function(n,r){var i=a.apply(e,t);function s(e){$i(i,n,r,s,o,"next",e)}function o(e){$i(i,n,r,s,o,"throw",e)}s(void 0)}))},function(){return r.apply(this,arguments)});var a,r;t()}),[e]),t};function _i(e,t,n,a,r,i,s){try{var o=e[i](s),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,r)}const Ui=e=>{const[t,n]=(0,gi.useState)(null);return(0,gi.useEffect)((()=>{const t=(a=function*(){const t=`altinity_autocomplete_${e.uid}`,a=localStorage.getItem(t),r=new Date;if(a){const{expiry:e,result:t}=JSON.parse(a);if(r.getTime()<e)return void n(t)}try{const a=yield e.metricFindQuery("\nSELECT DISTINCT arrayJoin(extractAll(name, '[\\\\w_]{2,}')) AS completion, color \nFROM (\n  SELECT name, 'identifier' AS color FROM system.functions \n  UNION ALL \n  SELECT name, 'keyword' AS color FROM system.table_engines \n  UNION ALL \n  SELECT name, 'keyword' AS color FROM system.formats \n  UNION ALL \n  SELECT name, 'identifier' AS color FROM system.table_functions \n  UNION ALL \n  SELECT name, 'identifier' AS color FROM system.data_type_families \n  UNION ALL \n  SELECT name, 'identifier' AS color FROM system.merge_tree_settings \n  UNION ALL \n  SELECT name, 'identifier' AS color FROM system.settings \n  UNION ALL \n  SELECT cluster, 'string' AS color FROM system.clusters \n  UNION ALL \n  SELECT macro, 'string' AS color FROM system.macros \n  UNION ALL \n  SELECT policy_name, 'string' AS color FROM system.storage_policies \n  UNION ALL \n  SELECT concat(func.name, comb.name), 'identifier' AS color FROM system.functions AS func \n  CROSS JOIN system.aggregate_function_combinators AS comb WHERE is_aggregate \n  UNION ALL \n  SELECT name, 'identifier' AS color FROM system.databases \n  UNION ALL \n  SELECT DISTINCT name, 'identifier' AS color FROM system.tables \n  UNION ALL \n  SELECT DISTINCT name, 'identifier' AS color FROM system.dictionaries \n  UNION ALL \n  SELECT DISTINCT name, 'identifier' AS color FROM system.columns\n) WHERE notEmpty(completion) LIMIT 10000\n"),i=r.getTime()+6e5,s=e=>{const t={};return e.forEach((e=>{const n=e.color;t[n]||(t[n]=[]),t[n].push(e.completion)})),t},o=s(a);localStorage.setItem(t,JSON.stringify({expiry:i,result:o})),n(o)}catch(e){n([]),console.error("Failed to fetch autocomplete data:",e)}},r=function(){var e=this,t=arguments;return new Promise((function(n,r){var i=a.apply(e,t);function s(e){_i(i,n,r,s,o,"next",e)}function o(e){_i(i,n,r,s,o,"throw",e)}s(void 0)}))},function(){return r.apply(this,arguments)});var a,r;t()}),[e]),t},Li="SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",Hi="time_series",Pi=ni.DateTime,qi={scrollBeyondLastLine:!1,wordWrap:"on",wrappingStrategy:"advanced",scrollbar:{alwaysConsumeMouseWheel:!1},minimap:{enabled:!1},overviewRulerLanes:0},ji=({query:e,onSqlChange:t,onRunQuery:n,datasource:a})=>{const[r,i]=(0,gi.useState)(!1),[s,o]=(0,gi.useState)(e.query),l=Ui(a),u=Mi(a);return(0,gi.useEffect)((()=>{t(s)}),[s]),(0,gi.useEffect)((()=>{l&&u&&r&&(i(!1),Ri(a.templateSrv.getVariables().map((e=>`${e.name}`)),window.monaco,l,u),setTimeout((()=>{window.monaco.editor.setTheme(ki)}),20))}),[l,u,r,a.templateSrv]),pi().createElement("div",{style:{position:"relative",width:"100%",marginTop:"10px"}},pi().createElement(yi.CodeEditor,{height:Math.max(18*s.split("\n").length,150),value:s,language:Fi,monacoOptions:qi,onBeforeEditorMount:()=>i(!0),onChange:o,onBlur:n}))},Wi=({sql:e,showFormattedSQL:t})=>{const[n,a]=(0,gi.useState)(""),[r,i]=(0,gi.useState)(!1);return t?pi().createElement("div",{style:{width:"100%"}},pi().createElement("h4",{style:{marginBottom:"10px"}},"Reformatted Query"),pi().createElement("div",{style:{position:"relative"}},pi().createElement("pre",{style:{position:"relative"}},e,pi().createElement("div",{style:{position:"absolute",top:"10px",right:"10px",display:"flex",alignItems:"center",gap:"10px"}},n&&pi().createElement("span",{style:{margin:0,color:"rgb(108, 207, 142)",opacity:r?0:1,transition:"opacity 1s ease"}},n),pi().createElement(yi.IconButton,{"aria-label":"copy-formatted-data-to-clipboard",name:"copy",size:"lg",variant:"primary",onClick:()=>{navigator.clipboard.writeText(e).then((()=>{a("Copied!"),i(!1),setTimeout((()=>i(!0)),500),setTimeout((()=>a("")),1500)}))},disabled:!!n}))))):null},Vi=[{value:1,label:"1/1"},{value:2,label:"1/2"},{value:3,label:"1/3"},{value:4,label:"1/4"},{value:5,label:"1/5"},{value:10,label:"1/10"}],zi=[{label:"Time series",value:"time_series"},{label:"Table",value:"table"},{label:"Logs",value:"logs"},{label:"Traces",value:"traces"},{label:"Flame Graph",value:"flamegraph"}],Yi=({query:e,onSqlChange:t,onFieldChange:n,formattedData:a,onRunQuery:r,datasource:i,isAnnotationView:s,adhocFilters:o,areAdHocFiltersAvailable:l})=>{const[u,c]=(0,gi.useState)(a);(0,gi.useEffect)((()=>{const e=new Xr(a);c(e.raw())}),[a]);const d=t=>{n({fieldName:t,value:!e[t]})};return pi().createElement(pi().Fragment,null,pi().createElement(ji,{datasource:i,onSqlChange:t,query:e,onRunQuery:r}),!l&&o.length>0&&pi().createElement(yi.TagsInput,{className:"adhoc-filters-tags",tags:o.map(((e,t)=>`${e.key} ${e.operator} ${e.value}`)),onChange:e=>{n({fieldName:"adHocFilters",value:e.map((e=>{const[t,n,a]=e.split(" ");return{key:t,operator:n,value:a}}))})}}),pi().createElement("div",{className:"gf-form",style:{display:"flex",flexDirection:"column",marginTop:"10px"}},pi().createElement(yi.InlineFieldRow,null,pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:18,tooltip:"Turn on if you don't like when last data point in time series much lower then previous"},"Extrapolation")},pi().createElement(yi.InlineSwitch,{transparent:!0,"data-testid":"extrapolate-switch",value:e.extrapolate,onChange:()=>d("extrapolate")})),pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:10,tooltip:"Leave blank for auto handling based on time range and panel width"},"Step")},pi().createElement(yi.Input,{placeholder:"",onChange:e=>{const{value:t}=e.target;n({fieldName:"interval",value:t})},"data-testid":"interval-input",value:e.interval})),pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:"auto"},"Resolution")},pi().createElement(yi.Select,{width:"auto","data-testid":"resolution-select",onChange:e=>{return t=Number(e.value),void n({fieldName:"intervalFactor",value:t});var t},options:Vi,value:e.intervalFactor})),pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:10,tooltip:"Set rounding for $from and $to timestamps..."},"Round")},pi().createElement(yi.Input,{"data-testid":"round-input",placeholder:"",onChange:e=>{const{value:t}=e.target;n({fieldName:"round",value:t})},value:e.round}))),pi().createElement(yi.InlineFieldRow,null,pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:18,tooltip:"Add /* $__dashboard $__user */ to query"},"Add metadata"),style:{height:"100%"}},pi().createElement(yi.InlineSwitch,{"data-testid":"metadata-switch",width:"auto",value:e.add_metadata,onChange:()=>d("add_metadata"),transparent:!0})),pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:18,tooltip:"Turn off if you would like pass comments in SQL query to server"},"Skip Comments"),style:{height:"100%"}},pi().createElement(yi.InlineSwitch,{"data-testid":"skip-comments-switch",width:"auto",value:e.skip_comments,onChange:()=>d("skip_comments"),transparent:!0})),pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:23,tooltip:"Turn off if you would like use `runnindDifference` and `neighbor` functions for macros"},"Use window functions"),style:{height:"100%"}},pi().createElement(yi.InlineSwitch,{"data-testid":"use-window-func-for-macros",width:"auto",value:e.useWindowFuncForMacros,onChange:()=>d("useWindowFuncForMacros"),transparent:!0}))),pi().createElement(yi.InlineFieldRow,null,!s&&pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:"auto"},"Format As")},pi().createElement(yi.Select,{width:"auto","data-testid":"format-as-select",onChange:e=>{return t=e.value,void n({fieldName:"format",value:t});var t},options:zi,value:e.format})),"logs"===e.format&&pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:"auto"},"Context window")},pi().createElement(yi.Select,{width:"auto","data-testid":"context-window-size-select",onChange:e=>{return t=e.value,void n({fieldName:"contextWindowSize",value:t});var t},options:["10","20","50","100"].map((e=>({label:e+" entries",value:e}))),value:e.contextWindowSize})),pi().createElement(yi.InlineField,null,pi().createElement(yi.ToolbarButton,{variant:"primary",onClick:()=>d("showHelp"),isOpen:e.showHelp},"Show help")),pi().createElement(yi.InlineField,null,pi().createElement(yi.ToolbarButton,{variant:"primary",onClick:()=>d("showFormattedSQL"),isOpen:e.showFormattedSQL},"Show generated SQL"))),pi().createElement(Wi,{sql:u,showFormattedSQL:e.showFormattedSQL}),e.showHelp&&pi().createElement(xi,null)))},Bi=({value:e,onChange:t,options:n,label:a,placeholder:r,disabled:i,width:s,testId:o})=>{const[l,u]=(0,gi.useState)([]);(0,gi.useEffect)((()=>{if(!n.some((t=>t.value===e))&&!l.some((t=>t.value===e))){const t={value:e,label:e};u([...l,t].filter((e=>void 0!==e.label&&""!==e.label.trim())))}}),[e,n,l]);const c=[...n,...l],d=c.filter(((e,t)=>t===c.findIndex((t=>t.value===e.value)))).filter((e=>void 0!==e.label&&""!==e.label.trim()));return pi().createElement(yi.InlineField,{label:a||null},pi().createElement(yi.Select,{isClearable:!0,allowCustomValue:!0,onCreateOption:e=>{const n={value:e,label:e};u([...l,n].filter((e=>void 0!==e.label&&""!==e.label.trim()))),t({value:e.trim()})},width:s,value:e,onChange:e=>{t({value:e?e.value:void 0})},placeholder:r,options:d,disabled:i,"data-testid":o}))};function Gi(e,t,n,a,r,i,s){try{var o=e[i](s),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,r)}function Zi(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function s(e){Gi(i,a,r,s,o,"next",e)}function o(e){Gi(i,a,r,s,o,"throw",e)}s(void 0)}))}}function Qi(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ji(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){Qi(e,t,n[t])}))}return e}function Ki(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}const Xi=[{label:"DateTime",value:ni.DateTime},{label:"DateTime64",value:ni.DateTime64},{label:"TimeStamp",value:ni.TimeStamp},{label:"Float",value:ni.Float},{label:"TimeStamp64(3)",value:ni.TimeStamp64_3},{label:"TimeStamp64(6)",value:ni.TimeStamp64_6},{label:"TimeStamp64(9)",value:ni.TimeStamp64_9}],es=({query:e,onChange:t,datasource:n})=>{const[a,r,i,s,o,l,u,c,d,m,h,f,g,p]=((e,t)=>{const[n,a]=(0,gi.useState)([]),[r,i]=(0,gi.useState)([]),[s,o]=(0,gi.useState)([]),[l,u]=(0,gi.useState)([]);let[c,d]=(0,gi.useState)(e.database),[m,h]=(0,gi.useState)(e.table),[f,g]=(0,gi.useState)(e.dateTimeColDataType),[p,y]=(0,gi.useState)(e.dateColDataType),[T,v]=(0,gi.useState)(e.dateTimeType);const b=(0,gi.useCallback)((e=>{let t;switch(e){case"TABLES":t="SELECT name FROM system.tables WHERE database = '"+c+"' ORDER BY name";break;case"DATE":t="SELECT name FROM system.columns WHERE database = '"+c+"' AND table = '"+m+"' AND type IN ('Date','Date32','Nullable(Date)','Nullable(Date32)') ORDER BY name UNION ALL SELECT ' ' AS name";break;case ni.DateTime:t="SELECT name FROM system.columns WHERE database = '"+c+"' AND table = '"+m+"' AND (substring(type,1,8) = 'DateTime' OR substring(type,10,8) = 'DateTime') AND (substring(type,1,10) != 'DateTime64' OR substring(type,10,10) != 'DateTime64')ORDER BY name";break;case ni.DateTime64:t="SELECT name FROM system.columns WHERE database = '"+c+"' AND table = '"+m+"' AND (substring(type,1,10) = 'DateTime64' OR substring(type,10,10) = 'DateTime64')ORDER BY name";break;case ni.TimeStamp:t="SELECT name FROM system.columns WHERE database = '"+c+"' AND table = '"+m+"' AND type = 'UInt32' ORDER BY name";break;case ni.TimeStamp64_3:case ni.TimeStamp64_6:case ni.TimeStamp64_9:t="SELECT name FROM system.columns WHERE database = '"+c+"' AND table = '"+m+"' AND type LIKE '%UInt64%'ORDER BY name";break;case ni.Float:t="SELECT name FROM system.columns WHERE database = '"+c+"' AND table = '"+m+"' AND type LIKE '%Float%' OR type LIKE '%Decimal%' ORDER BY name";break;case"DATABASES":t="SELECT name FROM system.databases ORDER BY name";break;case"COLUMNS":t="SELECT name text, type value FROM system.columns WHERE database = '"+c+"' AND table = '"+m+"'"}return t}),[m,c]),S=(0,gi.useCallback)((e=>{let n=b(e);return t.metricFindQuery(n)}),[b,t]);return(0,gi.useEffect)((()=>{Zi((function*(){const e=yield S("DATABASES");a(e.map((e=>({label:e.text,value:e.text}))))}))()}),[S]),(0,gi.useEffect)((()=>{c&&Zi((function*(){const e=yield S("TABLES");i(e.map((e=>({label:e.text,value:e.text}))))}))()}),[c,S]),(0,gi.useEffect)((()=>{(c||m||T)&&Zi((function*(){const e=yield S(T);u(e.map((e=>({label:e.text,value:e.text}))))}))()}),[m,c,T,S]),(0,gi.useEffect)((()=>{(c||m)&&Zi((function*(){const e=yield S("DATE");o(e.map((e=>({label:e.text,value:e.text}))))}))()}),[m,c,S]),[n,r,s,l,f,p,d,h,g,y,v,m,c,T]})(e,n);return(0,gi.useEffect)((()=>{u(e.database),c(e.table),d(e.dateTimeColDataType),m(e.dateColDataType),h(e.dateTimeType)}),[e.database,e.dateColDataType,e.dateTimeColDataType,e.dateTimeType,e.table,m,d,u,h,c]),pi().createElement("div",{className:"gf-form",style:{display:"flex",flexDirection:"column",marginTop:"10px"}},pi().createElement(yi.InlineFieldRow,null,pi().createElement(Bi,{width:24,label:pi().createElement(yi.InlineLabel,{width:24},pi().createElement("span",{style:{color:"#6e9fff"}},"FROM")),placeholder:"Database",value:g,onChange:n=>{return a=n.value,u(a),void t(Ki(Ji({},e),{database:a}));var a},options:a,testId:"database-select"}),pi().createElement(Bi,{width:24,placeholder:"Table",value:f,onChange:n=>{return a=n.value,c(a),void t(Ki(Ji({},e),{table:a}));var a},options:r,disabled:!0,testId:"table-select"})),pi().createElement(yi.InlineFieldRow,null,pi().createElement(yi.InlineField,{label:pi().createElement(yi.InlineLabel,{width:24,tooltip:pi().createElement("div",{style:{width:"200px",backgroundColor:"black"}},"Select Type  ",pi().createElement("a",{href:"https://clickhouse.com/docs/en/sql-reference/data-types/datetime/",rel:"noreferrer",target:"_blank"},"DateTime"),", ",pi().createElement("a",{href:"https://clickhouse.com/docs/en/sql-reference/data-types/datetime64/",rel:"noreferrer",target:"_blank"},"DateTime64"),"  or"," ",pi().createElement("a",{href:"https://clickhouse.com/docs/en/sql-reference/data-types/int-uint/",rel:"noreferrer",target:"_blank"},"UInt32")," ","column for binding with Grafana range selector")},"Column timestamp type")},pi().createElement(yi.Select,{width:24,onChange:n=>{var a;const r=(null===(a=n)||void 0===a?void 0:a.value)?n.value:void 0;h(r),t(Ki(Ji({},e),{dateTimeType:r}))},isClearable:!0,placeholder:"Timestamp type",options:Xi,value:p,"data-testid":"timestamp-type-select"}))),pi().createElement(yi.InlineFieldRow,null,pi().createElement(Bi,{width:24,label:pi().createElement(yi.InlineLabel,{width:24},"Timestamp Column"),placeholder:"Timestamp column",value:o,onChange:({value:n})=>{return d(((a=n)||"").trim()),void t(Ki(Ji({},e),{dateTimeColDataType:a}));var a},options:s,disabled:!s.length,testId:"timestamp-column-select"})),pi().createElement(yi.InlineFieldRow,null,pi().createElement(Bi,{label:pi().createElement(yi.InlineLabel,{width:24,tooltip:pi().createElement("div",{style:{width:"200px",backgroundColor:"black"}},"Select",pi().createElement("a",{rel:"noreferrer",href:"https://clickhouse.tech/docs/en/sql-reference/data-types/date/",target:"_blank"},"Date"),"column for binding with Grafana range selector")},"Date column"),width:24,placeholder:"Date Column",value:l,onChange:n=>{return a=n.value,m((a||"").trim()),void t(Ki(Ji({},e),{dateColDataType:a}));var a},options:i,testId:"date-column-select"})))};function ts(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const ns=(e,t,n)=>{const[a]=(0,gi.useState)(n.name),[r]=(0,gi.useState)(n.uid),[i]=(0,gi.useState)(e.refId);(0,gi.useEffect)((()=>{const n=`dataStorage_${a}_${r}_${i}`,s=localStorage.getItem(n);if(s){const{name:a,timestamp:r}=JSON.parse(s);if(((new Date).getTime()-r)/1e3<5&&a!==n){const n=(o=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){ts(e,t,n[t])}))}return e}({},e),l=null!=(l={format:Hi,extrapolate:!0,skip_comments:!0,add_metadata:!0,dateTimeType:Pi,round:"0s",intervalFactor:1,interval:"",query:Li,formattedQuery:e.query,editorMode:ei.Builder,database:void 0,table:void 0,dateColDataType:void 0,dateTimeColDataType:void 0})?l:{},Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(l)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n.push.apply(n,a)}return n}(Object(l)).forEach((function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(l,e))})),o);t(n)}}var o,l;return()=>{const e={name:n,timestamp:(new Date).getTime()};localStorage.setItem(n,JSON.stringify(e))}}),[])};function as(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function rs(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){as(e,t,n[t])}))}return e}function is(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}var ss=o(292),os=o.n(ss),ls=o(893),us=o.n(ls),cs=o(383),ds=o.n(cs),ms=o(884),hs=o.n(ms),fs=o(88),gs=o.n(fs),ps=o(997),ys=o.n(ps),Ts=o(14),vs={};vs.styleTagTransform=ys(),vs.setAttributes=hs(),vs.insert=ds().bind(null,"head"),vs.domAPI=us(),vs.insertStyleElement=gs(),os()(Ts.A,vs),Ts.A&&Ts.A.locals&&Ts.A.locals;const bs=(e,t)=>{const n=(0,fi.getTemplateSrv)().getVariables().filter((e=>"adhoc"===e.type));let a=[];for(const e of n){var r;(null===(r=e.datasource)||void 0===r?void 0:r.uid)===t&&(a=a.concat(e.filters))}return a};function Ss(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function xs(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){Ss(e,t,n[t])}))}return e}function ws(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function Is(e){var t,n;const{datasource:a,query:r,onChange:i,onRunQuery:s}=e,o=!e.app,l=((e,t,n,a)=>{var r,i,s,o;const l=is(rs({},e),{format:e.format||Hi,extrapolate:null===(r=e.extrapolate)||void 0===r||r,skip_comments:null===(i=e.skip_comments)||void 0===i||i,add_metadata:null===(s=e.add_metadata)||void 0===s||s,useWindowFuncForMacros:null===(o=e.useWindowFuncForMacros)||void 0===o||o,dateTimeType:e.dateTimeType,round:e.round||"0s",intervalFactor:e.intervalFactor||1,interval:e.interval||"",adHocFilters:e.adHocFilters||[],query:e.query||Li,formattedQuery:e.formattedQuery||e.query,editorMode:e.database&&e.table?ei.SQL:ei.Builder,contextWindowSize:e.contextWindowSize||"10",adHocValuesQuery:e.adHocValuesQuery||""});return n.defaultValues&&!e.initialized&&(n.defaultValues.defaultDateTimeType&&!l.dateTimeType&&(l.dateTimeType=n.defaultValues.defaultDateTimeType),n.defaultValues.dateTime.defaultDateTime&&l.dateTimeType===ni.DateTime&&!l.dateTimeColDataType&&(l.dateTimeColDataType=n.defaultValues.dateTime.defaultDateTime),n.defaultValues.dateTime.defaultDateTime64&&l.dateTimeType===ni.DateTime64&&!l.dateTimeColDataType&&(l.dateTimeColDataType=n.defaultValues.dateTime.defaultDateTime64),n.defaultValues.dateTime.defaultDateDate32&&!l.dateColDataType&&(l.dateColDataType=n.defaultValues.dateTime.defaultDateDate32),n.defaultValues.dateTime.defaultUint32&&l.dateTimeType===ni.TimeStamp&&!l.dateTimeColDataType&&(l.dateTimeColDataType=n.defaultValues.dateTime.defaultUint32),n.defaultValues.dateTime.defaultFloat&&l.dateTimeType===ni.Float&&!l.dateTimeColDataType&&(l.dateTimeColDataType=n.defaultValues.dateTime.defaultFloat),n.defaultValues.dateTime.defaultTimeStamp64_3&&l.dateTimeType===ni.TimeStamp64_3&&!l.dateTimeColDataType&&(l.dateTimeColDataType=n.defaultValues.dateTime.defaultTimeStamp64_3),n.defaultValues.dateTime.defaultTimeStamp64_6&&l.dateTimeType===ni.TimeStamp64_6&&!l.dateTimeColDataType&&(l.dateTimeColDataType=n.defaultValues.dateTime.defaultTimeStamp64_6),n.defaultValues.dateTime.defaultTimeStamp64_9&&l.dateTimeType===ni.TimeStamp64_9&&!l.dateTimeColDataType&&(l.dateTimeColDataType=n.defaultValues.dateTime.defaultTimeStamp64_9),n.defaultValues.contextWindowSize&&!e.contextWindowSize&&(l.contextWindowSize=n.defaultValues.contextWindowSize),a(is(rs({},e,l),{initialized:!0}))),t&&(l.format="ANNOTATION"),l})(r,o,a,i),[u,c]=((e,t)=>{Mi(t),Ui(t);const[n,a]=(0,gi.useState)(e.query),[r,i]=(0,gi.useState)(null);return(0,gi.useEffect)((()=>{try{if(t.options&&t.templateSrv){const n=new li(e,t.templateSrv,t.options).replace(t.options,e.adHocFilters);a(n),i(null)}}catch(e){var n;i(null===(n=e)||void 0===n?void 0:n.message)}}),[e,t.name,t.options,t.templateSrv]),[n,r]})(l,a),[d,m]=(0,gi.useState)(l.editorMode||ei.Builder);ns(r,i,a);const h=()=>s(),f=bs(null===(t=a)||void 0===t||t.name,null===(n=r.datasource)||void 0===n?void 0:n.uid),g=f.map((({key:e,operator:t,value:n})=>`${e}${t}${n}`)).join(","),p=!!f.length;return(0,gi.useEffect)((()=>{"explore"!==e.app&&i(ws(xs({},l),{adHocFilters:f}))}),[e.app,g]),pi().createElement(pi().Fragment,null,pi().createElement(Si,{query:l,datasource:a,editorMode:d,setEditorMode:m,isAnnotationView:o,onTriggerQuery:h,onChange:i}),c?pi().createElement(yi.Alert,{title:c,elevated:!0,style:{marginTop:"5px",marginBottom:"5px"}}):null,d===ei.Builder&&pi().createElement(es,{query:l,datasource:a,onChange:e=>i(xs({},e)),onRunQuery:h}),d===ei.SQL&&pi().createElement(Yi,{adhocFilters:l.adHocFilters,areAdHocFiltersAvailable:p,query:l,onSqlChange:e=>i(ws(xs({},l),{query:e})),onRunQuery:h,onFieldChange:e=>i(ws(xs({},l),{[e.fieldName]:e.value})),formattedData:u,datasource:a,isAnnotationView:o}))}function Ds(e,t,n,a,r,i,s){try{var o=e[i](s),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,r)}function Es(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function s(e){Ds(i,a,r,s,o,"next",e)}function o(e){Ds(i,a,r,s,o,"throw",e)}s(void 0)}))}}function Os(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Cs(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){Os(e,t,n[t])}))}return e}function As(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}class Ns extends e.DataSourceApi{static _getRequestOptions(e,t,n,a){let r={url:a.url,requestId:n},i=[];return t?(r.method="POST",r.data=e):(r.method="GET",i.push("query="+encodeURIComponent(e))),a.defaultDatabase&&i.push("database="+a.defaultDatabase),(a.basicAuth||a.withCredentials)&&(r.withCredentials=!0),r.headers=a.headers||{},a.basicAuth&&(r.headers.Authorization=a.basicAuth),a.useCompression&&(r.headers["Accept-Encoding"]=a.compressionType,i.push("enable_http_compression=1")),a.useYandexCloudAuthorization&&(r.headers["X-ClickHouse-User"]=a.xHeaderUser,a.xClickHouseSSLCertificateAuth?(r.headers["X-ClickHouse-SSL-Certificate-Auth"]="on",-1===r.url.indexOf("/?")?r.url+="/xClickHouseSSLCertificateAuth":r.url.replace("/?","/xClickHouseSSLCertificateAuth/?")):-1===r.url.indexOf("/?")?r.url+="/xHeaderKey":r.url.replace("/?","/xHeaderKey/?")),a.addCorsHeader&&i.push("add_http_cors_header=1"),i.length&&(r.url+=(-1!==r.url.indexOf("?")?"&":"/?")+i.join("&")),r}_request(e,t){const n=Ns._getRequestOptions(e,this.usePOST,t,this);return new Promise(((e,t)=>{this.backendSrv.fetch(n).subscribe((t=>{var n;t&&(null===(n=t)||void 0===n?void 0:n.data)?e(t.data):e(null)}),(e=>{t(e)}))}))}getLogRowContext(t,n,a){var r=this;return Es((function*(){const i=As(Cs({},n),{range:r.options.range}),s=r.createQuery(i,a);let o=new Xr(s.stmt.replace(/\r\n|\r|\n/g," ")),{select:l}=o.toAST();var u;{var c,d;const s=null===(c=a)||void 0===c?void 0:c.dateTimeColDataType,o=(u=Es((function*(){var o,l,u,c;let d=String(t.timeEpochMs);d=d.length>10?`toDateTime64(${t.timeEpochMs}/1000,3)`:`'${t.timeUtc}'`;const m=(null===(o=n)||void 0===o?void 0:o.direction)===e.LogRowContextQueryDirection.Backward?(f=d,`SELECT timestamp FROM (\n          SELECT\n            ${h=s},\n            FIRST_VALUE(${h}) OVER (ORDER BY ${h} ROWS BETWEEN ${(null===(l=a)||void 0===l?void 0:l.contextWindowSize)||10} PRECEDING AND CURRENT ROW) AS timestamp\n          FROM $table\n          ORDER BY ${h}\n        ) WHERE ${h} = ${f}`):((e,t,n)=>`SELECT timestamp FROM (\n          SELECT\n            ${e},\n            LAST_VALUE(${e}) OVER (ORDER BY ${e} ROWS BETWEEN CURRENT ROW AND ${n||10} FOLLOWING) AS timestamp\n          FROM $table\n          ORDER BY ${e}\n        ) WHERE ${e} = ${t}`)(s,d,null===(u=a)||void 0===u?void 0:u.contextWindowSize);var h,f;const{stmt:g,requestId:p}=r.createQuery(i,As(Cs({},a),{query:m}));return(yield r._seriesQuery(g,p+(null===(c=n)||void 0===c?void 0:c.direction))).data[0]})),function(){return u.apply(this,arguments)}),{timestamp:m}=yield o(),h=function(){var o=Es((function*(){var o,u;const c=(null===(o=n)||void 0===o?void 0:o.direction)===e.LogRowContextQueryDirection.Backward?((e,t,n,a)=>`SELECT ${a.join(",")} FROM $table WHERE ${e} > '${t}' AND ${e} < '${n}'`)(s,m,t.timeUtc,l):((e,t,n,a)=>`SELECT ${a.join(",")} FROM $table WHERE ${e} <'${t}' AND ${e} > '${n}'`)(s,m,t.timeUtc,l),{stmt:d,requestId:h}=r.createQuery(i,As(Cs({},a),{query:c}));return r._seriesQuery(d,h+(null===(u=n)||void 0===u?void 0:u.direction))}));return function(){return o.apply(this,arguments)}}(),f=yield h();if(f&&!f.rows)return{data:[]};if(!f)throw new Error("No response for log context query");return{data:new sr({refId:null===(d=n)||void 0===d?void 0:d.direction,series:f.data,meta:f.meta}).toLogs()}}}))()}toggleQueryFilter(e,t){let n=[...e.adHocFilters],a=e.adHocFilters.filter((e=>e.key===t.options.key&&e.value===t.options.value)).length;return"FILTER_FOR"===t.type?a?n=n.filter((e=>e.key!==t.options.key&&e.value!==t.options.value&&e.operator!==t.options.operator)):n.push({value:t.options.value,key:t.options.key,operator:"="}):"FILTER_OUT"===t.type&&(a?n=n.filter((e=>e.key!==t.options.key&&e.value!==t.options.value&&e.operator!==t.options.operator)):n.push({value:t.options.value,key:t.options.key,operator:"!="})),As(Cs({},e),{adHocFilters:n})}queryHasFilter(e,t){return e.adHocFilters.some((e=>e.key===t.key&&e.value===t.value))}query(e){this.options=e;const t=e.targets.filter((e=>!e.hide&&e.query)).map((t=>this.createQuery(e,t)));if(!t.length)return Promise.resolve({data:[]});const a=t.map((e=>this._seriesQuery(e.stmt,e.requestId)));return Promise.all(a).then((a=>{let r=[],i=0;return n().each(a,(a=>{var s;const o=e.targets[i],l=t[i].keys;if(i++,!a||!a.rows)return;let u=new sr({refId:o.refId,series:a.data,meta:a.meta,keys:l,tillNow:"now"===(null===(s=e.rangeRaw)||void 0===s?void 0:s.to),from:ii.convertTimestamp(e.range.from),to:ii.convertTimestamp(e.range.to)});"table"===o.format?n().each(u.toTable(),(e=>{r.push(e)})):"traces"===o.format?r=u.toTraces():"flamegraph"===o.format?r=u.toFlamegraph():"logs"===o.format?r=u.toLogs():"Anno"===o.refId?r=u.toAnnotation(a.data,a.meta):n().each(u.toTimeSeries(o.extrapolate),(e=>{r.push(e)}))})),{data:r}}))}modifyQuery(e,t){var a;let r=new Xr(null!==(a=e.query)&&void 0!==a?a:""),i=r.toAST(),s=i.where||[];const o=t.key+" = '"+t.value+"'";switch(t.type){case"ADD_FILTER":{if(0===s.length){s.push(o);break}let e=!1;n().each(s,(t=>{t.includes(o)&&(e=!0)})),e||s.push("AND "+o);break}case"ADD_FILTER_OUT":if(0===s.length)break;s.forEach(((e,t)=>{e.includes(o)&&s.splice(t,1)}))}const l=r.Print(i);return As(Cs({},e),{query:l})}createQuery(e,t){var n,a;const r=new li(t,this.templateSrv,e),i=bs(null===(a=this.adHocFilter)||void 0===a||null===(n=a.datasource)||void 0===n||n.name,this.uid),s=r.replace(e,i);let o=[];try{o=new Xr(s).toAST()["group by"]||[]}catch(e){console.log("AST parser error: ",e)}return{keys:o,requestId:e.panelId+t.refId,stmt:s}}annotationQuery(e){if(!e.annotation.query)throw new Error("Query missing in annotation definition");const t=Object.assign({annotation:{dateTimeColDataType:"time"},interval:"30s"},e);let n,a;n=new li(t.annotation,this.templateSrv,t),n=n.replace(t,[]),a=n.replace(/\r\n|\r|\n/g," "),a+=" FORMAT JSON";const r=Ns._getRequestOptions(a,!0,void 0,this);return new Promise(((e,n)=>{this.backendSrv.fetch(r).subscribe((n=>{e(this.responseParser.transformAnnotationResponse(t,n.data))}),(e=>{n(e)}))}))}metricFindQuery(e,n){var a;let r,i={};if(-1!==(null===(a=e)||void 0===a?void 0:a.indexOf("__searchFilter"))&&(i={__searchFilter:{value:n&&n.searchFilter?`${n.searchFilter}%`:"%",text:""}},e=this.templateSrv.replace(e,i,ii.interpolateQueryExpr)),r=this.templateSrv.replace(ii.conditionalTest(e,this.templateSrv),i,ii.interpolateQueryExpr),n&&n.range){let e=ii.convertTimestamp(n.range.from),t=ii.convertTimestamp(n.range.to);r=r.replace(/\$to/g,t.toString()).replace(/\$from/g,e.toString()),r=si.replaceTimeFilters(r,n.range),r=r.replace(/\r\n|\r|\n/g," ")}return this._seriesQuery(r).then((0,t.curry)(this.responseParser.parse)(e))}testDatasource(){return this.metricFindQuery("SELECT 1").then((()=>({status:"success",message:"Data source is working",title:"Success"})))}formatQuery(e){let t=new Xr(null!=e?e:"");return t.Format(),t.Format()}_seriesQuery(e,t){return e+=" FORMAT JSON",this._request(e,t)}targetContainsTemplate(e){return this.templateSrv.containsTemplate(e.query)}getTagKeys(){let e="";return(0,t.each)(this.templateSrv.getVariables(),(t=>{"query"in t&&"adhoc_query_filter"===t.name&&(e=t.query)})),this.adHocFilter.GetTagKeys(e)}getTagValues(e){return this.adHocFilter.GetTagValues(e)}interpolateVariablesInQueries(e,t){let n=e;return e&&e.length>0&&(n=e.map((e=>As(Cs({},e),{datasource:this.getRef(),query:this.templateSrv.replace(ii.conditionalTest(e.query,this.templateSrv),t,ii.interpolateQueryExpr)})))),n}getRef(){return{type:this.type,uid:this.uid}}constructor(e){super(e),Os(this,"backendSrv",void 0),Os(this,"templateSrv",void 0),Os(this,"adHocFilter",void 0),Os(this,"responseParser",void 0),Os(this,"options",void 0),Os(this,"url",void 0),Os(this,"basicAuth",void 0),Os(this,"withCredentials",void 0),Os(this,"usePOST",void 0),Os(this,"defaultDatabase",void 0),Os(this,"addCorsHeader",void 0),Os(this,"xHeaderUser",void 0),Os(this,"xClickHouseSSLCertificateAuth",void 0),Os(this,"defaultValues",void 0),Os(this,"useYandexCloudAuthorization",void 0),Os(this,"useCompression",void 0),Os(this,"compressionType",void 0),Os(this,"adHocValuesQuery",void 0),Os(this,"adHocHideTableNames",void 0),Os(this,"uid",void 0),this.uid=e.uid,this.url=e.url,this.basicAuth=e.basicAuth,this.withCredentials=e.withCredentials,this.addCorsHeader=e.jsonData.addCorsHeader||!1,this.usePOST=e.jsonData.usePOST||!1,this.useCompression=e.jsonData.useCompression||!1,this.adHocValuesQuery=e.jsonData.adHocValuesQuery||"",this.adHocHideTableNames=e.jsonData.adHocHideTableNames||!1,this.compressionType=e.jsonData.compressionType||"",this.defaultDatabase=e.jsonData.defaultDatabase||"",this.xHeaderUser=e.jsonData.xHeaderUser||"",this.xClickHouseSSLCertificateAuth=e.jsonData.xClickHouseSSLCertificateAuth||!1,this.useYandexCloudAuthorization=e.jsonData.useYandexCloudAuthorization||!1,e.jsonData.useDefaultConfiguration&&(this.defaultValues={dateTime:{defaultDateTime64:e.jsonData.defaultDateTime64,defaultDateTime:e.jsonData.defaultDateTime,defaultUint32:e.jsonData.defaultUint32,defaultDateDate32:e.jsonData.defaultDateDate32,defaultFloat:e.jsonData.defaultFloat,defaultTimeStamp64_3:e.jsonData.defaultTimeStamp64_3,defaultTimeStamp64_6:e.jsonData.defaultTimeStamp64_6,defaultTimeStamp64_9:e.jsonData.defaultTimeStamp64_9},defaultDateTimeType:e.jsonData.defaultDateTimeType,contextWindowSize:e.jsonData.contextWindowSize}),this.backendSrv=(0,fi.getBackendSrv)(),this.templateSrv=(0,fi.getTemplateSrv)(),this.adHocFilter=new hi(this),this.responseParser=new ui,this.annotations={QueryEditor:Is}}}function ks(e,t,n,a,r,i,s){try{var o=e[i](s),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,r)}function Fs(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function s(e){ks(i,a,r,s,o,"next",e)}function o(e){ks(i,a,r,s,o,"throw",e)}s(void 0)}))}}const Rs=($s=Fs((function*(e,t,n){const a=(0,fi.getBackendSrv)(),r=JSON.parse(JSON.stringify(n));r.url="proxy"===r.access?`/api/datasources/proxy/uid/${r.uid}`:r.url;const i=Ns._getRequestOptions(e,r.jsonData.usePOST,void 0,r);return t&&e?new Promise(((e,t)=>{a.fetch(i).subscribe((t=>{e(t.data)}),(e=>{t(e)}))})):Promise.reject("Invalid parameters")})),function(e,t,n){return $s.apply(this,arguments)});var $s;const Ms=function(){var e=Fs((function*(){const e=(0,fi.getBackendSrv)();return new Promise(((t,n)=>{e.fetch({url:"/api/frontend/settings"}).subscribe((e=>{t(e.data)}),(e=>{n(e)}))}))}));return function(){return e.apply(this,arguments)}}();function _s(e,t,n,a,r,i,s){try{var o=e[i](s),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,r)}const Us=({jsonData:e,newOptions:t,onSwitchToggle:n,onFieldChange:a})=>{const[r,i]=(0,gi.useState)([]),[s,o]=(0,gi.useState)([]),[l,u]=(0,gi.useState)([]),[c,d]=(0,gi.useState)([]),[m,h]=(0,gi.useState)([]),[f,g]=(0,gi.useState)([]),[p,y]=(0,gi.useState)([]),[T,v]=(0,gi.useState)([]);var b;return(0,gi.useEffect)((()=>{const n=function(){var n,a=(n=function*(){if(1!==t.version&&e.useDefaultConfiguration&&(e.dataSourceUrl.startsWith("http://")||e.dataSourceUrl.startsWith("https://")))try{if(!t||!t.uid)return;const n=t.uid,a=yield Ms();if(!a||!a.datasources)return;const r=Object.values(a.datasources).find((e=>{var t;return(null===(t=e)||void 0===t?void 0:t.uid)===n}));if(!r)return;const s=r.basicAuth;t.basicAuth=t.basicAuth?s:t.basicAuth;const l=yield Rs("SELECT name,database,table,type FROM system.columns WHERE (type LIKE '%Date%' OR type LIKE '%UInt64%' OR type LIKE '%UInt32%' OR type LIKE '%Float%' OR type LIKE '%Decimal%') AND NOT (database='system' AND name LIKE 'ProfileEvent%') AND NOT (database='system' AND name LIKE 'CurrentMetric%') AND NOT (type LIKE 'Tuple%') AND NOT (database IN ('INFORMATION_SCHEMA','information_schema')) ORDER BY type,name FORMAT JSON",e.dataSourceUrl,t);if(!l||!Array.isArray(l.data))return;const c=l.data.reduce(((e,t)=>{if(!t||!t.type||!t.name)return e;let n=t.type;return n.startsWith("LowCardinality(")&&(n=n.slice(15),n=n.slice(0,-1)),n.startsWith("Nullable(")&&(n=n.slice(9),n=n.slice(0,-1)),n.startsWith("DateTime64(")&&(n="DateTime64"),n.startsWith("DateTime(")&&(n="DateTime"),n.startsWith("Float")&&(n="Float"),n.startsWith("Decimal")&&(n="Decimal"),e[n]=e[n]||[],e[n].push(t.name),e}),{}),m=e=>Array.isArray(e)?[...new Set(e)].map((e=>({label:e,value:e}))):[];i(m(c.DateTime64||[])),d(m(c.Date||[])),u(m(c.UInt32||[])),o(m(c.DateTime||[])),h(m([...c.Float,...c.Decimal])),g(m(c.UInt64||[])),y(m(c.UInt64||[])),v(m(c.UInt64||[]))}catch(e){u([]),o([]),i([]),d([]),h([]),g([]),y([]),v([])}},function(){var e=this,t=arguments;return new Promise((function(a,r){var i=n.apply(e,t);function s(e){_s(i,a,r,s,o,"next",e)}function o(e){_s(i,a,r,s,o,"throw",e)}s(void 0)}))});return function(){return a.apply(this,arguments)}}();n()}),[e.dataSourceUrl,e.useDefaultConfiguration,t]),pi().createElement("div",{className:"gf-form-group"},pi().createElement(yi.InlineField,{label:"Use default values",labelWidth:36},pi().createElement(yi.InlineSwitch,{id:"useDefaultConfiguration",value:e.useDefaultConfiguration||!1,onChange:e=>n("useDefaultConfiguration",e.currentTarget.checked)})),e.useDefaultConfiguration&&pi().createElement(pi().Fragment,null,1===t.version&&pi().createElement(yi.Alert,{title:"Please save data source before use default configurations, \n        we need configured clickhouse connection to fetch options",severity:"info",key:"info"}),pi().createElement("h6",null,"TimestampType"),pi().createElement(yi.InlineField,{labelWidth:32,style:{marginLeft:"30px"},label:pi().createElement(yi.InlineLabel,{width:32,tooltip:pi().createElement("div",{style:{width:"200px",backgroundColor:"black"}},"Select Type  ",pi().createElement("a",{href:"https://clickhouse.com/docs/en/sql-reference/data-types/datetime/",rel:"noreferrer",target:"_blank"},"DateTime"),", ",pi().createElement("a",{href:"https://clickhouse.com/docs/en/sql-reference/data-types/datetime64/",rel:"noreferrer",target:"_blank"},"DateTime64"),"  or"," ",pi().createElement("a",{href:"https://clickhouse.com/docs/en/sql-reference/data-types/int-uint/",rel:"noreferrer",target:"_blank"},"UInt32")," ","column for binding with Grafana range selector")},"Column timestamp type")},pi().createElement(yi.Select,{width:24,onChange:e=>{a({value:e?e.value:void 0},"defaultDateTimeType")},isClearable:!0,placeholder:"Timestamp type",options:[{label:"DateTime",value:ni.DateTime},{label:"DateTime64",value:ni.DateTime64},{label:"TimeStamp",value:ni.TimeStamp},{label:"Float",value:ni.Float},{label:"Timestamp64(3)",value:ni.TimeStamp64_3},{label:"Timestamp64(6)",value:ni.TimeStamp64_6},{label:"Timestamp64(9)",value:ni.TimeStamp64_9}],value:e.defaultDateTimeType})),pi().createElement("h6",null,"DateTime columns"),pi().createElement(yi.InlineField,{label:"Datetime Field",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{isClearable:!0,id:"defaultDateTime",allowCustomValue:!1,width:24,value:e.defaultDateTime,onChange:e=>{a({value:e?e.value:void 0},"defaultDateTime")},options:s})),pi().createElement(yi.InlineField,{label:"Timestamp (Uint32) Field",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{isClearable:!0,id:"defaultUint32",allowCustomValue:!1,width:24,value:e.defaultUint32,onChange:e=>{a({value:e?e.value:void 0},"defaultUint32")},options:l})),pi().createElement(yi.InlineField,{label:"Datetime64 Field",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{isClearable:!0,id:"defaultDateTime64",allowCustomValue:!1,width:24,value:e.defaultDateTime64,onChange:e=>{a({value:e?e.value:void 0},"defaultDateTime64")},options:r})),pi().createElement(yi.InlineField,{label:"Float Field",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{isClearable:!0,id:"defaultFloatTimestamp",allowCustomValue:!1,width:24,value:e.defaultFloat,onChange:e=>{a({value:e?e.value:void 0},"defaultFloat")},options:m})),pi().createElement(yi.InlineField,{label:"Timestamp64(3) Field",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{isClearable:!0,id:"defaultTimeStamp64_3",allowCustomValue:!1,width:24,value:e.defaultTimeStamp64_3,onChange:e=>{a({value:e?e.value:void 0},"defaultTimeStamp64_3")},options:f})),pi().createElement(yi.InlineField,{label:"Timestamp64(6) Field",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{isClearable:!0,id:"defaultTimeStamp64_6",allowCustomValue:!1,width:24,value:e.defaultTimeStamp64_6,onChange:e=>{a({value:e?e.value:void 0},"defaultTimeStamp64_6")},options:p})),pi().createElement(yi.InlineField,{label:"Timestamp64(9) Field",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{isClearable:!0,id:"defaultTimeStamp64_9",allowCustomValue:!1,width:24,value:e.defaultTimeStamp64_9,onChange:e=>{a({value:e?e.value:void 0},"defaultTimeStamp64_9")},options:T})),pi().createElement("h6",null,"Date column"),pi().createElement(yi.InlineField,{label:"Date Field",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{isClearable:!0,id:"defaultDateDate32",allowCustomValue:!1,width:24,value:e.defaultDateDate32,onChange:e=>{a({value:e?e.value:void 0},"defaultDateDate32")},options:c})),pi().createElement("h6",null,"Logs settings"),pi().createElement(yi.InlineField,{label:"Context window",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.Select,{width:24,"data-testid":"context-window-size-select",onChange:e=>{a({value:e?e.value:void 0},"contextWindowSize")},options:["10","20","50","100"].map((e=>({label:e+" entries",value:e}))),value:e.contextWindowSize})),pi().createElement("h6",null,"Macros settings"),pi().createElement(yi.InlineField,{label:"Use window functions for macros",labelWidth:32,style:{marginLeft:"30px"}},pi().createElement(yi.InlineSwitch,{id:"useWindowFuncForMacros","data-testid":"use-window-func-for-macros",value:null===(b=e.useWindowFuncForMacros)||void 0===b||b,onChange:e=>n("useWindowFuncForMacros",e.currentTarget.checked)}))))},Ls=[{label:"gzip",value:"gzip"},{label:"br",value:"br"},{label:"deflate",value:"deflate"},{label:"zstd",value:"zstd"}];function Hs(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ps(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){Hs(e,t,n[t])}))}return e}function qs(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}const js=new e.DataSourcePlugin(Ns).setConfigEditor((function(t){var a;const{onOptionsChange:r,options:i}=t,s=n().cloneDeep(i),{jsonData:o,secureJsonFields:l}=s,u=i.secureJsonData||{},[c,d]=(0,gi.useState)(o.compressionType),[m,h]=(0,gi.useState)(o.adHocValuesQuery||mi);(0,gi.useEffect)((()=>{o.adHocValuesQuery=m,r(qs(Ps({},s),{jsonData:Ps({},o)}))}),[m]),""!==s.url&&(o.dataSourceUrl=s.url);const f=(e,t)=>{r(qs(Ps({},s),{jsonData:qs(Ps({},o),{[e]:t})}))};return pi().createElement(pi().Fragment,null,pi().createElement(yi.DataSourceHttpSettings,{"data-test-id":"http-settings",defaultUrl:"http://localhost:8123",dataSourceConfig:i,showAccessOptions:!0,showForwardOAuthIdentityOption:!0,onChange:e=>{const t=n().cloneDeep(e);t.jsonData.dataSourceUrl=t.url,r(Ps({},t))}}),pi().createElement("div",{className:"gf-form-group"},pi().createElement(yi.InlineField,{label:"Use Yandex.Cloud authorization headers",tooltip:"Use authorization headers for managed Yandex.Cloud ClickHouse database, will work only for proxy access method",labelWidth:36},pi().createElement(yi.InlineSwitch,{"data-test-id":"use-yandex-cloud-authorization-switch",id:"useYandexCloudAuthorization",value:o.useYandexCloudAuthorization||!1,onChange:e=>f("useYandexCloudAuthorization",e.currentTarget.checked)})),o.useYandexCloudAuthorization&&pi().createElement(pi().Fragment,null,pi().createElement(yi.InlineField,{label:"X-ClickHouse-User",labelWidth:36},pi().createElement(yi.Input,{id:"xHeaderUser","data-test-id":"x-header-user-input",onChange:(0,e.onUpdateDatasourceJsonDataOption)(t,"xHeaderUser"),value:o.xHeaderUser||"",placeholder:"DB user name"})),pi().createElement(yi.InlineField,{label:"X-ClickHouse-Key",labelWidth:36},pi().createElement(yi.SecretInput,{"data-test-id":"x-header-key-input",isConfigured:!!(null===(a=l)||void 0===a?void 0:a.xHeaderKey),value:u.xHeaderKey||"",placeholder:"DB user password",onReset:()=>{r(qs(Ps({},i),{secureJsonFields:qs(Ps({},l),{xHeaderKey:!1}),secureJsonData:qs(Ps({},u),{xHeaderKey:""})}))},onChange:e=>{r(qs(Ps({},i),{secureJsonFields:Ps({},l),secureJsonData:qs(Ps({},u),{xHeaderKey:e.currentTarget.value})}))}})),pi().createElement(yi.InlineField,{label:"X-ClickHouse-SSL-Certificate-Auth",labelWidth:36,tooltip:"Requires non empty X-ClickHouse-User and TLS/SSL client key and client cert, doesn't work with basic authorization"},pi().createElement(yi.InlineSwitch,{"data-test-id":"x-clickhouse-ssl-certificate-auth",id:"xClickHouseSSLCertificateAuth",value:o.xClickHouseSSLCertificateAuth||!1,onChange:e=>f("xClickHouseSSLCertificateAuth",e.currentTarget.checked)})))),pi().createElement(Us,{jsonData:o,newOptions:s,onSwitchToggle:f,onFieldChange:(e,t)=>{o[t]=e.value,r(qs(Ps({},i),{jsonData:Ps({},o)}))}}),pi().createElement("h3",{className:"page-heading"},"Additional"),pi().createElement("div",{className:"gf-form-group"},pi().createElement(yi.InlineField,{label:"Add CORS flag to requests",labelWidth:32,tooltip:"Whether 'add_http_cors_header=1' parameter should be attached to requests. Remember that read-only users cannot override this setting."},pi().createElement(yi.InlineSwitch,{id:"addCorsHeader","data-test-id":"add-cors-header-switch",value:o.addCorsHeader||!1,onChange:e=>f("addCorsHeader",e.currentTarget.checked)})),pi().createElement(yi.InlineField,{label:"Use POST method to send queries",labelWidth:32,tooltip:"Remember that it's possible to change data via POST requests. Better to avoid using POST method if you connecting not as Read-Only user."},pi().createElement(yi.InlineSwitch,{"data-test-id":"use-post-method-switch",id:"usePOST",value:o.usePOST||!1,onChange:e=>f("usePOST",e.currentTarget.checked)})),pi().createElement(yi.InlineField,{label:"Default database",labelWidth:32,tooltip:"If you set the default database for this datasource, it will be prefilled in the query builder, and used to make ad-hoc filters more convenient."},pi().createElement(yi.Input,{"data-test-id":"default-database-input",value:o.defaultDatabase||"default",placeholder:"default",onChange:(0,e.onUpdateDatasourceJsonDataOption)(t,"defaultDatabase")})),pi().createElement(yi.InlineField,{label:"Use Compression",labelWidth:32,tooltip:"Add `Accept-Encoding` header in each request."},pi().createElement(yi.InlineSwitch,{"data-test-id":"use-compression-switch",id:"useCompressions",value:o.useCompression||!1,onChange:e=>f("useCompression",e.currentTarget.checked)})),pi().createElement(yi.InlineField,{label:"Compressions type",labelWidth:32,tooltip:"read https://clickhouse.com/docs/en/interfaces/http#compression for details"},pi().createElement(yi.Select,{"data-test-id":"compression-type-select",id:"compressionType",allowCustomValue:!1,width:24,value:c,onChange:({value:e})=>{return d((t={value:e}).value),o.compressionType=t.value,void r(qs(Ps({},i),{jsonData:Ps({},o)}));var t},options:Ls})),pi().createElement(yi.InlineField,{label:"Configure AdHoc Filters request",labelWidth:32,tooltip:"To be able to configure request properfly please use macroses {field} {database} {table}"},pi().createElement("div",{style:{position:"relative",minWidth:"600px"}},pi().createElement(yi.CodeEditor,{height:Math.max(18*(o.adHocValuesQuery||"").split("\n").length,150),value:m,language:Fi,monacoOptions:qi,onChange:h}))),pi().createElement(yi.InlineField,{label:"Hide table names in adhoc filters",labelWidth:32,tooltip:"Applicable if you want adhoc with short filed names"},pi().createElement(yi.InlineSwitch,{"data-test-id":"adhoc-hide-table-names",id:"adhoc",value:o.adHocHideTableNames||!1,onChange:e=>f("adHocHideTableNames",e.currentTarget.checked)}))))})).setQueryEditor(Is)})(),l})()));
//# sourceMappingURL=module.js.map