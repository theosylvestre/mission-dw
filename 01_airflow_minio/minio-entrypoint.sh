#!/bin/sh
set -e

echo "‚è≥ Attente de la disponibilit√© de MinIO..."

until mc alias set local "http://${DOCKER_MINIO_HOSTNAME}:${DOCKER_MINIO_PORT}" ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
 do
  echo "‚è±Ô∏è MinIO pas encore pr√™t, nouvelle tentative dans 2s..."
  sleep 2
done

echo "‚úÖ MinIO est accessible."

# Cr√©ation des buckets
mc mb -p "local/${MINIO_DAGS_BUCKET}" || echo "‚ÑπÔ∏è Bucket ${MINIO_DAGS_BUCKET} d√©j√† pr√©sent."
mc mb -p "local/${MINIO_LOGS_BUCKET}" || echo "‚ÑπÔ∏è Bucket ${MINIO_LOGS_BUCKET} d√©j√† pr√©sent."

# Cr√©ation utilisateur
mc admin user add local ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} || echo "‚ÑπÔ∏è L'utilisateur ${AWS_ACCESS_KEY_ID} existe d√©j√†."

# Cr√©ation de la policy
cat <<EOF > /tmp/airflow-logs-policy.json
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "s3:GetObject",
        "s3:PutObject",
        "s3:DeleteObject",
        "s3:ListBucket",
        "s3:GetObjectVersion"
      ],
      "Resource": [
        "arn:aws:s3:::${MINIO_LOGS_BUCKET}",
        "arn:aws:s3:::${MINIO_LOGS_BUCKET}/*",
        "arn:aws:s3:::${MINIO_DAGS_BUCKET}",
        "arn:aws:s3:::${MINIO_DAGS_BUCKET}/*"
      ]
    }
  ]
}
EOF

# Ajout de la policy
mc admin policy create local airflow-logs-policy /tmp/airflow-logs-policy.json || echo "‚ÑπÔ∏è Policy d√©j√† existante."
mc admin policy attach local airflow-logs-policy --user ${AWS_ACCESS_KEY_ID} || echo "‚ÑπÔ∏è Policy d√©j√† attach√©e √† ${AWS_ACCESS_KEY_ID}."

### üîç V√âRIFICATIONS ###

echo "üîç V√©rification de la pr√©sence des policies d√©finies :"
mc admin policy list local | grep airflow-logs-policy && echo "‚úîÔ∏è Policy 'airflow-logs-policy' pr√©sente."

echo "üîç V√©rification des policies attach√©es √† l'utilisateur '${AWS_ACCESS_KEY_ID}':"
mc admin user info local ${AWS_ACCESS_KEY_ID}

# Alias temporaire pour tester l'acc√®s avec l'utilisateur Airflow
echo "üîê Test d'acc√®s en tant qu'utilisateur Airflow (${AWS_ACCESS_KEY_ID})..."
mc alias set ${AWS_ACCESS_KEY_ID} "http://${DOCKER_MINIO_HOSTNAME}:${DOCKER_MINIO_PORT}" ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}

echo "üìÅ Listing des buckets pour v√©rifier l'acc√®s :"
mc ls ${AWS_ACCESS_KEY_ID}

echo "üìÇ Test de lecture/√©criture dans ${MINIO_LOGS_BUCKET}..."
echo "hello-from-${AWS_ACCESS_KEY_ID}" | mc pipe "${AWS_ACCESS_KEY_ID}/${MINIO_LOGS_BUCKET}/access-test.txt" && echo "‚úîÔ∏è √âcriture r√©ussie"

echo "üìÑ Lecture de l'objet √©crit :"
mc cat "${AWS_ACCESS_KEY_ID}/${MINIO_LOGS_BUCKET}/access-test.txt"

echo "‚úÖ V√©rification compl√®te termin√©e. L'utilisateur Airflow a acc√®s aux buckets n√©cessaires."
