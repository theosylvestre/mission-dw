{"timestamp":"2025-06-19T14:10:02.538105","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-19T14:10:02.539044","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/hello_world_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-19T14:10:02.565564","level":"info","event":"üîç Ex√©cution de la t√¢che 'branching'","logger":"root"}
{"timestamp":"2025-06-19T14:10:02.565978","level":"info","event":"üì¶ kwargs re√ßus : {'dag': <DAG: branch_without_trigger>, 'inlets': [], 'map_index_template': None, 'outlets': [], 'run_id': 'manual__2025-06-19T14:10:00.694740+00:00', 'task': <Task(_BranchPythonDecoratedOperator): branching>, 'task_instance': RuntimeTaskInstance(id=UUID('01978886-6d8f-7dca-accf-c6b187b5f576'), task_id='branching', dag_id='branch_without_trigger', run_id='manual__2025-06-19T14:10:00.694740+00:00', try_number=1, map_index=-1, hostname='d19310e2f247', context_carrier={}, task=<Task(_BranchPythonDecoratedOperator): branching>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 6, 19, 14, 10, 2, 452785, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None), 'ti': RuntimeTaskInstance(id=UUID('01978886-6d8f-7dca-accf-c6b187b5f576'), task_id='branching', dag_id='branch_without_trigger', run_id='manual__2025-06-19T14:10:00.694740+00:00', try_number=1, map_index=-1, hostname='d19310e2f247', context_carrier={}, task=<Task(_BranchPythonDecoratedOperator): branching>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 6, 19, 14, 10, 2, 452785, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None), 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x70fb937180d0>, 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}), 'macros': <MacrosAccessor (dynamic access to macros)>, 'params': {}, 'var': {'json': <VariableAccessor (dynamic access)>, 'value': <VariableAccessor (dynamic access)>}, 'conn': <ConnectionAccessor (dynamic access)>, 'dag_run': DagRun(dag_id='branch_without_trigger', run_id='manual__2025-06-19T14:10:00.694740+00:00', logical_date=datetime.datetime(2025, 6, 19, 14, 9, 59, 716000, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 6, 19, 14, 9, 59, 716000, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 6, 19, 14, 9, 59, 716000, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 6, 19, 14, 9, 59, 716000, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 6, 19, 14, 10, 1, 480958, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})), 'task_instance_key_str': 'branch_without_trigger__branching__20250619', 'task_reschedule_count': 0, 'prev_start_date_success': <Proxy at 0x70fb936fe730 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x70fb93723160>>, 'prev_end_date_success': <Proxy at 0x70fb936fe6a0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x70fb937231f0>>, 'logical_date': DateTime(2025, 6, 19, 14, 9, 59, 716000, tzinfo=Timezone('UTC')), 'ds': '2025-06-19', 'ds_nodash': '20250619', 'ts': '2025-06-19T14:09:59.716000+00:00', 'ts_nodash': '20250619T140959', 'ts_nodash_with_tz': '20250619T140959.716000+0000', 'data_interval_end': DateTime(2025, 6, 19, 14, 9, 59, 716000, tzinfo=Timezone('UTC')), 'data_interval_start': DateTime(2025, 6, 19, 14, 9, 59, 716000, tzinfo=Timezone('UTC')), 'prev_data_interval_start_success': <Proxy at 0x70fb936fe610 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x70fb93723280>>, 'prev_data_interval_end_success': <Proxy at 0x70fb936fe5b0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x70fb93723310>>, 'templates_dict': None}","logger":"root"}
{"timestamp":"2025-06-19T14:10:02.566076","level":"info","event":"üîÄ Branche s√©lectionn√©e : branch_a","logger":"root"}
{"timestamp":"2025-06-19T14:10:02.566155","level":"info","event":"Done. Returned value was: branch_a","logger":"airflow.task.operators.airflow.providers.standard.decorators.branch_python._BranchPythonDecoratedOperator"}
{"timestamp":"2025-06-19T14:10:02.566233","level":"info","event":"Branch into branch_a","logger":"airflow.task.operators.airflow.providers.standard.decorators.branch_python._BranchPythonDecoratedOperator"}
{"timestamp":"2025-06-19T14:10:02.568638","level":"info","event":"Following branch {'branch_a'}","logger":"airflow.task.operators.airflow.providers.standard.decorators.branch_python._BranchPythonDecoratedOperator"}
{"timestamp":"2025-06-19T14:10:02.568881","level":"info","event":"Skipping tasks [('branch_false', -1)]","logger":"airflow.task.operators.airflow.providers.standard.decorators.branch_python._BranchPythonDecoratedOperator"}
{"timestamp":"2025-06-19T14:10:02.569465","level":"info","event":"Skipping downstream tasks.","logger":"task"}
